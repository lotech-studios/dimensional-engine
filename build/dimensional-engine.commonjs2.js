/*! For license information please see dimensional-engine.commonjs2.js.LICENSE.txt */
(()=>{"use strict";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{ECS:()=>c,Geometries:()=>h,System:()=>ow,Three:()=>s,Utils:()=>l});var n={};e.r(n),e.d(n,{getIndex:()=>d,removeIndex:()=>p,removeValue:()=>m,sortHighestToLowest:()=>f,sortLowestToHighest:()=>g});var i={};e.r(i),e.d(i,{StorageTable:()=>x,checkParam:()=>v,createStorageTable:()=>y});var s={};e.r(s),e.d(s,{ACESFilmicToneMapping:()=>xe,AddEquation:()=>V,AddOperation:()=>de,AdditiveAnimationBlendMode:()=>Ht,AdditiveBlending:()=>z,AlphaFormat:()=>Ze,AlwaysDepth:()=>ie,AlwaysStencilFunc:()=>vn,AmbientLight:()=>rd,AmbientLightProbe:()=>Md,AnimationClip:()=>Nu,AnimationLoader:()=>Uu,AnimationMixer:()=>Jd,AnimationObjectGroup:()=>Yd,AnimationUtils:()=>gu,ArcCurve:()=>Dc,ArrayCamera:()=>dl,ArrowHelper:()=>Gp,Audio:()=>Dd,AudioAnalyser:()=>Vd,AudioContext:()=>yd,AudioListener:()=>Id,AudioLoader:()=>_d,AxesHelper:()=>Hp,BackSide:()=>P,BasicDepthPacking:()=>Zt,BasicShadowMap:()=>A,Bone:()=>Ql,BooleanKeyframeTrack:()=>Mu,Box2:()=>cp,Box3:()=>Ei,Box3Helper:()=>Fp,BoxBufferGeometry:()=>Kp,BoxGeometry:()=>Er,BoxHelper:()=>zp,BufferAttribute:()=>Gs,BufferGeometry:()=>ar,BufferGeometryLoader:()=>dd,ByteType:()=>Be,Cache:()=>Ru,Camera:()=>Rr,CameraHelper:()=>Ip,CanvasTexture:()=>Rc,CapsuleBufferGeometry:()=>Qp,CapsuleGeometry:()=>th,CatmullRomCurve3:()=>Vc,CineonToneMapping:()=>ge,CircleBufferGeometry:()=>em,CircleGeometry:()=>nh,ClampToEdgeWrapping:()=>Ee,Clock:()=>Ad,Color:()=>li,ColorKeyframeTrack:()=>wu,ColorManagement:()=>ti,CompressedTexture:()=>Lc,CompressedTextureLoader:()=>Bu,ConeBufferGeometry:()=>tm,ConeGeometry:()=>sh,CubeCamera:()=>Dr,CubeReflectionMapping:()=>_e,CubeRefractionMapping:()=>be,CubeTexture:()=>Or,CubeTextureLoader:()=>ku,CubeUVReflectionMapping:()=>Se,CubicBezierCurve:()=>Wc,CubicBezierCurve3:()=>jc,CubicInterpolant:()=>vu,CullFaceBack:()=>S,CullFaceFront:()=>T,CullFaceFrontBack:()=>E,CullFaceNone:()=>w,Curve:()=>Pc,CurvePath:()=>Kc,CustomBlending:()=>B,CustomToneMapping:()=>ve,CylinderBufferGeometry:()=>nm,CylinderGeometry:()=>ih,Cylindrical:()=>op,Data3DTexture:()=>yi,DataArrayTexture:()=>xi,DataTexture:()=>ec,DataTexture2DArray:()=>$p,DataTexture3D:()=>Jp,DataTextureLoader:()=>Gu,DataUtils:()=>qp,DecrementStencilOp:()=>on,DecrementWrapStencilOp:()=>cn,DefaultLoadingManager:()=>Iu,DepthFormat:()=>et,DepthStencilFormat:()=>tt,DepthTexture:()=>gl,DirectionalLight:()=>sd,DirectionalLightHelper:()=>Lp,DiscreteInterpolant:()=>_u,DodecahedronBufferGeometry:()=>im,DodecahedronGeometry:()=>ah,DoubleSide:()=>I,DstAlphaFactor:()=>J,DstColorFactor:()=>Q,DynamicCopyUsage:()=>En,DynamicDrawUsage:()=>_n,DynamicReadUsage:()=>wn,EdgesGeometry:()=>uh,EllipseCurve:()=>Ic,EqualDepth:()=>ae,EqualStencilFunc:()=>pn,EquirectangularReflectionMapping:()=>Me,EquirectangularRefractionMapping:()=>we,Euler:()=>hs,EventDispatcher:()=>Rn,ExtrudeBufferGeometry:()=>sm,ExtrudeGeometry:()=>Vh,FileLoader:()=>Fu,Float16BufferAttribute:()=>$s,Float32BufferAttribute:()=>Js,Float64BufferAttribute:()=>Ks,FloatType:()=>We,Fog:()=>wl,FogExp2:()=>Ml,FramebufferTexture:()=>Nc,FrontSide:()=>R,Frustum:()=>Hr,GLBufferAttribute:()=>np,GLSL1:()=>Cn,GLSL3:()=>Nn,GreaterDepth:()=>le,GreaterEqualDepth:()=>oe,GreaterEqualStencilFunc:()=>xn,GreaterStencilFunc:()=>fn,GridHelper:()=>Tp,Group:()=>pl,HalfFloatType:()=>je,HemisphereLight:()=>ju,HemisphereLightHelper:()=>Sp,HemisphereLightProbe:()=>bd,IcosahedronBufferGeometry:()=>rm,IcosahedronGeometry:()=>Gh,ImageBitmapLoader:()=>xd,ImageLoader:()=>Vu,ImageUtils:()=>hi,ImmediateRenderObject:()=>Yp,IncrementStencilOp:()=>an,IncrementWrapStencilOp:()=>ln,InstancedBufferAttribute:()=>sc,InstancedBufferGeometry:()=>ud,InstancedInterleavedBuffer:()=>tp,InstancedMesh:()=>cc,Int16BufferAttribute:()=>Xs,Int32BufferAttribute:()=>Ys,Int8BufferAttribute:()=>Hs,IntType:()=>Ge,InterleavedBuffer:()=>Tl,InterleavedBufferAttribute:()=>Al,Interpolant:()=>xu,InterpolateDiscrete:()=>zt,InterpolateLinear:()=>Ft,InterpolateSmooth:()=>Ut,InvertStencilOp:()=>hn,KeepStencilOp:()=>sn,KeyframeTrack:()=>bu,LOD:()=>Xl,LatheBufferGeometry:()=>am,LatheGeometry:()=>eh,Layers:()=>us,LessDepth:()=>se,LessEqualDepth:()=>re,LessEqualStencilFunc:()=>mn,LessStencilFunc:()=>dn,Light:()=>Wu,LightProbe:()=>ld,Line:()=>gc,Line3:()=>dp,LineBasicMaterial:()=>hc,LineCurve:()=>Xc,LineCurve3:()=>qc,LineDashedMaterial:()=>cu,LineLoop:()=>_c,LineSegments:()=>yc,LinearEncoding:()=>qt,LinearFilter:()=>Ie,LinearInterpolant:()=>yu,LinearMipMapLinearFilter:()=>Fe,LinearMipMapNearestFilter:()=>Oe,LinearMipmapLinearFilter:()=>ze,LinearMipmapNearestFilter:()=>De,LinearSRGBColorSpace:()=>tn,LinearToneMapping:()=>me,Loader:()=>Du,LoaderUtils:()=>hd,LoadingManager:()=>Pu,LoopOnce:()=>It,LoopPingPong:()=>Ot,LoopRepeat:()=>Dt,LuminanceAlphaFormat:()=>Qe,LuminanceFormat:()=>Ke,MOUSE:()=>b,Material:()=>Us,MaterialLoader:()=>cd,MathUtils:()=>jn,Matrix3:()=>qn,Matrix4:()=>es,MaxEquation:()=>W,Mesh:()=>Sr,MeshBasicMaterial:()=>Bs,MeshDepthMaterial:()=>al,MeshDistanceMaterial:()=>ol,MeshLambertMaterial:()=>ou,MeshMatcapMaterial:()=>lu,MeshNormalMaterial:()=>au,MeshPhongMaterial:()=>su,MeshPhysicalMaterial:()=>iu,MeshStandardMaterial:()=>nu,MeshToonMaterial:()=>ru,MinEquation:()=>H,MirroredRepeatWrapping:()=>Ae,MixOperation:()=>ue,MultiplyBlending:()=>U,MultiplyOperation:()=>he,NearestFilter:()=>Ce,NearestMipMapLinearFilter:()=>Pe,NearestMipMapNearestFilter:()=>Le,NearestMipmapLinearFilter:()=>Re,NearestMipmapNearestFilter:()=>Ne,NeverDepth:()=>ne,NeverStencilFunc:()=>un,NoBlending:()=>D,NoColorSpace:()=>Qt,NoToneMapping:()=>pe,NormalAnimationBlendMode:()=>Gt,NormalBlending:()=>O,NotEqualDepth:()=>ce,NotEqualStencilFunc:()=>gn,NumberKeyframeTrack:()=>Su,Object3D:()=>Ts,ObjectLoader:()=>pd,ObjectSpaceNormalMap:()=>Kt,OctahedronBufferGeometry:()=>om,OctahedronGeometry:()=>Hh,OneFactor:()=>X,OneMinusDstAlphaFactor:()=>K,OneMinusDstColorFactor:()=>ee,OneMinusSrcAlphaFactor:()=>$,OneMinusSrcColorFactor:()=>Y,OrthographicCamera:()=>na,PCFShadowMap:()=>C,PCFSoftShadowMap:()=>N,PMREMGenerator:()=>ha,Path:()=>Qc,PerspectiveCamera:()=>Pr,Plane:()=>Vr,PlaneBufferGeometry:()=>lm,PlaneGeometry:()=>Xr,PlaneHelper:()=>Up,PointLight:()=>nd,PointLightHelper:()=>_p,Points:()=>Ec,PointsMaterial:()=>bc,PolarGridHelper:()=>Ep,PolyhedronBufferGeometry:()=>cm,PolyhedronGeometry:()=>rh,PositionalAudio:()=>Bd,PropertyBinding:()=>qd,PropertyMixer:()=>kd,QuadraticBezierCurve:()=>Yc,QuadraticBezierCurve3:()=>Zc,Quaternion:()=>Mi,QuaternionKeyframeTrack:()=>Eu,QuaternionLinearInterpolant:()=>Tu,REVISION:()=>_,RGBADepthPacking:()=>$t,RGBAFormat:()=>Je,RGBAIntegerFormat:()=>at,RGBA_ASTC_10x10_Format:()=>Nt,RGBA_ASTC_10x5_Format:()=>Et,RGBA_ASTC_10x6_Format:()=>At,RGBA_ASTC_10x8_Format:()=>Ct,RGBA_ASTC_12x10_Format:()=>Lt,RGBA_ASTC_12x12_Format:()=>Rt,RGBA_ASTC_4x4_Format:()=>vt,RGBA_ASTC_5x4_Format:()=>yt,RGBA_ASTC_5x5_Format:()=>_t,RGBA_ASTC_6x5_Format:()=>bt,RGBA_ASTC_6x6_Format:()=>Mt,RGBA_ASTC_8x5_Format:()=>wt,RGBA_ASTC_8x6_Format:()=>St,RGBA_ASTC_8x8_Format:()=>Tt,RGBA_BPTC_Format:()=>Pt,RGBA_ETC2_EAC_Format:()=>xt,RGBA_PVRTC_2BPPV1_Format:()=>mt,RGBA_PVRTC_4BPPV1_Format:()=>pt,RGBA_S3TC_DXT1_Format:()=>lt,RGBA_S3TC_DXT3_Format:()=>ct,RGBA_S3TC_DXT5_Format:()=>ht,RGBFormat:()=>$e,RGB_ETC1_Format:()=>ft,RGB_ETC2_Format:()=>gt,RGB_PVRTC_2BPPV1_Format:()=>dt,RGB_PVRTC_4BPPV1_Format:()=>ut,RGB_S3TC_DXT1_Format:()=>ot,RGFormat:()=>st,RGIntegerFormat:()=>rt,RawShaderMaterial:()=>tu,Ray:()=>Qi,Raycaster:()=>ip,RectAreaLight:()=>ad,RedFormat:()=>nt,RedIntegerFormat:()=>it,ReinhardToneMapping:()=>fe,RepeatWrapping:()=>Te,ReplaceStencilOp:()=>rn,ReverseSubtractEquation:()=>G,RingBufferGeometry:()=>hm,RingGeometry:()=>Wh,SRGBColorSpace:()=>en,Scene:()=>Sl,ShaderChunk:()=>qr,ShaderLib:()=>Zr,ShaderMaterial:()=>Lr,ShadowMaterial:()=>eu,Shape:()=>dh,ShapeBufferGeometry:()=>um,ShapeGeometry:()=>jh,ShapePath:()=>Wp,ShapeUtils:()=>Fh,ShortType:()=>Ve,Skeleton:()=>ic,SkeletonHelper:()=>vp,SkinnedMesh:()=>Kl,Source:()=>ui,Sphere:()=>ji,SphereBufferGeometry:()=>dm,SphereGeometry:()=>Xh,Spherical:()=>ap,SphericalHarmonics3:()=>od,SplineCurve:()=>$c,SpotLight:()=>Ju,SpotLightHelper:()=>mp,Sprite:()=>Gl,SpriteMaterial:()=>Cl,SrcAlphaFactor:()=>Z,SrcAlphaSaturateFactor:()=>te,SrcColorFactor:()=>q,StaticCopyUsage:()=>Tn,StaticDrawUsage:()=>yn,StaticReadUsage:()=>Mn,StereoCamera:()=>Ed,StreamCopyUsage:()=>An,StreamDrawUsage:()=>bn,StreamReadUsage:()=>Sn,StringKeyframeTrack:()=>Au,SubtractEquation:()=>k,SubtractiveBlending:()=>F,TOUCH:()=>M,TangentSpaceNormalMap:()=>Jt,TetrahedronBufferGeometry:()=>pm,TetrahedronGeometry:()=>qh,Texture:()=>mi,TextureLoader:()=>Hu,TorusBufferGeometry:()=>mm,TorusGeometry:()=>Yh,TorusKnotBufferGeometry:()=>fm,TorusKnotGeometry:()=>Zh,Triangle:()=>zs,TriangleFanDrawMode:()=>Xt,TriangleStripDrawMode:()=>jt,TrianglesDrawMode:()=>Wt,TubeBufferGeometry:()=>gm,TubeGeometry:()=>$h,UVMapping:()=>ye,Uint16BufferAttribute:()=>qs,Uint32BufferAttribute:()=>Zs,Uint8BufferAttribute:()=>Ws,Uint8ClampedBufferAttribute:()=>js,Uniform:()=>Kd,UniformsGroup:()=>ep,UniformsLib:()=>Yr,UniformsUtils:()=>Nr,UnsignedByteType:()=>Ue,UnsignedInt248Type:()=>Ye,UnsignedIntType:()=>He,UnsignedShort4444Type:()=>Xe,UnsignedShort5551Type:()=>qe,UnsignedShortType:()=>ke,VSMShadowMap:()=>L,Vector2:()=>Xn,Vector3:()=>wi,Vector4:()=>fi,VectorKeyframeTrack:()=>Cu,VideoTexture:()=>Cc,WebGL1Renderer:()=>bl,WebGL3DRenderTarget:()=>_i,WebGLArrayRenderTarget:()=>vi,WebGLCubeRenderTarget:()=>zr,WebGLMultipleRenderTargets:()=>bi,WebGLMultisampleRenderTarget:()=>Zp,WebGLRenderTarget:()=>gi,WebGLRenderer:()=>_l,WebGLUtils:()=>ul,WireframeGeometry:()=>Jh,WrapAroundEnding:()=>kt,ZeroCurvatureEnding:()=>Bt,ZeroFactor:()=>j,ZeroSlopeEnding:()=>Vt,ZeroStencilOp:()=>nn,_SRGBAFormat:()=>Ln,sRGBEncoding:()=>Yt});var r={};e.r(r),e.d(r,{State:()=>_m,createState:()=>bm});var a={};e.r(a),e.d(a,{bob:()=>wm,generateUUID:()=>Sm,random:()=>Tm,randomColor:()=>Em,randomThreeColor:()=>Am});var o={};e.r(o),e.d(o,{RendererStorageTable:()=>Cm});var l={};e.r(l),e.d(l,{Array:()=>n,Interface:()=>r,Math:()=>a,Renderer:()=>o,Script:()=>i});var c={};e.r(c),e.d(c,{CameraComponent:()=>ym,Component:()=>xm,DirectionalLightComponent:()=>Nm,Entity:()=>km,InstancedMeshBoxComponent:()=>Rm,InstancedMeshComponent:()=>Lm,MeshComponent:()=>Pm,OrbitCameraControlsComponent:()=>Fm,RandomRotateInstancedMeshComponent:()=>Um,RandomRotateMeshComponent:()=>Bm,ThreeObjectComponent:()=>vm});var h={};e.r(h),e.d(h,{TerrainPlaneGeometry:()=>Hm});var u={};function d(e,t){return e.indexOf(t)}function p(e,t){e.splice(t,1)}function m(e,t,n="once"){if("all"==n)for(let n=0;n<e.length;n++)e[n]==t&&p(e,n);else p(e,d(e,t))}function f(e){return e.sort(((e,t)=>t-e))}function g(e){return e.sort(((e,t)=>e-t))}e.r(u),e.d(u,{AONode:()=>L_,AnalyticLightNode:()=>v_,ArrayElementNode:()=>hg,ArrayUniformNode:()=>tf,AttributeNode:()=>sf,BRDF_GGX:()=>Z_,BRDF_Lambert:()=>$_,BitangentNode:()=>qf,BlendModeNode:()=>s_,BufferNode:()=>Yf,BypassNode:()=>rf,CameraNode:()=>kf,CheckerNode:()=>k_,CodeNode:()=>af,ColorAdjustmentNode:()=>c_,ColorSpaceNode:()=>d_,ComputeNode:()=>lg,CondNode:()=>cg,ConstNode:()=>of,ContextNode:()=>lf,ConvertNode:()=>ug,CubeTextureNode:()=>Yy,DFGApprox:()=>K_,D_GGX:()=>q_,EPSILON:()=>Sx,EnvironmentNode:()=>N_,ExpressionNode:()=>hf,F_Schlick:()=>W_,FogNode:()=>G_,FogRangeNode:()=>H_,FrontFacingNode:()=>og,FunctionCallNode:()=>uf,FunctionNode:()=>df,GLSLNodeParser:()=>uM,HemisphereLightNode:()=>E_,INFINITY:()=>Tx,InstanceIndexNode:()=>pf,InstanceNode:()=>Zy,JoinNode:()=>dg,LightingContextNode:()=>S_,LightingNode:()=>x_,LightsNode:()=>__,LineBasicNodeMaterial:()=>kb,MatcapUVNode:()=>R_,MaterialNode:()=>eg,MaterialReferenceNode:()=>Kf,MathNode:()=>Of,MaxMipLevelNode:()=>A_,MeshBasicNodeMaterial:()=>Hb,MeshPhysicalNodeMaterial:()=>pM,MeshStandardNodeMaterial:()=>jb,ModelNode:()=>Bf,ModelViewProjectionNode:()=>ig,Node:()=>Km,NodeAttribute:()=>mf,NodeBuilder:()=>Tf,NodeCode:()=>vf,NodeFrame:()=>Ef,NodeFunctionInput:()=>Cf,NodeKeywords:()=>yf,NodeLoader:()=>B_,NodeMaterial:()=>Bb,NodeMaterialLoader:()=>Jb,NodeObjectLoader:()=>Kb,NodeShaderStage:()=>Wm,NodeType:()=>Xm,NodeUniform:()=>ff,NodeUpdateType:()=>jm,NodeVar:()=>xf,NodeVarying:()=>gf,NormalMapNode:()=>m_,NormalNode:()=>Hf,Object3DNode:()=>Ff,OperatorNode:()=>Rf,OscNode:()=>O_,PhysicalLightingModel:()=>sb,PointUVNode:()=>sg,PointsNodeMaterial:()=>qb,PositionNode:()=>ng,PropertyNode:()=>Nf,PunctualLightNode:()=>w_,RangeNode:()=>Ky,ReferenceNode:()=>Jf,ReflectVectorNode:()=>qy,RemapNode:()=>z_,RotateUVNode:()=>F_,ShaderNode:()=>yg,SkinningNode:()=>Jy,SplitNode:()=>If,SpriteNodeMaterial:()=>Zb,SpriteSheetUVNode:()=>U_,TBNViewMatrix:()=>Xy,TangentNode:()=>jf,TempNode:()=>cf,TextureNode:()=>$f,TimerNode:()=>I_,ToneMappingNode:()=>g_,UVNode:()=>Zf,UniformNode:()=>ef,UserDataNode:()=>ag,V_GGX_SmithCorrelated:()=>X_,VarNode:()=>Pf,VaryingNode:()=>nf,WGSLNodeParser:()=>aM,abs:()=>hv,acos:()=>lv,add:()=>Ax,alphaTest:()=>ey,and:()=>Ux,asin:()=>ov,assign:()=>Ix,atan:()=>cv,atan2:()=>vv,attribute:()=>dx,bitAnd:()=>kx,bitOr:()=>Gx,bitXor:()=>Hx,bitangentGeometry:()=>vy,bitangentLocal:()=>yy,bitangentView:()=>_y,bitangentWorld:()=>by,bmat3:()=>sx,bmat4:()=>lx,bool:()=>Gg,buffer:()=>Fv,burn:()=>cb,bvec2:()=>Xg,bvec3:()=>$g,bvec4:()=>ex,bypass:()=>fx,call:()=>yx,cameraNormalMatrix:()=>kv,cameraPosition:()=>Hv,cameraProjectionMatrix:()=>Bv,cameraViewMatrix:()=>Vv,cameraWorldMatrix:()=>Gv,ceil:()=>tv,checker:()=>zb,clamp:()=>Iv,code:()=>gx,color:()=>Ug,colorSpace:()=>gb,compute:()=>Uy,cond:()=>Ex,context:()=>xx,convert:()=>mx,cos:()=>rv,cross:()=>Ev,cubeTexture:()=>rb,dFdx:()=>fv,dFdy:()=>gv,defaultShaderStages:()=>_f,degrees:()=>qx,difference:()=>Wy,diffuseColor:()=>Jv,distance:()=>Sv,div:()=>Lx,dodge:()=>hb,dot:()=>Tv,dotNV:()=>jy,element:()=>ky,equal:()=>Px,exp:()=>Yx,exp2:()=>Zx,expression:()=>vx,faceDirection:()=>Vy,faceforward:()=>zv,float:()=>Bg,floor:()=>ev,fn:()=>ux,fog:()=>Fb,fract:()=>iv,frameId:()=>Db,fromType:()=>ZM,frontFacing:()=>By,func:()=>cx,getDistanceAttenuation:()=>b_,getGeometryRoughness:()=>Q_,getRoughness:()=>tb,greaterThan:()=>Ox,greaterThanEqual:()=>Fx,hue:()=>fb,imat3:()=>nx,imat4:()=>ax,instance:()=>ab,instanceIndex:()=>_x,int:()=>Vg,inversesqrt:()=>Qx,invert:()=>mv,ivec2:()=>Wg,ivec3:()=>Yg,ivec4:()=>Kg,label:()=>bx,length:()=>dv,lessThan:()=>Dx,lessThanEqual:()=>zx,lightingContext:()=>_b,lights:()=>yb,log:()=>$x,log2:()=>Jx,lumaCoeffs:()=>Gy,luminance:()=>Hy,mat3:()=>tx,mat4:()=>rx,matcapUV:()=>bb,materialAlphaTest:()=>Wv,materialColor:()=>jv,materialEmissive:()=>Xv,materialMetalness:()=>Zv,materialOpacity:()=>qv,materialReference:()=>iy,materialRotation:()=>$v,materialRoughness:()=>Yv,max:()=>_v,maxMipLevel:()=>Mb,metalness:()=>Qv,min:()=>yv,mix:()=>Pv,mod:()=>bv,modelNormalMatrix:()=>Ty,modelPosition:()=>Ay,modelViewMatrix:()=>Sy,modelViewPosition:()=>Cy,modelViewProjection:()=>ry,modelWorldMatrix:()=>Ey,mul:()=>Nx,mx_aastep:()=>CM,mx_cell_noise_float:()=>HM,mx_fractal_noise_float:()=>WM,mx_fractal_noise_vec2:()=>jM,mx_fractal_noise_vec3:()=>XM,mx_fractal_noise_vec4:()=>qM,mx_hsvtorgb:()=>EM,mx_noise_float:()=>zM,mx_noise_vec2:()=>FM,mx_noise_vec3:()=>UM,mx_noise_vec4:()=>BM,mx_ramplr:()=>LM,mx_ramptb:()=>RM,mx_rgbtohsv:()=>AM,mx_splitlr:()=>IM,mx_splittb:()=>DM,mx_transform_uv:()=>OM,mx_worley_noise_float:()=>VM,mx_worley_noise_vec2:()=>kM,mx_worley_noise_vec3:()=>GM,negate:()=>pv,nodeArray:()=>Mg,nodeImmutable:()=>Sg,nodeObject:()=>_g,nodeObjects:()=>bg,nodeProxy:()=>wg,normalGeometry:()=>ay,normalLocal:()=>oy,normalMap:()=>xb,normalView:()=>ly,normalWorld:()=>cy,normalize:()=>nv,or:()=>Bx,oscSawtooth:()=>Eb,oscSine:()=>wb,oscSquare:()=>Sb,oscTriangle:()=>Tb,overlay:()=>ub,pointUV:()=>Fy,positionGeometry:()=>Ny,positionLocal:()=>Ly,positionView:()=>Py,positionViewDirection:()=>Iy,positionWorld:()=>Ry,pow:()=>Av,pow2:()=>Cv,pow3:()=>Nv,pow4:()=>Lv,property:()=>px,radians:()=>Xx,range:()=>Ob,rangeFog:()=>Ub,reference:()=>ny,reflect:()=>wv,reflectVector:()=>ob,refract:()=>Dv,remainder:()=>Rx,remap:()=>Ab,remapClamp:()=>Cb,rotateUV:()=>Nb,roughness:()=>Kv,round:()=>xv,sampler:()=>Oy,saturation:()=>pb,screen:()=>db,shiftLeft:()=>Wx,shiftRight:()=>jx,sign:()=>uv,sin:()=>sv,skinning:()=>lb,smoothstep:()=>Ov,specularColor:()=>ty,spritesheetUV:()=>Lb,sqrt:()=>Kx,step:()=>Mv,storage:()=>Uv,sub:()=>Cx,tan:()=>av,tangentGeometry:()=>dy,tangentLocal:()=>py,tangentView:()=>my,tangentWorld:()=>fy,temp:()=>Mx,texture:()=>Dy,timerDelta:()=>Ib,timerGlobal:()=>Pb,timerLocal:()=>Rb,toneMapping:()=>vb,transformDirection:()=>Rv,transformedBitangentView:()=>My,transformedBitangentWorld:()=>wy,transformedNormalView:()=>hy,transformedNormalWorld:()=>uy,transformedTangentView:()=>gy,transformedTangentWorld:()=>xy,uint:()=>kg,umat3:()=>ix,umat4:()=>ox,uniform:()=>hx,userData:()=>sy,uv:()=>zy,uvec2:()=>jg,uvec3:()=>Zg,uvec4:()=>Qg,varying:()=>wx,vec2:()=>Hg,vec3:()=>qg,vec4:()=>Jg,vibrance:()=>mb,xor:()=>Vx});class x{constructor(){this.array=[],this.uuidToIndex=[],this.nameToIndex=[]}#e(e,t){return!!("uuid"==e?this.uuidToIndex:this.nameToIndex).includes(t)}#t(e,t){const n=d("uuid"==e?this.uuidToIndex:this.nameToIndex,t);return this.array[n]}#n(e,t){for(let n of t){const t=d("uuid"==e?this.uuidToIndex:this.nameToIndex,n);p(this.array,t),p(this.nameToIndex,t),p(this.uuidToIndex,t)}}add(){for(let e of arguments)e.uuid&&e.name&&(this.array.push(e),this.uuidToIndex.push(e.uuid),this.nameToIndex.push(e.name))}check(e){return{byUUID:()=>this.#e("uuid",e),byName:()=>this.#e("name",e)}}get(e){return{byUUID:()=>this.#t("uuid",e),byName:()=>this.#t("name",e)}}remove(){return{byUUID:()=>this.#n("uuid",arguments),byName:()=>this.#n("name",arguments)}}}function v(e,t,n){return"boolean"==typeof e[t]?!0===e[t]:e[t]?e[t]:n}function y(){return new x}const _="145",b={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},M={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},w=0,S=1,T=2,E=3,A=0,C=1,N=2,L=3,R=0,P=1,I=2,D=0,O=1,z=2,F=3,U=4,B=5,V=100,k=101,G=102,H=103,W=104,j=200,X=201,q=202,Y=203,Z=204,$=205,J=206,K=207,Q=208,ee=209,te=210,ne=0,ie=1,se=2,re=3,ae=4,oe=5,le=6,ce=7,he=0,ue=1,de=2,pe=0,me=1,fe=2,ge=3,xe=4,ve=5,ye=300,_e=301,be=302,Me=303,we=304,Se=306,Te=1e3,Ee=1001,Ae=1002,Ce=1003,Ne=1004,Le=1004,Re=1005,Pe=1005,Ie=1006,De=1007,Oe=1007,ze=1008,Fe=1008,Ue=1009,Be=1010,Ve=1011,ke=1012,Ge=1013,He=1014,We=1015,je=1016,Xe=1017,qe=1018,Ye=1020,Ze=1021,$e=1022,Je=1023,Ke=1024,Qe=1025,et=1026,tt=1027,nt=1028,it=1029,st=1030,rt=1031,at=1033,ot=33776,lt=33777,ct=33778,ht=33779,ut=35840,dt=35841,pt=35842,mt=35843,ft=36196,gt=37492,xt=37496,vt=37808,yt=37809,_t=37810,bt=37811,Mt=37812,wt=37813,St=37814,Tt=37815,Et=37816,At=37817,Ct=37818,Nt=37819,Lt=37820,Rt=37821,Pt=36492,It=2200,Dt=2201,Ot=2202,zt=2300,Ft=2301,Ut=2302,Bt=2400,Vt=2401,kt=2402,Gt=2500,Ht=2501,Wt=0,jt=1,Xt=2,qt=3e3,Yt=3001,Zt=3200,$t=3201,Jt=0,Kt=1,Qt="",en="srgb",tn="srgb-linear",nn=0,sn=7680,rn=7681,an=7682,on=7683,ln=34055,cn=34056,hn=5386,un=512,dn=513,pn=514,mn=515,fn=516,gn=517,xn=518,vn=519,yn=35044,_n=35048,bn=35040,Mn=35045,wn=35049,Sn=35041,Tn=35046,En=35050,An=35042,Cn="100",Nn="300 es",Ln=1035;class Rn{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const Pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let In=1234567;const Dn=Math.PI/180,On=180/Math.PI;function zn(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Pn[255&e]+Pn[e>>8&255]+Pn[e>>16&255]+Pn[e>>24&255]+"-"+Pn[255&t]+Pn[t>>8&255]+"-"+Pn[t>>16&15|64]+Pn[t>>24&255]+"-"+Pn[63&n|128]+Pn[n>>8&255]+"-"+Pn[n>>16&255]+Pn[n>>24&255]+Pn[255&i]+Pn[i>>8&255]+Pn[i>>16&255]+Pn[i>>24&255]).toLowerCase()}function Fn(e,t,n){return Math.max(t,Math.min(n,e))}function Un(e,t){return(e%t+t)%t}function Bn(e,t,n){return(1-n)*e+n*t}function Vn(e){return 0==(e&e-1)&&0!==e}function kn(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Gn(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Hn(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function Wn(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var jn=Object.freeze({__proto__:null,DEG2RAD:Dn,RAD2DEG:On,generateUUID:zn,clamp:Fn,euclideanModulo:Un,mapLinear:function(e,t,n,i,s){return i+(e-t)*(s-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:Bn,damp:function(e,t,n,i){return Bn(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(Un(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(In=e);let t=In+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*Dn},radToDeg:function(e){return e*On},isPowerOfTwo:Vn,ceilPowerOfTwo:kn,floorPowerOfTwo:Gn,setQuaternionFromProperEuler:function(e,t,n,i,s){const r=Math.cos,a=Math.sin,o=r(n/2),l=a(n/2),c=r((t+i)/2),h=a((t+i)/2),u=r((t-i)/2),d=a((t-i)/2),p=r((i-t)/2),m=a((i-t)/2);switch(s){case"XYX":e.set(o*h,l*u,l*d,o*c);break;case"YZY":e.set(l*d,o*h,l*u,o*c);break;case"ZXZ":e.set(l*u,l*d,o*h,o*c);break;case"XZX":e.set(o*h,l*m,l*p,o*c);break;case"YXY":e.set(l*p,o*h,l*m,o*c);break;case"ZYZ":e.set(l*m,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}},normalize:Wn,denormalize:Hn});class Xn{constructor(e=0,t=0){Xn.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class qn{constructor(){qn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,s,r,a,o,l){const c=this.elements;return c[0]=e,c[1]=i,c[2]=a,c[3]=t,c[4]=s,c[5]=o,c[6]=n,c[7]=r,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],m=i[0],f=i[3],g=i[6],x=i[1],v=i[4],y=i[7],_=i[2],b=i[5],M=i[8];return s[0]=r*m+a*x+o*_,s[3]=r*f+a*v+o*b,s[6]=r*g+a*y+o*M,s[1]=l*m+c*x+h*_,s[4]=l*f+c*v+h*b,s[7]=l*g+c*y+h*M,s[2]=u*m+d*x+p*_,s[5]=u*f+d*v+p*b,s[8]=u*g+d*y+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],o=e[6],l=e[7],c=e[8];return t*r*c-t*a*l-n*s*c+n*a*o+i*s*l-i*r*o}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],o=e[6],l=e[7],c=e[8],h=c*r-a*l,u=a*o-c*s,d=l*s-r*o,p=t*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*l-c*n)*m,e[2]=(a*n-i*r)*m,e[3]=u*m,e[4]=(c*t-i*o)*m,e[5]=(i*s-a*t)*m,e[6]=d*m,e[7]=(n*o-l*t)*m,e[8]=(r*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,a){const o=Math.cos(s),l=Math.sin(s);return this.set(n*o,n*l,-n*(o*r+l*a)+r+e,-i*l,i*o,-i*(-l*r+o*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],r=i[3],a=i[6],o=i[1],l=i[4],c=i[7];return i[0]=t*s+n*o,i[3]=t*r+n*l,i[6]=t*a+n*c,i[1]=-n*s+t*o,i[4]=-n*r+t*l,i[7]=-n*a+t*c,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function Yn(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}const Zn={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function $n(e,t){return new Zn[e](t)}function Jn(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Kn(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Qn(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const ei={[en]:{[tn]:Kn},[tn]:{[en]:Qn}},ti={legacyMode:!0,get workingColorSpace(){return tn},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.legacyMode||t===n||!t||!n)return e;if(ei[t]&&void 0!==ei[t][n]){const i=ei[t][n];return e.r=i(e.r),e.g=i(e.g),e.b=i(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},ni={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ii={r:0,g:0,b:0},si={h:0,s:0,l:0},ri={h:0,s:0,l:0};function ai(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function oi(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class li{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=en){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,ti.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=tn){return this.r=e,this.g=t,this.b=n,ti.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=tn){if(e=Un(e,1),t=Fn(t,0,1),n=Fn(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,s=2*n-i;this.r=ai(s,i,e+1/3),this.g=ai(s,i,e),this.b=ai(s,i,e-1/3)}return ti.toWorkingColorSpace(this,i),this}setStyle(e,t=en){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let e;const s=i[1],r=i[2];switch(s){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,ti.toWorkingColorSpace(this,t),n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,ti.toWorkingColorSpace(this,t),n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const i=parseFloat(e[1])/360,s=parseFloat(e[2])/100,r=parseFloat(e[3])/100;return n(e[4]),this.setHSL(i,s,r,t)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=i[1],n=e.length;if(3===n)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,ti.toWorkingColorSpace(this,t),this;if(6===n)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,ti.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=en){const n=ni[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Kn(e.r),this.g=Kn(e.g),this.b=Kn(e.b),this}copyLinearToSRGB(e){return this.r=Qn(e.r),this.g=Qn(e.g),this.b=Qn(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=en){return ti.fromWorkingColorSpace(oi(this,ii),e),Fn(255*ii.r,0,255)<<16^Fn(255*ii.g,0,255)<<8^Fn(255*ii.b,0,255)<<0}getHexString(e=en){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=tn){ti.fromWorkingColorSpace(oi(this,ii),t);const n=ii.r,i=ii.g,s=ii.b,r=Math.max(n,i,s),a=Math.min(n,i,s);let o,l;const c=(a+r)/2;if(a===r)o=0,l=0;else{const e=r-a;switch(l=c<=.5?e/(r+a):e/(2-r-a),r){case n:o=(i-s)/e+(i<s?6:0);break;case i:o=(s-n)/e+2;break;case s:o=(n-i)/e+4}o/=6}return e.h=o,e.s=l,e.l=c,e}getRGB(e,t=tn){return ti.fromWorkingColorSpace(oi(this,ii),t),e.r=ii.r,e.g=ii.g,e.b=ii.b,e}getStyle(e=en){return ti.fromWorkingColorSpace(oi(this,ii),e),e!==en?`color(${e} ${ii.r} ${ii.g} ${ii.b})`:`rgb(${255*ii.r|0},${255*ii.g|0},${255*ii.b|0})`}offsetHSL(e,t,n){return this.getHSL(si),si.h+=e,si.s+=t,si.l+=n,this.setHSL(si.h,si.s,si.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(si),e.getHSL(ri);const n=Bn(si.h,ri.h,t),i=Bn(si.s,ri.s,t),s=Bn(si.l,ri.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let ci;li.NAMES=ni;class hi{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===ci&&(ci=Jn("canvas")),ci.width=e.width,ci.height=e.height;const n=ci.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ci}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Jn("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let e=0;e<s.length;e++)s[e]=255*Kn(s[e]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Kn(t[e]/255)):t[e]=Kn(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ui{constructor(e=null){this.isSource=!0,this.uuid=zn(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(di(i[t].image)):e.push(di(i[t]))}else e=di(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function di(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?hi.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let pi=0;class mi extends Rn{constructor(e=mi.DEFAULT_IMAGE,t=mi.DEFAULT_MAPPING,n=Ee,i=Ee,s=Ie,r=ze,a=Je,o=Ue,l=1,c=qt){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:pi++}),this.uuid=zn(),this.name="",this.source=new ui(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Xn(0,0),this.repeat=new Xn(1,1),this.center=new Xn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new qn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ye)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Te:e.x=e.x-Math.floor(e.x);break;case Ee:e.x=e.x<0?0:1;break;case Ae:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case Te:e.y=e.y-Math.floor(e.y);break;case Ee:e.y=e.y<0?0:1;break;case Ae:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}mi.DEFAULT_IMAGE=null,mi.DEFAULT_MAPPING=ye;class fi{constructor(e=0,t=0,n=0,i=1){fi.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const r=.01,a=.1,o=e.elements,l=o[0],c=o[4],h=o[8],u=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(c-u)<r&&Math.abs(h-m)<r&&Math.abs(p-f)<r){if(Math.abs(c+u)<a&&Math.abs(h+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(d+1)/2,x=(g+1)/2,v=(c+u)/4,y=(h+m)/4,_=(p+f)/4;return e>o&&e>x?e<r?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(e),i=v/n,s=y/n):o>x?o<r?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(o),n=v/i,s=_/i):x<r?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(x),n=y/s,i=_/s),this.set(n,i,s,t),this}let x=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(u-c)*(u-c));return Math.abs(x)<.001&&(x=1),this.x=(f-p)/x,this.y=(h-m)/x,this.z=(u-c)/x,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class gi extends Rn{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new fi(0,0,e,t),this.scissorTest=!1,this.viewport=new fi(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new mi(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Ie,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ui(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class xi extends mi{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Ce,this.minFilter=Ce,this.wrapR=Ee,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class vi extends gi{constructor(e,t,n){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new xi(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class yi extends mi{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Ce,this.minFilter=Ce,this.wrapR=Ee,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class _i extends gi{constructor(e,t,n){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new yi(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class bi extends gi{constructor(e,t,n,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let e=0;e<n;e++)this.texture[e]=s.clone(),this.texture[e].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Mi{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,r,a){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=s[r+0],d=s[r+1],p=s[r+2],m=s[r+3];if(0===a)return e[t+0]=o,e[t+1]=l,e[t+2]=c,void(e[t+3]=h);if(1===a)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=m);if(h!==m||o!==u||l!==d||c!==p){let e=1-a;const t=o*u+l*d+c*p+h*m,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const s=Math.sqrt(i),r=Math.atan2(s,t*n);e=Math.sin(e*r)/s,a=Math.sin(a*r)/s}const s=a*n;if(o=o*e+u*s,l=l*e+d*s,c=c*e+p*s,h=h*e+m*s,e===1-a){const e=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=e,l*=e,c*=e,h*=e}}e[t]=o,e[t+1]=l,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,r){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=s[r],u=s[r+1],d=s[r+2],p=s[r+3];return e[t]=a*p+c*h+o*d-l*u,e[t+1]=o*p+c*u+l*h-a*d,e[t+2]=l*p+c*d+a*u-o*h,e[t+3]=c*p-a*h-o*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,r=e._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),h=a(s/2),u=o(n/2),d=o(i/2),p=o(s/2);switch(r){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],a=t[5],o=t[9],l=t[2],c=t[6],h=t[10],u=n+a+h;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(c-o)*e,this._y=(s-l)*e,this._z=(r-i)*e}else if(n>a&&n>h){const e=2*Math.sqrt(1+n-a-h);this._w=(c-o)/e,this._x=.25*e,this._y=(i+r)/e,this._z=(s+l)/e}else if(a>h){const e=2*Math.sqrt(1+a-n-h);this._w=(s-l)/e,this._x=(i+r)/e,this._y=.25*e,this._z=(o+c)/e}else{const e=2*Math.sqrt(1+h-n-a);this._w=(r-i)/e,this._x=(s+l)/e,this._y=(o+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Fn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,r=e._w,a=t._x,o=t._y,l=t._z,c=t._w;return this._x=n*c+r*a+i*l-s*o,this._y=i*c+r*o+s*a-n*l,this._z=s*c+r*l+n*o-i*a,this._w=r*c-n*a-i*o-s*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,s=this._z,r=this._w;let a=r*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const o=1-a*a;if(o<=Number.EPSILON){const e=1-t;return this._w=e*r+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),h=Math.sin((1-t)*c)/l,u=Math.sin(t*c)/l;return this._w=r*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=s*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class wi{constructor(e=0,t=0,n=0){wi.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ti.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ti.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,a=e.z,o=e.w,l=o*t+r*i-a*n,c=o*n+a*t-s*i,h=o*i+s*n-r*t,u=-s*t-r*n-a*i;return this.x=l*o+u*-s+c*-a-h*-r,this.y=c*o+u*-r+h*-s-l*-a,this.z=h*o+u*-a+l*-r-c*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,r=t.x,a=t.y,o=t.z;return this.x=i*o-s*a,this.y=s*r-n*o,this.z=n*a-i*r,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Si.copy(this).projectOnVector(e),this.sub(Si)}reflect(e){return this.sub(Si.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Fn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Si=new wi,Ti=new Mi;class Ei{constructor(e=new wi(1/0,1/0,1/0),t=new wi(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,r=-1/0,a=-1/0;for(let o=0,l=e.length;o<l;o+=3){const l=e[o],c=e[o+1],h=e[o+2];l<t&&(t=l),c<n&&(n=c),h<i&&(i=h),l>s&&(s=l),c>r&&(r=c),h>a&&(a=h)}return this.min.set(t,n,i),this.max.set(s,r,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,r=-1/0,a=-1/0;for(let o=0,l=e.count;o<l;o++){const l=e.getX(o),c=e.getY(o),h=e.getZ(o);l<t&&(t=l),c<n&&(n=c),h<i&&(i=h),l>s&&(s=l),c>r&&(r=c),h>a&&(a=h)}return this.min.set(t,n,i),this.max.set(s,r,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ci.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n)if(t&&null!=n.attributes&&void 0!==n.attributes.position){const t=n.attributes.position;for(let n=0,i=t.count;n<i;n++)Ci.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld),this.expandByPoint(Ci)}else null===n.boundingBox&&n.computeBoundingBox(),Ni.copy(n.boundingBox),Ni.applyMatrix4(e.matrixWorld),this.union(Ni);const i=e.children;for(let e=0,n=i.length;e<n;e++)this.expandByObject(i[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ci),Ci.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(zi),Fi.subVectors(this.max,zi),Li.subVectors(e.a,zi),Ri.subVectors(e.b,zi),Pi.subVectors(e.c,zi),Ii.subVectors(Ri,Li),Di.subVectors(Pi,Ri),Oi.subVectors(Li,Pi);let t=[0,-Ii.z,Ii.y,0,-Di.z,Di.y,0,-Oi.z,Oi.y,Ii.z,0,-Ii.x,Di.z,0,-Di.x,Oi.z,0,-Oi.x,-Ii.y,Ii.x,0,-Di.y,Di.x,0,-Oi.y,Oi.x,0];return!!Vi(t,Li,Ri,Pi,Fi)&&(t=[1,0,0,0,1,0,0,0,1],!!Vi(t,Li,Ri,Pi,Fi)&&(Ui.crossVectors(Ii,Di),t=[Ui.x,Ui.y,Ui.z],Vi(t,Li,Ri,Pi,Fi)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ci.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Ci).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Ai[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ai[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ai[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ai[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ai[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ai[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ai[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ai[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ai)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ai=[new wi,new wi,new wi,new wi,new wi,new wi,new wi,new wi],Ci=new wi,Ni=new Ei,Li=new wi,Ri=new wi,Pi=new wi,Ii=new wi,Di=new wi,Oi=new wi,zi=new wi,Fi=new wi,Ui=new wi,Bi=new wi;function Vi(e,t,n,i,s){for(let r=0,a=e.length-3;r<=a;r+=3){Bi.fromArray(e,r);const a=s.x*Math.abs(Bi.x)+s.y*Math.abs(Bi.y)+s.z*Math.abs(Bi.z),o=t.dot(Bi),l=n.dot(Bi),c=i.dot(Bi);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const ki=new Ei,Gi=new wi,Hi=new wi,Wi=new wi;class ji{constructor(e=new wi,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):ki.setFromPoints(e).getCenter(n);let i=0;for(let t=0,s=e.length;t<s;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Wi.subVectors(e,this.center);const t=Wi.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.add(Wi.multiplyScalar(n/e)),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?Hi.set(0,0,1).multiplyScalar(e.radius):Hi.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Gi.copy(e.center).add(Hi)),this.expandByPoint(Gi.copy(e.center).sub(Hi)),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Xi=new wi,qi=new wi,Yi=new wi,Zi=new wi,$i=new wi,Ji=new wi,Ki=new wi;class Qi{constructor(e=new wi,t=new wi(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Xi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Xi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Xi.copy(this.direction).multiplyScalar(t).add(this.origin),Xi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){qi.copy(e).add(t).multiplyScalar(.5),Yi.copy(t).sub(e).normalize(),Zi.copy(this.origin).sub(qi);const s=.5*e.distanceTo(t),r=-this.direction.dot(Yi),a=Zi.dot(this.direction),o=-Zi.dot(Yi),l=Zi.lengthSq(),c=Math.abs(1-r*r);let h,u,d,p;if(c>0)if(h=r*o-a,u=r*a-o,p=s*c,h>=0)if(u>=-p)if(u<=p){const e=1/c;h*=e,u*=e,d=h*(h+r*u+2*a)+u*(r*h+u+2*o)+l}else u=s,h=Math.max(0,-(r*u+a)),d=-h*h+u*(u+2*o)+l;else u=-s,h=Math.max(0,-(r*u+a)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-r*s+a)),u=h>0?-s:Math.min(Math.max(-s,-o),s),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-s,-o),s),d=u*(u+2*o)+l):(h=Math.max(0,-(r*s+a)),u=h>0?s:Math.min(Math.max(-s,-o),s),d=-h*h+u*(u+2*o)+l);else u=r>0?-s:s,h=Math.max(0,-(r*u+a)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Yi).multiplyScalar(u).add(qi),d}intersectSphere(e,t){Xi.subVectors(e.center,this.origin);const n=Xi.dot(this.direction),i=Xi.dot(Xi)-n*n,s=e.radius*e.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=n-r,o=n+r;return a<0&&o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,a,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(e.min.x-u.x)*l,i=(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,i=(e.min.x-u.x)*l),c>=0?(s=(e.min.y-u.y)*c,r=(e.max.y-u.y)*c):(s=(e.max.y-u.y)*c,r=(e.min.y-u.y)*c),n>r||s>i?null:((s>n||n!=n)&&(n=s),(r<i||i!=i)&&(i=r),h>=0?(a=(e.min.z-u.z)*h,o=(e.max.z-u.z)*h):(a=(e.max.z-u.z)*h,o=(e.min.z-u.z)*h),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,Xi)}intersectTriangle(e,t,n,i,s){$i.subVectors(t,e),Ji.subVectors(n,e),Ki.crossVectors($i,Ji);let r,a=this.direction.dot(Ki);if(a>0){if(i)return null;r=1}else{if(!(a<0))return null;r=-1,a=-a}Zi.subVectors(this.origin,e);const o=r*this.direction.dot(Ji.crossVectors(Zi,Ji));if(o<0)return null;const l=r*this.direction.dot($i.cross(Zi));if(l<0)return null;if(o+l>a)return null;const c=-r*Zi.dot(Ki);return c<0?null:this.at(c/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class es{constructor(){es.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,s,r,a,o,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=s,g[5]=r,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new es).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ts.setFromMatrixColumn(e,0).length(),s=1/ts.setFromMatrixColumn(e,1).length(),r=1/ts.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(s),h=Math.sin(s);if("XYZ"===e.order){const e=r*c,n=r*h,i=a*c,s=a*h;t[0]=o*c,t[4]=-o*h,t[8]=l,t[1]=n+i*l,t[5]=e-s*l,t[9]=-a*o,t[2]=s-e*l,t[6]=i+n*l,t[10]=r*o}else if("YXZ"===e.order){const e=o*c,n=o*h,i=l*c,s=l*h;t[0]=e+s*a,t[4]=i*a-n,t[8]=r*l,t[1]=r*h,t[5]=r*c,t[9]=-a,t[2]=n*a-i,t[6]=s+e*a,t[10]=r*o}else if("ZXY"===e.order){const e=o*c,n=o*h,i=l*c,s=l*h;t[0]=e-s*a,t[4]=-r*h,t[8]=i+n*a,t[1]=n+i*a,t[5]=r*c,t[9]=s-e*a,t[2]=-r*l,t[6]=a,t[10]=r*o}else if("ZYX"===e.order){const e=r*c,n=r*h,i=a*c,s=a*h;t[0]=o*c,t[4]=i*l-n,t[8]=e*l+s,t[1]=o*h,t[5]=s*l+e,t[9]=n*l-i,t[2]=-l,t[6]=a*o,t[10]=r*o}else if("YZX"===e.order){const e=r*o,n=r*l,i=a*o,s=a*l;t[0]=o*c,t[4]=s-e*h,t[8]=i*h+n,t[1]=h,t[5]=r*c,t[9]=-a*c,t[2]=-l*c,t[6]=n*h+i,t[10]=e-s*h}else if("XZY"===e.order){const e=r*o,n=r*l,i=a*o,s=a*l;t[0]=o*c,t[4]=-h,t[8]=l*c,t[1]=e*h+s,t[5]=r*c,t[9]=n*h-i,t[2]=i*h-n,t[6]=a*c,t[10]=s*h+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(is,e,ss)}lookAt(e,t,n){const i=this.elements;return os.subVectors(e,t),0===os.lengthSq()&&(os.z=1),os.normalize(),rs.crossVectors(n,os),0===rs.lengthSq()&&(1===Math.abs(n.z)?os.x+=1e-4:os.z+=1e-4,os.normalize(),rs.crossVectors(n,os)),rs.normalize(),as.crossVectors(os,rs),i[0]=rs.x,i[4]=as.x,i[8]=os.x,i[1]=rs.y,i[5]=as.y,i[9]=os.y,i[2]=rs.z,i[6]=as.z,i[10]=os.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],x=n[3],v=n[7],y=n[11],_=n[15],b=i[0],M=i[4],w=i[8],S=i[12],T=i[1],E=i[5],A=i[9],C=i[13],N=i[2],L=i[6],R=i[10],P=i[14],I=i[3],D=i[7],O=i[11],z=i[15];return s[0]=r*b+a*T+o*N+l*I,s[4]=r*M+a*E+o*L+l*D,s[8]=r*w+a*A+o*R+l*O,s[12]=r*S+a*C+o*P+l*z,s[1]=c*b+h*T+u*N+d*I,s[5]=c*M+h*E+u*L+d*D,s[9]=c*w+h*A+u*R+d*O,s[13]=c*S+h*C+u*P+d*z,s[2]=p*b+m*T+f*N+g*I,s[6]=p*M+m*E+f*L+g*D,s[10]=p*w+m*A+f*R+g*O,s[14]=p*S+m*C+f*P+g*z,s[3]=x*b+v*T+y*N+_*I,s[7]=x*M+v*E+y*L+_*D,s[11]=x*w+v*A+y*R+_*O,s[15]=x*S+v*C+y*P+_*z,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],a=e[5],o=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+s*o*h-i*l*h-s*a*u+n*l*u+i*a*d-n*o*d)+e[7]*(+t*o*d-t*l*u+s*r*u-i*r*d+i*l*c-s*o*c)+e[11]*(+t*l*h-t*a*d-s*r*h+n*r*d+s*a*c-n*l*c)+e[15]*(-i*a*c-t*o*h+t*a*u+i*r*h-n*r*u+n*o*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],o=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],x=h*f*l-m*u*l+m*o*d-a*f*d-h*o*g+a*u*g,v=p*u*l-c*f*l-p*o*d+r*f*d+c*o*g-r*u*g,y=c*m*l-p*h*l+p*a*d-r*m*d-c*a*g+r*h*g,_=p*h*o-c*m*o-p*a*u+r*m*u+c*a*f-r*h*f,b=t*x+n*v+i*y+s*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;return e[0]=x*M,e[1]=(m*u*s-h*f*s-m*i*d+n*f*d+h*i*g-n*u*g)*M,e[2]=(a*f*s-m*o*s+m*i*l-n*f*l-a*i*g+n*o*g)*M,e[3]=(h*o*s-a*u*s-h*i*l+n*u*l+a*i*d-n*o*d)*M,e[4]=v*M,e[5]=(c*f*s-p*u*s+p*i*d-t*f*d-c*i*g+t*u*g)*M,e[6]=(p*o*s-r*f*s-p*i*l+t*f*l+r*i*g-t*o*g)*M,e[7]=(r*u*s-c*o*s+c*i*l-t*u*l-r*i*d+t*o*d)*M,e[8]=y*M,e[9]=(p*h*s-c*m*s-p*n*d+t*m*d+c*n*g-t*h*g)*M,e[10]=(r*m*s-p*a*s+p*n*l-t*m*l-r*n*g+t*a*g)*M,e[11]=(c*a*s-r*h*s-c*n*l+t*h*l+r*n*d-t*a*d)*M,e[12]=_*M,e[13]=(c*m*i-p*h*i+p*n*u-t*m*u-c*n*f+t*h*f)*M,e[14]=(p*a*i-r*m*i-p*n*o+t*m*o+r*n*f-t*a*f)*M,e[15]=(r*h*i-c*a*i+c*n*o-t*h*o-r*n*u+t*a*u)*M,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,a=e.y,o=e.z,l=s*r,c=s*a;return this.set(l*r+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*r,0,l*o-i*a,c*o+i*r,s*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,r=t._y,a=t._z,o=t._w,l=s+s,c=r+r,h=a+a,u=s*l,d=s*c,p=s*h,m=r*c,f=r*h,g=a*h,x=o*l,v=o*c,y=o*h,_=n.x,b=n.y,M=n.z;return i[0]=(1-(m+g))*_,i[1]=(d+y)*_,i[2]=(p-v)*_,i[3]=0,i[4]=(d-y)*b,i[5]=(1-(u+g))*b,i[6]=(f+x)*b,i[7]=0,i[8]=(p+v)*M,i[9]=(f-x)*M,i[10]=(1-(u+m))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ts.set(i[0],i[1],i[2]).length();const r=ts.set(i[4],i[5],i[6]).length(),a=ts.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],ns.copy(this);const o=1/s,l=1/r,c=1/a;return ns.elements[0]*=o,ns.elements[1]*=o,ns.elements[2]*=o,ns.elements[4]*=l,ns.elements[5]*=l,ns.elements[6]*=l,ns.elements[8]*=c,ns.elements[9]*=c,ns.elements[10]*=c,t.setFromRotationMatrix(ns),n.x=s,n.y=r,n.z=a,this}makePerspective(e,t,n,i,s,r){const a=this.elements,o=2*s/(t-e),l=2*s/(n-i),c=(t+e)/(t-e),h=(n+i)/(n-i),u=-(r+s)/(r-s),d=-2*r*s/(r-s);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,r){const a=this.elements,o=1/(t-e),l=1/(n-i),c=1/(r-s),h=(t+e)*o,u=(n+i)*l,d=(r+s)*c;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ts=new wi,ns=new es,is=new wi(0,0,0),ss=new wi(1,1,1),rs=new wi,as=new wi,os=new wi,ls=new es,cs=new Mi;class hs{constructor(e=0,t=0,n=0,i=hs.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],r=i[4],a=i[8],o=i[1],l=i[5],c=i[9],h=i[2],u=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(Fn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Fn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(Fn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(o,s));break;case"ZYX":this._y=Math.asin(-Fn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(Fn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Fn(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ls.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ls,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return cs.setFromEuler(this),this.setFromQuaternion(cs,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}hs.DefaultOrder="XYZ",hs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class us{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let ds=0;const ps=new wi,ms=new Mi,fs=new es,gs=new wi,xs=new wi,vs=new wi,ys=new Mi,_s=new wi(1,0,0),bs=new wi(0,1,0),Ms=new wi(0,0,1),ws={type:"added"},Ss={type:"removed"};class Ts extends Rn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ds++}),this.uuid=zn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ts.DefaultUp.clone();const e=new wi,t=new hs,n=new Mi,i=new wi(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new es},normalMatrix:{value:new qn}}),this.matrix=new es,this.matrixWorld=new es,this.matrixAutoUpdate=Ts.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Ts.DefaultMatrixWorldAutoUpdate,this.layers=new us,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ms.setFromAxisAngle(e,t),this.quaternion.multiply(ms),this}rotateOnWorldAxis(e,t){return ms.setFromAxisAngle(e,t),this.quaternion.premultiply(ms),this}rotateX(e){return this.rotateOnAxis(_s,e)}rotateY(e){return this.rotateOnAxis(bs,e)}rotateZ(e){return this.rotateOnAxis(Ms,e)}translateOnAxis(e,t){return ps.copy(e).applyQuaternion(this.quaternion),this.position.add(ps.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_s,e)}translateY(e){return this.translateOnAxis(bs,e)}translateZ(e){return this.translateOnAxis(Ms,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(fs.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?gs.copy(e):gs.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),xs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?fs.lookAt(xs,gs,this.up):fs.lookAt(gs,xs,this.up),this.quaternion.setFromRotationMatrix(fs),i&&(fs.extractRotation(i.matrixWorld),ms.setFromRotationMatrix(fs),this.quaternion.premultiply(ms.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(ws)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ss)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Ss)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),fs.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),fs.multiply(e.parent.matrixWorld)),e.applyMatrix4(fs),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xs,e,vs),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xs,ys,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const i=t[n];!0!==i.matrixWorldAutoUpdate&&!0!==e||i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function s(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];s(e.shapes,i)}else s(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(s(e.materials,this.material[n]));i.material=t}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(s(e.animations,n))}}if(t){const t=r(e.geometries),i=r(e.materials),s=r(e.textures),a=r(e.images),o=r(e.shapes),l=r(e.skeletons),c=r(e.animations),h=r(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),s.length>0&&(n.textures=s),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),h.length>0&&(n.nodes=h)}return n.object=i,n;function r(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Ts.DefaultUp=new wi(0,1,0),Ts.DefaultMatrixAutoUpdate=!0,Ts.DefaultMatrixWorldAutoUpdate=!0;const Es=new wi,As=new wi,Cs=new wi,Ns=new wi,Ls=new wi,Rs=new wi,Ps=new wi,Is=new wi,Ds=new wi,Os=new wi;class zs{constructor(e=new wi,t=new wi,n=new wi){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Es.subVectors(e,t),i.cross(Es);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Es.subVectors(i,t),As.subVectors(n,t),Cs.subVectors(e,t);const r=Es.dot(Es),a=Es.dot(As),o=Es.dot(Cs),l=As.dot(As),c=As.dot(Cs),h=r*l-a*a;if(0===h)return s.set(-2,-1,-1);const u=1/h,d=(l*o-a*c)*u,p=(r*c-a*o)*u;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ns),Ns.x>=0&&Ns.y>=0&&Ns.x+Ns.y<=1}static getUV(e,t,n,i,s,r,a,o){return this.getBarycoord(e,t,n,i,Ns),o.set(0,0),o.addScaledVector(s,Ns.x),o.addScaledVector(r,Ns.y),o.addScaledVector(a,Ns.z),o}static isFrontFacing(e,t,n,i){return Es.subVectors(n,t),As.subVectors(e,t),Es.cross(As).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Es.subVectors(this.c,this.b),As.subVectors(this.a,this.b),.5*Es.cross(As).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return zs.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return zs.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return zs.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return zs.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return zs.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let r,a;Ls.subVectors(i,n),Rs.subVectors(s,n),Is.subVectors(e,n);const o=Ls.dot(Is),l=Rs.dot(Is);if(o<=0&&l<=0)return t.copy(n);Ds.subVectors(e,i);const c=Ls.dot(Ds),h=Rs.dot(Ds);if(c>=0&&h<=c)return t.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return r=o/(o-c),t.copy(n).addScaledVector(Ls,r);Os.subVectors(e,s);const d=Ls.dot(Os),p=Rs.dot(Os);if(p>=0&&d<=p)return t.copy(s);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(Rs,a);const f=c*p-d*h;if(f<=0&&h-c>=0&&d-p>=0)return Ps.subVectors(s,i),a=(h-c)/(h-c+(d-p)),t.copy(i).addScaledVector(Ps,a);const g=1/(f+m+u);return r=m*g,a=u*g,t.copy(n).addScaledVector(Ls,r).addScaledVector(Rs,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Fs=0;class Us extends Rn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Fs++}),this.uuid=zn(),this.name="",this.type="Material",this.blending=O,this.side=R,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Z,this.blendDst=$,this.blendEquation=V,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=re,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=sn,this.stencilZFail=sn,this.stencilZPass=sn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==O&&(n.blending=this.blending),this.side!==R&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const t=i(e.textures),s=i(e.images);t.length>0&&(n.textures=t),s.length>0&&(n.images=s)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class Bs extends Us{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new li(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=he,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Vs=new wi,ks=new Xn;class Gs{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=yn,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)ks.fromBufferAttribute(this,t),ks.applyMatrix3(e),this.setXY(t,ks.x,ks.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Vs.fromBufferAttribute(this,t),Vs.applyMatrix3(e),this.setXYZ(t,Vs.x,Vs.y,Vs.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Vs.fromBufferAttribute(this,t),Vs.applyMatrix4(e),this.setXYZ(t,Vs.x,Vs.y,Vs.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Vs.fromBufferAttribute(this,t),Vs.applyNormalMatrix(e),this.setXYZ(t,Vs.x,Vs.y,Vs.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Vs.fromBufferAttribute(this,t),Vs.transformDirection(e),this.setXYZ(t,Vs.x,Vs.y,Vs.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=Wn(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=Wn(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Wn(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=Wn(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Wn(t,this.array),n=Wn(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Wn(t,this.array),n=Wn(n,this.array),i=Wn(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=Wn(t,this.array),n=Wn(n,this.array),i=Wn(i,this.array),s=Wn(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==yn&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Hs extends Gs{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Ws extends Gs{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class js extends Gs{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Xs extends Gs{constructor(e,t,n){super(new Int16Array(e),t,n)}}class qs extends Gs{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Ys extends Gs{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Zs extends Gs{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class $s extends Gs{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class Js extends Gs{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Ks extends Gs{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Qs=0;const er=new es,tr=new Ts,nr=new wi,ir=new Ei,sr=new Ei,rr=new wi;class ar extends Rn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Qs++}),this.uuid=zn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Yn(e)?Zs:qs)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new qn).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return er.makeRotationFromQuaternion(e),this.applyMatrix4(er),this}rotateX(e){return er.makeRotationX(e),this.applyMatrix4(er),this}rotateY(e){return er.makeRotationY(e),this.applyMatrix4(er),this}rotateZ(e){return er.makeRotationZ(e),this.applyMatrix4(er),this}translate(e,t,n){return er.makeTranslation(e,t,n),this.applyMatrix4(er),this}scale(e,t,n){return er.makeScale(e,t,n),this.applyMatrix4(er),this}lookAt(e){return tr.lookAt(e),tr.updateMatrix(),this.applyMatrix4(tr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(nr).negate(),this.translate(nr.x,nr.y,nr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Js(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ei);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new wi(-1/0,-1/0,-1/0),new wi(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];ir.setFromBufferAttribute(n),this.morphTargetsRelative?(rr.addVectors(this.boundingBox.min,ir.min),this.boundingBox.expandByPoint(rr),rr.addVectors(this.boundingBox.max,ir.max),this.boundingBox.expandByPoint(rr)):(this.boundingBox.expandByPoint(ir.min),this.boundingBox.expandByPoint(ir.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ji);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new wi,1/0);if(e){const n=this.boundingSphere.center;if(ir.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];sr.setFromBufferAttribute(n),this.morphTargetsRelative?(rr.addVectors(ir.min,sr.min),ir.expandByPoint(rr),rr.addVectors(ir.max,sr.max),ir.expandByPoint(rr)):(ir.expandByPoint(sr.min),ir.expandByPoint(sr.max))}ir.getCenter(n);let i=0;for(let t=0,s=e.count;t<s;t++)rr.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(rr));if(t)for(let s=0,r=t.length;s<r;s++){const r=t[s],a=this.morphTargetsRelative;for(let t=0,s=r.count;t<s;t++)rr.fromBufferAttribute(r,t),a&&(nr.fromBufferAttribute(e,t),rr.add(nr)),i=Math.max(i,n.distanceToSquared(rr))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,s=t.normal.array,r=t.uv.array,a=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Gs(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],c=[];for(let e=0;e<a;e++)l[e]=new wi,c[e]=new wi;const h=new wi,u=new wi,d=new wi,p=new Xn,m=new Xn,f=new Xn,g=new wi,x=new wi;function v(e,t,n){h.fromArray(i,3*e),u.fromArray(i,3*t),d.fromArray(i,3*n),p.fromArray(r,2*e),m.fromArray(r,2*t),f.fromArray(r,2*n),u.sub(h),d.sub(h),m.sub(p),f.sub(p);const s=1/(m.x*f.y-f.x*m.y);isFinite(s)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(s),x.copy(d).multiplyScalar(m.x).addScaledVector(u,-f.x).multiplyScalar(s),l[e].add(g),l[t].add(g),l[n].add(g),c[e].add(x),c[t].add(x),c[n].add(x))}let y=this.groups;0===y.length&&(y=[{start:0,count:n.length}]);for(let e=0,t=y.length;e<t;++e){const t=y[e],i=t.start;for(let e=i,s=i+t.count;e<s;e+=3)v(n[e+0],n[e+1],n[e+2])}const _=new wi,b=new wi,M=new wi,w=new wi;function S(e){M.fromArray(s,3*e),w.copy(M);const t=l[e];_.copy(t),_.sub(M.multiplyScalar(M.dot(t))).normalize(),b.crossVectors(w,t);const n=b.dot(c[e])<0?-1:1;o[4*e]=_.x,o[4*e+1]=_.y,o[4*e+2]=_.z,o[4*e+3]=n}for(let e=0,t=y.length;e<t;++e){const t=y[e],i=t.start;for(let e=i,s=i+t.count;e<s;e+=3)S(n[e+0]),S(n[e+1]),S(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Gs(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new wi,s=new wi,r=new wi,a=new wi,o=new wi,l=new wi,c=new wi,h=new wi;if(e)for(let u=0,d=e.count;u<d;u+=3){const d=e.getX(u+0),p=e.getX(u+1),m=e.getX(u+2);i.fromBufferAttribute(t,d),s.fromBufferAttribute(t,p),r.fromBufferAttribute(t,m),c.subVectors(r,s),h.subVectors(i,s),c.cross(h),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),a.add(c),o.add(c),l.add(c),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,a=t.count;e<a;e+=3)i.fromBufferAttribute(t,e+0),s.fromBufferAttribute(t,e+1),r.fromBufferAttribute(t,e+2),c.subVectors(r,s),h.subVectors(i,s),c.cross(h),n.setXYZ(e+0,c.x,c.y,c.z),n.setXYZ(e+1,c.x,c.y,c.z),n.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)rr.fromBufferAttribute(e,t),rr.normalize(),e.setXYZ(t,rr.x,rr.y,rr.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,s=e.normalized,r=new n.constructor(t.length*i);let a=0,o=0;for(let s=0,l=t.length;s<l;s++){a=e.isInterleavedBufferAttribute?t[s]*e.data.stride+e.offset:t[s]*i;for(let e=0;e<i;e++)r[o++]=n[a++]}return new Gs(r,i,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ar,n=this.index.array,i=this.attributes;for(const s in i){const r=e(i[s],n);t.setAttribute(s,r)}const s=this.morphAttributes;for(const i in s){const r=[],a=s[i];for(let t=0,i=a.length;t<i;t++){const i=e(a[t],n);r.push(i)}t.morphAttributes[i]=r}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let s=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],r=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];r.push(i.toJSON(e.data))}r.length>0&&(i[t]=r,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const s=e.morphAttributes;for(const e in s){const n=[],i=s[e];for(let e=0,s=i.length;e<s;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let e=0,t=r.length;e<t;e++){const t=r[e];this.addGroup(t.start,t.count,t.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const or=new es,lr=new Qi,cr=new ji,hr=new wi,ur=new wi,dr=new wi,pr=new wi,mr=new wi,fr=new wi,gr=new wi,xr=new wi,vr=new wi,yr=new Xn,_r=new Xn,br=new Xn,Mr=new wi,wr=new wi;class Sr extends Ts{constructor(e=new ar,t=new Bs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),cr.copy(n.boundingSphere),cr.applyMatrix4(s),!1===e.ray.intersectsSphere(cr))return;if(or.copy(s).invert(),lr.copy(e.ray).applyMatrix4(or),null!==n.boundingBox&&!1===lr.intersectsBox(n.boundingBox))return;let r;const a=n.index,o=n.attributes.position,l=n.morphAttributes.position,c=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,d=n.groups,p=n.drawRange;if(null!==a)if(Array.isArray(i))for(let n=0,s=d.length;n<s;n++){const s=d[n],m=i[s.materialIndex];for(let n=Math.max(s.start,p.start),i=Math.min(a.count,Math.min(s.start+s.count,p.start+p.count));n<i;n+=3){const i=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);r=Tr(this,m,e,lr,o,l,c,h,u,i,d,p),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=s.materialIndex,t.push(r))}}else for(let n=Math.max(0,p.start),s=Math.min(a.count,p.start+p.count);n<s;n+=3){const s=a.getX(n),d=a.getX(n+1),p=a.getX(n+2);r=Tr(this,i,e,lr,o,l,c,h,u,s,d,p),r&&(r.faceIndex=Math.floor(n/3),t.push(r))}else if(void 0!==o)if(Array.isArray(i))for(let n=0,s=d.length;n<s;n++){const s=d[n],a=i[s.materialIndex];for(let n=Math.max(s.start,p.start),i=Math.min(o.count,Math.min(s.start+s.count,p.start+p.count));n<i;n+=3)r=Tr(this,a,e,lr,o,l,c,h,u,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),r.face.materialIndex=s.materialIndex,t.push(r))}else for(let n=Math.max(0,p.start),s=Math.min(o.count,p.start+p.count);n<s;n+=3)r=Tr(this,i,e,lr,o,l,c,h,u,n,n+1,n+2),r&&(r.faceIndex=Math.floor(n/3),t.push(r))}}function Tr(e,t,n,i,s,r,a,o,l,c,h,u){hr.fromBufferAttribute(s,c),ur.fromBufferAttribute(s,h),dr.fromBufferAttribute(s,u);const d=e.morphTargetInfluences;if(r&&d){gr.set(0,0,0),xr.set(0,0,0),vr.set(0,0,0);for(let e=0,t=r.length;e<t;e++){const t=d[e],n=r[e];0!==t&&(pr.fromBufferAttribute(n,c),mr.fromBufferAttribute(n,h),fr.fromBufferAttribute(n,u),a?(gr.addScaledVector(pr,t),xr.addScaledVector(mr,t),vr.addScaledVector(fr,t)):(gr.addScaledVector(pr.sub(hr),t),xr.addScaledVector(mr.sub(ur),t),vr.addScaledVector(fr.sub(dr),t)))}hr.add(gr),ur.add(xr),dr.add(vr)}e.isSkinnedMesh&&(e.boneTransform(c,hr),e.boneTransform(h,ur),e.boneTransform(u,dr));const p=function(e,t,n,i,s,r,a,o){let l;if(l=t.side===P?i.intersectTriangle(a,r,s,!0,o):i.intersectTriangle(s,r,a,t.side!==I,o),null===l)return null;wr.copy(o),wr.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(wr);return c<n.near||c>n.far?null:{distance:c,point:wr.clone(),object:e}}(e,t,n,i,hr,ur,dr,Mr);if(p){o&&(yr.fromBufferAttribute(o,c),_r.fromBufferAttribute(o,h),br.fromBufferAttribute(o,u),p.uv=zs.getUV(Mr,hr,ur,dr,yr,_r,br,new Xn)),l&&(yr.fromBufferAttribute(l,c),_r.fromBufferAttribute(l,h),br.fromBufferAttribute(l,u),p.uv2=zs.getUV(Mr,hr,ur,dr,yr,_r,br,new Xn));const e={a:c,b:h,c:u,normal:new wi,materialIndex:0};zs.getNormal(hr,ur,dr,e.normal),p.face=e}return p}class Er extends ar{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const a=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(e,t,n,i,s,r,p,m,f,g,x){const v=r/f,y=p/g,_=r/2,b=p/2,M=m/2,w=f+1,S=g+1;let T=0,E=0;const A=new wi;for(let r=0;r<S;r++){const a=r*y-b;for(let o=0;o<w;o++){const u=o*v-_;A[e]=u*i,A[t]=a*s,A[n]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=m>0?1:-1,c.push(A.x,A.y,A.z),h.push(o/f),h.push(1-r/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=u+t+w*e,i=u+t+w*(e+1),s=u+(t+1)+w*(e+1),r=u+(t+1)+w*e;o.push(n,i,r),o.push(i,s,r),E+=6}a.addGroup(d,E,x),d+=E,u+=T}p("z","y","x",-1,-1,n,t,e,r,s,0),p("z","y","x",1,-1,n,t,-e,r,s,1),p("x","z","y",1,1,e,n,t,i,r,2),p("x","z","y",1,-1,e,n,-t,i,r,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(o),this.setAttribute("position",new Js(l,3)),this.setAttribute("normal",new Js(c,3)),this.setAttribute("uv",new Js(h,2))}static fromJSON(e){return new Er(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ar(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const s=e[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?t[n][i]=s.clone():Array.isArray(s)?t[n][i]=s.slice():t[n][i]=s}}return t}function Cr(e){const t={};for(let n=0;n<e.length;n++){const i=Ar(e[n]);for(const e in i)t[e]=i[e]}return t}const Nr={clone:Ar,merge:Cr};class Lr extends Us{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ar(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Rr extends Ts{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new es,this.projectionMatrix=new es,this.projectionMatrixInverse=new es}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class Pr extends Rr{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*On*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Dn*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*On*Math.atan(Math.tan(.5*Dn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Dn*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const e=r.fullWidth,a=r.fullHeight;s+=r.offsetX*i/e,t-=r.offsetY*n/a,i*=r.width/e,n*=r.height/a}const a=this.filmOffset;0!==a&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ir=90;class Dr extends Ts{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new Pr(Ir,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new wi(1,0,0)),this.add(i);const s=new Pr(Ir,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new wi(-1,0,0)),this.add(s);const r=new Pr(Ir,1,e,t);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new wi(0,1,0)),this.add(r);const a=new Pr(Ir,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new wi(0,-1,0)),this.add(a);const o=new Pr(Ir,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new wi(0,0,1)),this.add(o);const l=new Pr(Ir,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new wi(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,r,a,o,l]=this.children,c=e.getRenderTarget(),h=e.toneMapping,u=e.xr.enabled;e.toneMapping=pe,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,r),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(c),e.toneMapping=h,e.xr.enabled=u,n.texture.needsPMREMUpdate=!0}}class Or extends mi{constructor(e,t,n,i,s,r,a,o,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:_e,n,i,s,r,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class zr extends gi{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Or(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Ie}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new Er(5,5,5),a=new Lr({name:"CubemapFromEquirect",uniforms:Ar(n),vertexShader:i,fragmentShader:s,side:P,blending:D});a.uniforms.tEquirect.value=t;const o=new Sr(r,a),l=t.minFilter;return t.minFilter===ze&&(t.minFilter=Ie),new Dr(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,i);e.setRenderTarget(s)}}const Fr=new wi,Ur=new wi,Br=new qn;class Vr{constructor(e=new wi(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Fr.subVectors(n,t).cross(Ur.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Fr),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Br.getNormalMatrix(e),i=this.coplanarPoint(Fr).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const kr=new ji,Gr=new wi;class Hr{constructor(e=new Vr,t=new Vr,n=new Vr,i=new Vr,s=new Vr,r=new Vr){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],r=n[2],a=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],m=n[11],f=n[12],g=n[13],x=n[14],v=n[15];return t[0].setComponents(a-i,h-o,m-u,v-f).normalize(),t[1].setComponents(a+i,h+o,m+u,v+f).normalize(),t[2].setComponents(a+s,h+l,m+d,v+g).normalize(),t[3].setComponents(a-s,h-l,m-d,v-g).normalize(),t[4].setComponents(a-r,h-c,m-p,v-x).normalize(),t[5].setComponents(a+r,h+c,m+p,v+x).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),kr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(kr)}intersectsSprite(e){return kr.center.set(0,0,0),kr.radius=.7071067811865476,kr.applyMatrix4(e.matrixWorld),this.intersectsSphere(kr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Gr.x=i.normal.x>0?e.max.x:e.min.x,Gr.y=i.normal.y>0?e.max.y:e.min.y,Gr.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Gr)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Wr(){let e=null,t=!1,n=null,i=null;function s(t,r){n(t,r),i=e.requestAnimationFrame(s)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(s),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function jr(e,t){const n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,s){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const r=i.get(t);void 0===r?i.set(t,function(t,i){const s=t.array,r=t.usage,a=e.createBuffer();let o;if(e.bindBuffer(i,a),e.bufferData(i,s,r),t.onUploadCallback(),s instanceof Float32Array)o=5126;else if(s instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(s instanceof Int16Array)o=5122;else if(s instanceof Uint32Array)o=5125;else if(s instanceof Int32Array)o=5124;else if(s instanceof Int8Array)o=5120;else if(s instanceof Uint8Array)o=5121;else{if(!(s instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+s);o=5121}return{buffer:a,type:o,bytesPerElement:s.BYTES_PER_ELEMENT,version:t.version}}(t,s)):r.version<t.version&&(function(t,i,s){const r=i.array,a=i.updateRange;e.bindBuffer(s,t),-1===a.count?e.bufferSubData(s,0,r):(n?e.bufferSubData(s,a.offset*r.BYTES_PER_ELEMENT,r,a.offset,a.count):e.bufferSubData(s,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}(r.buffer,t,s),r.version=t.version)}}}class Xr extends ar{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,r=t/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,h=e/a,u=t/o,d=[],p=[],m=[],f=[];for(let e=0;e<c;e++){const t=e*u-r;for(let n=0;n<l;n++){const i=n*h-s;p.push(i,-t,0),m.push(0,0,1),f.push(n/a),f.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<a;t++){const n=t+l*e,i=t+l*(e+1),s=t+1+l*(e+1),r=t+1+l*e;d.push(n,i,r),d.push(i,s,r)}this.setIndex(d),this.setAttribute("position",new Js(p,3)),this.setAttribute("normal",new Js(m,3)),this.setAttribute("uv",new Js(f,2))}static fromJSON(e){return new Xr(e.width,e.height,e.widthSegments,e.heightSegments)}}const qr={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )\t(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Yr={common:{diffuse:{value:new li(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new qn},uv2Transform:{value:new qn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Xn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new li(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new li(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new qn}},sprite:{diffuse:{value:new li(16777215)},opacity:{value:1},center:{value:new Xn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new qn}}},Zr={basic:{uniforms:Cr([Yr.common,Yr.specularmap,Yr.envmap,Yr.aomap,Yr.lightmap,Yr.fog]),vertexShader:qr.meshbasic_vert,fragmentShader:qr.meshbasic_frag},lambert:{uniforms:Cr([Yr.common,Yr.specularmap,Yr.envmap,Yr.aomap,Yr.lightmap,Yr.emissivemap,Yr.bumpmap,Yr.normalmap,Yr.displacementmap,Yr.fog,Yr.lights,{emissive:{value:new li(0)}}]),vertexShader:qr.meshlambert_vert,fragmentShader:qr.meshlambert_frag},phong:{uniforms:Cr([Yr.common,Yr.specularmap,Yr.envmap,Yr.aomap,Yr.lightmap,Yr.emissivemap,Yr.bumpmap,Yr.normalmap,Yr.displacementmap,Yr.fog,Yr.lights,{emissive:{value:new li(0)},specular:{value:new li(1118481)},shininess:{value:30}}]),vertexShader:qr.meshphong_vert,fragmentShader:qr.meshphong_frag},standard:{uniforms:Cr([Yr.common,Yr.envmap,Yr.aomap,Yr.lightmap,Yr.emissivemap,Yr.bumpmap,Yr.normalmap,Yr.displacementmap,Yr.roughnessmap,Yr.metalnessmap,Yr.fog,Yr.lights,{emissive:{value:new li(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:qr.meshphysical_vert,fragmentShader:qr.meshphysical_frag},toon:{uniforms:Cr([Yr.common,Yr.aomap,Yr.lightmap,Yr.emissivemap,Yr.bumpmap,Yr.normalmap,Yr.displacementmap,Yr.gradientmap,Yr.fog,Yr.lights,{emissive:{value:new li(0)}}]),vertexShader:qr.meshtoon_vert,fragmentShader:qr.meshtoon_frag},matcap:{uniforms:Cr([Yr.common,Yr.bumpmap,Yr.normalmap,Yr.displacementmap,Yr.fog,{matcap:{value:null}}]),vertexShader:qr.meshmatcap_vert,fragmentShader:qr.meshmatcap_frag},points:{uniforms:Cr([Yr.points,Yr.fog]),vertexShader:qr.points_vert,fragmentShader:qr.points_frag},dashed:{uniforms:Cr([Yr.common,Yr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:qr.linedashed_vert,fragmentShader:qr.linedashed_frag},depth:{uniforms:Cr([Yr.common,Yr.displacementmap]),vertexShader:qr.depth_vert,fragmentShader:qr.depth_frag},normal:{uniforms:Cr([Yr.common,Yr.bumpmap,Yr.normalmap,Yr.displacementmap,{opacity:{value:1}}]),vertexShader:qr.meshnormal_vert,fragmentShader:qr.meshnormal_frag},sprite:{uniforms:Cr([Yr.sprite,Yr.fog]),vertexShader:qr.sprite_vert,fragmentShader:qr.sprite_frag},background:{uniforms:{uvTransform:{value:new qn},t2D:{value:null}},vertexShader:qr.background_vert,fragmentShader:qr.background_frag},cube:{uniforms:Cr([Yr.envmap,{opacity:{value:1}}]),vertexShader:qr.cube_vert,fragmentShader:qr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:qr.equirect_vert,fragmentShader:qr.equirect_frag},distanceRGBA:{uniforms:Cr([Yr.common,Yr.displacementmap,{referencePosition:{value:new wi},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:qr.distanceRGBA_vert,fragmentShader:qr.distanceRGBA_frag},shadow:{uniforms:Cr([Yr.lights,Yr.fog,{color:{value:new li(0)},opacity:{value:1}}]),vertexShader:qr.shadow_vert,fragmentShader:qr.shadow_frag}};function $r(e,t,n,i,s,r){const a=new li(0);let o,l,c=!0===s?0:1,h=null,u=0,d=null;function p(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),c=t,p(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,p(a,c)},render:function(n,s){let r=!1,m=!0===s.isScene?s.background:null;m&&m.isTexture&&(m=t.get(m));const f=e.xr,g=f.getSession&&f.getSession();g&&"additive"===g.environmentBlendMode&&(m=null),null===m?p(a,c):m&&m.isColor&&(p(m,1),r=!0),(e.autoClear||r)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.mapping===Se)?(void 0===l&&(l=new Sr(new Er(1,1,1),new Lr({name:"BackgroundCubeMaterial",uniforms:Ar(Zr.cube.uniforms),vertexShader:Zr.cube.vertexShader,fragmentShader:Zr.cube.fragmentShader,side:P,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,h===m&&u===m.version&&d===e.toneMapping||(l.material.needsUpdate=!0,h=m,u=m.version,d=e.toneMapping),l.layers.enableAll(),n.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(void 0===o&&(o=new Sr(new Xr(2,2),new Lr({name:"BackgroundMaterial",uniforms:Ar(Zr.background.uniforms),vertexShader:Zr.background.vertexShader,fragmentShader:Zr.background.fragmentShader,side:R,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),h===m&&u===m.version&&d===e.toneMapping||(o.material.needsUpdate=!0,h=m,u=m.version,d=e.toneMapping),o.layers.enableAll(),n.unshift(o,o.geometry,o.material,0,0,null))}}}function Jr(e,t,n,i){const s=e.getParameter(34921),r=i.isWebGL2?null:t.get("OES_vertex_array_object"),a=i.isWebGL2||null!==r,o={},l=p(null);let c=l,h=!1;function u(t){return i.isWebGL2?e.bindVertexArray(t):r.bindVertexArrayOES(t)}function d(t){return i.isWebGL2?e.deleteVertexArray(t):r.deleteVertexArrayOES(t)}function p(e){const t=[],n=[],i=[];for(let e=0;e<s;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function m(){const e=c.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){g(e,0)}function g(n,s){const r=c.newAttributes,a=c.enabledAttributes,o=c.attributeDivisors;r[n]=1,0===a[n]&&(e.enableVertexAttribArray(n),a[n]=1),o[n]!==s&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,s),o[n]=s)}function x(){const t=c.newAttributes,n=c.enabledAttributes;for(let i=0,s=n.length;i<s;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function v(t,n,s,r,a,o){!0!==i.isWebGL2||5124!==s&&5125!==s?e.vertexAttribPointer(t,n,s,r,a,o):e.vertexAttribIPointer(t,n,s,a,o)}function y(){_(),h=!0,c!==l&&(c=l,u(c.object))}function _(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(s,l,d,y,_){let b=!1;if(a){const t=function(t,n,s){const a=!0===s.wireframe;let l=o[t.id];void 0===l&&(l={},o[t.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[a];return void 0===h&&(h=p(i.isWebGL2?e.createVertexArray():r.createVertexArrayOES()),c[a]=h),h}(y,d,l);c!==t&&(c=t,u(c.object)),b=function(e,t,n,i){const s=c.attributes,r=t.attributes;let a=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){const n=s[t];let i=r[t];if(void 0===i&&("instanceMatrix"===t&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(i=e.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;a++}return c.attributesNum!==a||c.index!==i}(s,y,d,_),b&&function(e,t,n,i){const s={},r=t.attributes;let a=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){let n=r[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),s[t]=i,a++}c.attributes=s,c.attributesNum=a,c.index=i}(s,y,d,_)}else{const e=!0===l.wireframe;c.geometry===y.id&&c.program===d.id&&c.wireframe===e||(c.geometry=y.id,c.program=d.id,c.wireframe=e,b=!0)}null!==_&&n.update(_,34963),(b||h)&&(h=!1,function(s,r,a,o){if(!1===i.isWebGL2&&(s.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;m();const l=o.attributes,c=a.getAttributes(),h=r.defaultAttributeValues;for(const t in c){const i=c[t];if(i.location>=0){let r=l[t];if(void 0===r&&("instanceMatrix"===t&&s.instanceMatrix&&(r=s.instanceMatrix),"instanceColor"===t&&s.instanceColor&&(r=s.instanceColor)),void 0!==r){const t=r.normalized,a=r.itemSize,l=n.get(r);if(void 0===l)continue;const c=l.buffer,h=l.type,u=l.bytesPerElement;if(r.isInterleavedBufferAttribute){const n=r.data,l=n.stride,d=r.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++)g(i.location+e,n.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<i.locationSize;e++)f(i.location+e);e.bindBuffer(34962,c);for(let e=0;e<i.locationSize;e++)v(i.location+e,a/i.locationSize,h,t,l*u,(d+a/i.locationSize*e)*u)}else{if(r.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++)g(i.location+e,r.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<i.locationSize;e++)f(i.location+e);e.bindBuffer(34962,c);for(let e=0;e<i.locationSize;e++)v(i.location+e,a/i.locationSize,h,t,a*u,a/i.locationSize*e*u)}}else if(void 0!==h){const n=h[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(i.location,n);break;case 3:e.vertexAttrib3fv(i.location,n);break;case 4:e.vertexAttrib4fv(i.location,n);break;default:e.vertexAttrib1fv(i.location,n)}}}}x()}(s,l,d,y),null!==_&&e.bindBuffer(34963,n.get(_).buffer))},reset:y,resetDefaultState:_,dispose:function(){y();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const i=n[e.id];for(const e in i)d(i[e].object),delete i[e];delete n[e.id]}},initAttributes:m,enableAttribute:f,disableUnusedAttributes:x}}function Kr(e,t,n,i){const s=i.isWebGL2;let r;this.setMode=function(e){r=e},this.render=function(t,i){e.drawArrays(r,t,i),n.update(i,r,1)},this.renderInstances=function(i,a,o){if(0===o)return;let l,c;if(s)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](r,i,a,o),n.update(a,r,o)}}function Qr(e,t,n){let i;function s(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let a=void 0!==n.precision?n.precision:"highp";const o=s(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=r||t.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,h=e.getParameter(34930),u=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),m=e.getParameter(34921),f=e.getParameter(36347),g=e.getParameter(36348),x=e.getParameter(36349),v=u>0,y=r||t.has("OES_texture_float");return{isWebGL2:r,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:x,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:v&&y,maxSamples:r?e.getParameter(36183):0}}function ea(e){const t=this;let n=null,i=0,s=!1,r=!1;const a=new Vr,o=new qn,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(e,n,i,s){const r=null!==e?e.length:0;let c=null;if(0!==r){if(c=l.value,!0!==s||null===c){const t=i+4*r,s=n.matrixWorldInverse;o.getNormalMatrix(s),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,n=i;t!==r;++t,n+=4)a.copy(e[t]).applyMatrix4(s,o),a.normal.toArray(c,n),c[n+3]=a.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=r,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){const a=0!==e.length||t||0!==i||s;return s=t,n=h(e,r,0),i=e.length,a},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,c()},this.setState=function(t,a,o){const u=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,m=e.get(t);if(!s||null===u||0===u.length||r&&!p)r?h(null):c();else{const e=r?0:i,t=4*e;let s=m.clippingState||null;l.value=s,s=h(u,a,t,o);for(let e=0;e!==t;++e)s[e]=n[e];m.clippingState=s,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function ta(e){let t=new WeakMap;function n(e,t){return t===Me?e.mapping=_e:t===we&&(e.mapping=be),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const s=t.get(n);void 0!==s&&(t.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture&&!1===s.isRenderTargetTexture){const r=s.mapping;if(r===Me||r===we){if(t.has(s))return n(t.get(s).texture,s.mapping);{const r=s.image;if(r&&r.height>0){const a=new zr(r.height/2);return a.fromEquirectangularTexture(e,s),t.set(s,a),s.addEventListener("dispose",i),n(a.texture,s.mapping)}return null}}}return s},dispose:function(){t=new WeakMap}}}Zr.physical={uniforms:Cr([Zr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Xn(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new li(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Xn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new li(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new li(1,1,1)},specularColorMap:{value:null}}]),vertexShader:qr.meshphysical_vert,fragmentShader:qr.meshphysical_frag};class na extends Rr{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,r=n+e,a=i+t,o=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=e*this.view.offsetX,r=s+e*this.view.width,a-=t*this.view.offsetY,o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const ia=[.125,.215,.35,.446,.526,.582],sa=new na,ra=new li;let aa=null;const oa=(1+Math.sqrt(5))/2,la=1/oa,ca=[new wi(1,1,1),new wi(-1,1,1),new wi(1,1,-1),new wi(-1,1,-1),new wi(0,oa,la),new wi(0,oa,-la),new wi(la,0,oa),new wi(-la,0,oa),new wi(oa,la,0),new wi(-oa,la,0)];class ha{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){aa=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ma(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=pa(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(aa),e.scissorTest=!1,da(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===_e||e.mapping===be?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),aa=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Ie,minFilter:Ie,generateMipmaps:!1,type:je,format:Je,encoding:qt,depthBuffer:!1},i=ua(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=ua(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],i=[];let s=e;const r=e-4+1+ia.length;for(let a=0;a<r;a++){const r=Math.pow(2,s);n.push(r);let o=1/r;a>e-4?o=ia[a-e+4-1]:0===a&&(o=0),i.push(o);const l=1/(r-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,m=3,f=2,g=1,x=new Float32Array(m*p*d),v=new Float32Array(f*p*d),y=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];x.set(i,m*p*e),v.set(u,f*p*e);const s=[e,e,e,e,e,e];y.set(s,g*p*e)}const _=new ar;_.setAttribute("position",new Gs(x,m)),_.setAttribute("uv",new Gs(v,f)),_.setAttribute("faceIndex",new Gs(y,g)),t.push(_),s>4&&s--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(e,t,n){const i=new Float32Array(20),s=new wi(0,1,0);return new Lr({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:D,depthTest:!1,depthWrite:!1})}(i,e,t)}return i}_compileMaterial(e){const t=new Sr(this._lodPlanes[0],e);this._renderer.compile(t,sa)}_sceneToCubeUV(e,t,n,i){const s=new Pr(90,1,t,n),r=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(ra),o.toneMapping=pe,o.autoClear=!1;const h=new Bs({name:"PMREM.Background",side:P,depthWrite:!1,depthTest:!1}),u=new Sr(new Er,h);let d=!1;const p=e.background;p?p.isColor&&(h.color.copy(p),e.background=null,d=!0):(h.color.copy(ra),d=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(s.up.set(0,r[t],0),s.lookAt(a[t],0,0)):1===n?(s.up.set(0,0,r[t]),s.lookAt(0,a[t],0)):(s.up.set(0,r[t],0),s.lookAt(0,0,a[t]));const l=this._cubeSize;da(i,n*l,t>2?l:0,l,l),o.setRenderTarget(i),d&&o.render(u,s),o.render(e,s)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=c,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===_e||e.mapping===be;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=ma()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=pa());const s=i?this._cubemapMaterial:this._equirectMaterial,r=new Sr(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const a=this._cubeSize;da(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(r,sa)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=ca[(t-1)%ca.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Sr(this._lodPlanes[i],l),h=l.uniforms,u=this._sizeLods[n]-1,d=isFinite(s)?Math.PI/(2*u):2*Math.PI/39,p=s/d,m=isFinite(s)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);f.push(n),0===e?g+=n:e<m&&(g+=2*n)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value="latitudinal"===r,a&&(h.poleAxis.value=a);const{_lodMax:x}=this;h.dTheta.value=d,h.mipInt.value=x-n;const v=this._sizeLods[i];da(t,3*v*(i>x-4?i-x+4:0),4*(this._cubeSize-v),3*v,2*v),o.setRenderTarget(t),o.render(c,sa)}}function ua(e,t,n){const i=new gi(e,t,n);return i.texture.mapping=Se,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function da(e,t,n,i,s){e.viewport.set(t,n,i,s),e.scissor.set(t,n,i,s)}function pa(){return new Lr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:D,depthTest:!1,depthWrite:!1})}function ma(){return new Lr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:D,depthTest:!1,depthWrite:!1})}function fa(e){let t=new WeakMap,n=null;function i(e){const n=e.target;n.removeEventListener("dispose",i);const s=t.get(n);void 0!==s&&(t.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const r=s.mapping,a=r===Me||r===we,o=r===_e||r===be;if(a||o){if(s.isRenderTargetTexture&&!0===s.needsPMREMUpdate){s.needsPMREMUpdate=!1;let i=t.get(s);return null===n&&(n=new ha(e)),i=a?n.fromEquirectangular(s,i):n.fromCubemap(s,i),t.set(s,i),i.texture}if(t.has(s))return t.get(s).texture;{const r=s.image;if(a&&r&&r.height>0||o&&r&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(r)){null===n&&(n=new ha(e));const r=a?n.fromEquirectangular(s):n.fromCubemap(s);return t.set(s,r),s.addEventListener("dispose",i),r.texture}return null}}}return s},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function ga(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function xa(e,t,n,i){const s={},r=new WeakMap;function a(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",a),delete s[o.id];const l=r.get(o);l&&(t.remove(l),r.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],i=e.index,s=e.attributes.position;let a=0;if(null!==i){const e=i.array;a=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],s=e[t+1],r=e[t+2];n.push(i,s,s,r,r,i)}}else{const e=s.array;a=s.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,s=t+2;n.push(e,i,i,s,s,e)}}const o=new(Yn(n)?Zs:qs)(n,1);o.version=a;const l=r.get(e);l&&t.remove(l),r.set(e,o)}return{get:function(e,t){return!0===s[t.id]||(t.addEventListener("dispose",a),s[t.id]=!0,n.memory.geometries++),t},update:function(e){const n=e.attributes;for(const e in n)t.update(n[e],34962);const i=e.morphAttributes;for(const e in i){const n=i[e];for(let e=0,i=n.length;e<i;e++)t.update(n[e],34962)}},getWireframeAttribute:function(e){const t=r.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return r.get(e)}}}function va(e,t,n,i){const s=i.isWebGL2;let r,a,o;this.setMode=function(e){r=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,i){e.drawElements(r,i,a,t*o),n.update(i,r,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(s)h=e,u="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](r,l,a,i*o,c),n.update(l,r,c)}}function ya(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function _a(e,t){return e[0]-t[0]}function ba(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Ma(e,t,n){const i={},s=new Float32Array(8),r=new WeakMap,a=new fi,o=[];for(let e=0;e<8;e++)o[e]=[e,0];return{update:function(l,c,h,u){const d=l.morphTargetInfluences;if(!0===t.isWebGL2){const p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=void 0!==p?p.length:0;let f=r.get(c);if(void 0===f||f.count!==m){void 0!==f&&f.texture.dispose();const v=void 0!==c.morphAttributes.position,y=void 0!==c.morphAttributes.normal,_=void 0!==c.morphAttributes.color,b=c.morphAttributes.position||[],M=c.morphAttributes.normal||[],w=c.morphAttributes.color||[];let S=0;!0===v&&(S=1),!0===y&&(S=2),!0===_&&(S=3);let T=c.attributes.position.count*S,E=1;T>t.maxTextureSize&&(E=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const A=new Float32Array(T*E*4*m),C=new xi(A,T,E,m);C.type=We,C.needsUpdate=!0;const N=4*S;for(let R=0;R<m;R++){const P=b[R],I=M[R],D=w[R],O=T*E*4*R;for(let z=0;z<P.count;z++){const F=z*N;!0===v&&(a.fromBufferAttribute(P,z),A[O+F+0]=a.x,A[O+F+1]=a.y,A[O+F+2]=a.z,A[O+F+3]=0),!0===y&&(a.fromBufferAttribute(I,z),A[O+F+4]=a.x,A[O+F+5]=a.y,A[O+F+6]=a.z,A[O+F+7]=0),!0===_&&(a.fromBufferAttribute(D,z),A[O+F+8]=a.x,A[O+F+9]=a.y,A[O+F+10]=a.z,A[O+F+11]=4===D.itemSize?a.w:1)}}function L(){C.dispose(),r.delete(c),c.removeEventListener("dispose",L)}f={count:m,texture:C,size:new Xn(T,E)},r.set(c,f),c.addEventListener("dispose",L)}let g=0;for(let U=0;U<d.length;U++)g+=d[U];const x=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(e,"morphTargetBaseInfluence",x),u.getUniforms().setValue(e,"morphTargetInfluences",d),u.getUniforms().setValue(e,"morphTargetsTexture",f.texture,n),u.getUniforms().setValue(e,"morphTargetsTextureSize",f.size)}else{const B=void 0===d?0:d.length;let V=i[c.id];if(void 0===V||V.length!==B){V=[];for(let j=0;j<B;j++)V[j]=[j,0];i[c.id]=V}for(let X=0;X<B;X++){const q=V[X];q[0]=X,q[1]=d[X]}V.sort(ba);for(let Y=0;Y<8;Y++)Y<B&&V[Y][1]?(o[Y][0]=V[Y][0],o[Y][1]=V[Y][1]):(o[Y][0]=Number.MAX_SAFE_INTEGER,o[Y][1]=0);o.sort(_a);const k=c.morphAttributes.position,G=c.morphAttributes.normal;let H=0;for(let Z=0;Z<8;Z++){const $=o[Z],J=$[0],K=$[1];J!==Number.MAX_SAFE_INTEGER&&K?(k&&c.getAttribute("morphTarget"+Z)!==k[J]&&c.setAttribute("morphTarget"+Z,k[J]),G&&c.getAttribute("morphNormal"+Z)!==G[J]&&c.setAttribute("morphNormal"+Z,G[J]),s[Z]=K,H+=K):(k&&!0===c.hasAttribute("morphTarget"+Z)&&c.deleteAttribute("morphTarget"+Z),G&&!0===c.hasAttribute("morphNormal"+Z)&&c.deleteAttribute("morphNormal"+Z),s[Z]=0)}const W=c.morphTargetsRelative?1:1-H;u.getUniforms().setValue(e,"morphTargetBaseInfluence",W),u.getUniforms().setValue(e,"morphTargetInfluences",s)}}}}function wa(e,t,n,i){let s=new WeakMap;function r(e){const t=e.target;t.removeEventListener("dispose",r),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){const a=i.render.frame,o=e.geometry,l=t.get(e,o);return s.get(l)!==a&&(t.update(l),s.set(l,a)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",r)&&e.addEventListener("dispose",r),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){s=new WeakMap}}}const Sa=new mi,Ta=new xi,Ea=new yi,Aa=new Or,Ca=[],Na=[],La=new Float32Array(16),Ra=new Float32Array(9),Pa=new Float32Array(4);function Ia(e,t,n){const i=e[0];if(i<=0||i>0)return e;const s=t*n;let r=Ca[s];if(void 0===r&&(r=new Float32Array(s),Ca[s]=r),0!==t){i.toArray(r,0);for(let i=1,s=0;i!==t;++i)s+=n,e[i].toArray(r,s)}return r}function Da(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Oa(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function za(e,t){let n=Na[t];void 0===n&&(n=new Int32Array(t),Na[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function Fa(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Ua(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Da(n,t))return;e.uniform2fv(this.addr,t),Oa(n,t)}}function Ba(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Da(n,t))return;e.uniform3fv(this.addr,t),Oa(n,t)}}function Va(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Da(n,t))return;e.uniform4fv(this.addr,t),Oa(n,t)}}function ka(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Da(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Oa(n,t)}else{if(Da(n,i))return;Pa.set(i),e.uniformMatrix2fv(this.addr,!1,Pa),Oa(n,i)}}function Ga(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Da(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Oa(n,t)}else{if(Da(n,i))return;Ra.set(i),e.uniformMatrix3fv(this.addr,!1,Ra),Oa(n,i)}}function Ha(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Da(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Oa(n,t)}else{if(Da(n,i))return;La.set(i),e.uniformMatrix4fv(this.addr,!1,La),Oa(n,i)}}function Wa(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function ja(e,t){const n=this.cache;Da(n,t)||(e.uniform2iv(this.addr,t),Oa(n,t))}function Xa(e,t){const n=this.cache;Da(n,t)||(e.uniform3iv(this.addr,t),Oa(n,t))}function qa(e,t){const n=this.cache;Da(n,t)||(e.uniform4iv(this.addr,t),Oa(n,t))}function Ya(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Za(e,t){const n=this.cache;Da(n,t)||(e.uniform2uiv(this.addr,t),Oa(n,t))}function $a(e,t){const n=this.cache;Da(n,t)||(e.uniform3uiv(this.addr,t),Oa(n,t))}function Ja(e,t){const n=this.cache;Da(n,t)||(e.uniform4uiv(this.addr,t),Oa(n,t))}function Ka(e,t,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(e.uniform1i(this.addr,s),i[0]=s),n.setTexture2D(t||Sa,s)}function Qa(e,t,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(e.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(t||Ea,s)}function eo(e,t,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(e.uniform1i(this.addr,s),i[0]=s),n.setTextureCube(t||Aa,s)}function to(e,t,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(e.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(t||Ta,s)}function no(e,t){e.uniform1fv(this.addr,t)}function io(e,t){const n=Ia(t,this.size,2);e.uniform2fv(this.addr,n)}function so(e,t){const n=Ia(t,this.size,3);e.uniform3fv(this.addr,n)}function ro(e,t){const n=Ia(t,this.size,4);e.uniform4fv(this.addr,n)}function ao(e,t){const n=Ia(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function oo(e,t){const n=Ia(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function lo(e,t){const n=Ia(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function co(e,t){e.uniform1iv(this.addr,t)}function ho(e,t){e.uniform2iv(this.addr,t)}function uo(e,t){e.uniform3iv(this.addr,t)}function po(e,t){e.uniform4iv(this.addr,t)}function mo(e,t){e.uniform1uiv(this.addr,t)}function fo(e,t){e.uniform2uiv(this.addr,t)}function go(e,t){e.uniform3uiv(this.addr,t)}function xo(e,t){e.uniform4uiv(this.addr,t)}function vo(e,t,n){const i=this.cache,s=t.length,r=za(n,s);Da(i,r)||(e.uniform1iv(this.addr,r),Oa(i,r));for(let e=0;e!==s;++e)n.setTexture2D(t[e]||Sa,r[e])}function yo(e,t,n){const i=this.cache,s=t.length,r=za(n,s);Da(i,r)||(e.uniform1iv(this.addr,r),Oa(i,r));for(let e=0;e!==s;++e)n.setTexture3D(t[e]||Ea,r[e])}function _o(e,t,n){const i=this.cache,s=t.length,r=za(n,s);Da(i,r)||(e.uniform1iv(this.addr,r),Oa(i,r));for(let e=0;e!==s;++e)n.setTextureCube(t[e]||Aa,r[e])}function bo(e,t,n){const i=this.cache,s=t.length,r=za(n,s);Da(i,r)||(e.uniform1iv(this.addr,r),Oa(i,r));for(let e=0;e!==s;++e)n.setTexture2DArray(t[e]||Ta,r[e])}class Mo{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Fa;case 35664:return Ua;case 35665:return Ba;case 35666:return Va;case 35674:return ka;case 35675:return Ga;case 35676:return Ha;case 5124:case 35670:return Wa;case 35667:case 35671:return ja;case 35668:case 35672:return Xa;case 35669:case 35673:return qa;case 5125:return Ya;case 36294:return Za;case 36295:return $a;case 36296:return Ja;case 35678:case 36198:case 36298:case 36306:case 35682:return Ka;case 35679:case 36299:case 36307:return Qa;case 35680:case 36300:case 36308:case 36293:return eo;case 36289:case 36303:case 36311:case 36292:return to}}(t.type)}}class wo{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return no;case 35664:return io;case 35665:return so;case 35666:return ro;case 35674:return ao;case 35675:return oo;case 35676:return lo;case 5124:case 35670:return co;case 35667:case 35671:return ho;case 35668:case 35672:return uo;case 35669:case 35673:return po;case 5125:return mo;case 36294:return fo;case 36295:return go;case 36296:return xo;case 35678:case 36198:case 36298:case 36306:case 35682:return vo;case 35679:case 36299:case 36307:return yo;case 35680:case 36300:case 36308:case 36293:return _o;case 36289:case 36303:case 36311:case 36292:return bo}}(t.type)}}class So{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const r=i[s];r.setValue(e,t[r.id],n)}}}const To=/(\w+)(\])?(\[|\.)?/g;function Eo(e,t){e.seq.push(t),e.map[t.id]=t}function Ao(e,t,n){const i=e.name,s=i.length;for(To.lastIndex=0;;){const r=To.exec(i),a=To.lastIndex;let o=r[1];const l="]"===r[2],c=r[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===s){Eo(n,void 0===c?new Mo(o,e,t):new wo(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new So(o),Eo(n,e)),n=e}}}class Co{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);Ao(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,i){const s=this.map[t];void 0!==s&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,r=t.length;s!==r;++s){const r=t[s],a=n[r.id];!1!==a.needsUpdate&&r.setValue(e,a.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const s=e[i];s.id in t&&n.push(s)}return n}}function No(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let Lo=0;function Ro(e,t,n){const i=e.getShaderParameter(t,35713),s=e.getShaderInfoLog(t).trim();if(i&&""===s)return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const i=parseInt(r[1]);return n.toUpperCase()+"\n\n"+s+"\n\n"+function(e,t){const n=e.split("\n"),i=[],s=Math.max(t-6,0),r=Math.min(t+6,n.length);for(let e=s;e<r;e++){const s=e+1;i.push(`${s===t?">":" "} ${s}: ${n[e]}`)}return i.join("\n")}(e.getShaderSource(t),i)}return s}function Po(e,t){const n=function(e){switch(e){case qt:return["Linear","( value )"];case Yt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Io(e,t){let n;switch(t){case me:n="Linear";break;case fe:n="Reinhard";break;case ge:n="OptimizedCineon";break;case xe:n="ACESFilmic";break;case ve:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Do(e){return""!==e}function Oo(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function zo(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Fo=/^[ \t]*#include +<([\w\d./]+)>/gm;function Uo(e){return e.replace(Fo,Bo)}function Bo(e,t){const n=qr[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Uo(n)}const Vo=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ko(e){return e.replace(Vo,Go)}function Go(e,t,n,i){let s="";for(let e=parseInt(t);e<parseInt(n);e++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return s}function Ho(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Wo(e,t,n,i){const s=e.getContext(),r=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===C?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===N?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===L&&(t="SHADOWMAP_TYPE_VSM"),t}(n),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case _e:case be:t="ENVMAP_TYPE_CUBE";break;case Se:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),h=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===be&&(t="ENVMAP_MODE_REFRACTION"),t}(n),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case he:t="ENVMAP_BLENDING_MULTIPLY";break;case ue:t="ENVMAP_BLENDING_MIX";break;case de:t="ENVMAP_BLENDING_ADD"}return t}(n),d=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),p=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Do).join("\n")}(n),m=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(r),f=s.createProgram();let g,x,v=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[m].filter(Do).join("\n"),g.length>0&&(g+="\n"),x=[p,m].filter(Do).join("\n"),x.length>0&&(x+="\n")):(g=[Ho(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Do).join("\n"),x=[p,Ho(n),"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==pe?"#define TONE_MAPPING":"",n.toneMapping!==pe?qr.tonemapping_pars_fragment:"",n.toneMapping!==pe?Io("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",qr.encodings_pars_fragment,Po("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Do).join("\n")),a=Uo(a),a=Oo(a,n),a=zo(a,n),o=Uo(o),o=Oo(o,n),o=zo(o,n),a=ko(a),o=ko(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(v="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,x=["#define varying in",n.glslVersion===Nn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Nn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const y=v+x+o,_=No(s,35633,v+g+a),b=No(s,35632,y);if(s.attachShader(f,_),s.attachShader(f,b),void 0!==n.index0AttributeName?s.bindAttribLocation(f,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(f,0,"position"),s.linkProgram(f),e.debug.checkShaderErrors){const e=s.getProgramInfoLog(f).trim(),t=s.getShaderInfoLog(_).trim(),n=s.getShaderInfoLog(b).trim();let i=!0,r=!0;if(!1===s.getProgramParameter(f,35714)){i=!1;const t=Ro(s,_,"vertex"),n=Ro(s,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(f,35715)+"\n\nProgram Info Log: "+e+"\n"+t+"\n"+n)}else""!==e?console.warn("THREE.WebGLProgram: Program Info Log:",e):""!==t&&""!==n||(r=!1);r&&(this.diagnostics={runnable:i,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:n,prefix:x}})}let M,w;return s.deleteShader(_),s.deleteShader(b),this.getUniforms=function(){return void 0===M&&(M=new Co(s,f)),M},this.getAttributes=function(){return void 0===w&&(w=function(e,t){const n={},i=e.getProgramParameter(t,35721);for(let s=0;s<i;s++){const i=e.getActiveAttrib(t,s),r=i.name;let a=1;35674===i.type&&(a=2),35675===i.type&&(a=3),35676===i.type&&(a=4),n[r]={type:i.type,location:e.getAttribLocation(t,r),locationSize:a}}return n}(s,f)),w},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(f),this.program=void 0},this.name=n.shaderName,this.id=Lo++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=_,this.fragmentShader=b,this}let jo=0;class Xo{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),r=this._getShaderCacheForMaterial(e);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(s)&&(r.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new qo(e),t.set(e,n)),n}}class qo{constructor(e){this.id=jo++,this.code=e,this.usedTimes=0}}function Yo(e,t,n,i,s,r,a){const o=new us,l=new Xo,c=[],h=s.isWebGL2,u=s.logarithmicDepthBuffer,d=s.vertexTextures;let p=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(r,o,c,f,g){const x=f.fog,v=g.geometry,y=r.isMeshStandardMaterial?f.environment:null,_=(r.isMeshStandardMaterial?n:t).get(r.envMap||y),b=_&&_.mapping===Se?_.image.height:null,M=m[r.type];null!==r.precision&&(p=s.getMaxPrecision(r.precision),p!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",p,"instead."));const w=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,S=void 0!==w?w.length:0;let T,E,A,C,N=0;if(void 0!==v.morphAttributes.position&&(N=1),void 0!==v.morphAttributes.normal&&(N=2),void 0!==v.morphAttributes.color&&(N=3),M){const e=Zr[M];T=e.vertexShader,E=e.fragmentShader}else T=r.vertexShader,E=r.fragmentShader,l.update(r),A=l.getVertexShaderID(r),C=l.getFragmentShaderID(r);const L=e.getRenderTarget(),R=r.alphaTest>0,D=r.clearcoat>0,z=r.iridescence>0;return{isWebGL2:h,shaderID:M,shaderName:r.type,vertexShader:T,fragmentShader:E,defines:r.defines,customVertexShaderID:A,customFragmentShaderID:C,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:p,instancing:!0===g.isInstancedMesh,instancingColor:!0===g.isInstancedMesh&&null!==g.instanceColor,supportsVertexTextures:d,outputEncoding:null===L?e.outputEncoding:!0===L.isXRRenderTarget?L.texture.encoding:qt,map:!!r.map,matcap:!!r.matcap,envMap:!!_,envMapMode:_&&_.mapping,envMapCubeUVHeight:b,lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:r.normalMapType===Kt,tangentSpaceNormalMap:r.normalMapType===Jt,decodeVideoTexture:!!r.map&&!0===r.map.isVideoTexture&&r.map.encoding===Yt,clearcoat:D,clearcoatMap:D&&!!r.clearcoatMap,clearcoatRoughnessMap:D&&!!r.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!r.clearcoatNormalMap,iridescence:z,iridescenceMap:z&&!!r.iridescenceMap,iridescenceThicknessMap:z&&!!r.iridescenceThicknessMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,specularIntensityMap:!!r.specularIntensityMap,specularColorMap:!!r.specularColorMap,opaque:!1===r.transparent&&r.blending===O,alphaMap:!!r.alphaMap,alphaTest:R,gradientMap:!!r.gradientMap,sheen:r.sheen>0,sheenColorMap:!!r.sheenColorMap,sheenRoughnessMap:!!r.sheenRoughnessMap,transmission:r.transmission>0,transmissionMap:!!r.transmissionMap,thicknessMap:!!r.thicknessMap,combine:r.combine,vertexTangents:!!r.normalMap&&!!v.attributes.tangent,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!v.attributes.color&&4===v.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.iridescenceMap||r.iridescenceThicknessMap||r.displacementMap||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheenColorMap||r.sheenRoughnessMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.iridescenceMap||r.iridescenceThicknessMap||r.transmission>0||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheen>0||r.sheenColorMap||r.sheenRoughnessMap||!r.displacementMap),fog:!!x,useFog:!0===r.fog,fogExp2:x&&x.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===g.isSkinnedMesh,morphTargets:void 0!==v.morphAttributes.position,morphNormals:void 0!==v.morphAttributes.normal,morphColors:void 0!==v.morphAttributes.color,morphTargetsCount:S,morphTextureStride:N,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:pe,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,doubleSided:r.side===I,flipSided:r.side===P,useDepthPacking:!!r.depthPacking,depthPacking:r.depthPacking||0,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){o.disableAll(),t.isWebGL2&&o.enable(0),t.supportsVertexTextures&&o.enable(1),t.instancing&&o.enable(2),t.instancingColor&&o.enable(3),t.map&&o.enable(4),t.matcap&&o.enable(5),t.envMap&&o.enable(6),t.lightMap&&o.enable(7),t.aoMap&&o.enable(8),t.emissiveMap&&o.enable(9),t.bumpMap&&o.enable(10),t.normalMap&&o.enable(11),t.objectSpaceNormalMap&&o.enable(12),t.tangentSpaceNormalMap&&o.enable(13),t.clearcoat&&o.enable(14),t.clearcoatMap&&o.enable(15),t.clearcoatRoughnessMap&&o.enable(16),t.clearcoatNormalMap&&o.enable(17),t.iridescence&&o.enable(18),t.iridescenceMap&&o.enable(19),t.iridescenceThicknessMap&&o.enable(20),t.displacementMap&&o.enable(21),t.specularMap&&o.enable(22),t.roughnessMap&&o.enable(23),t.metalnessMap&&o.enable(24),t.gradientMap&&o.enable(25),t.alphaMap&&o.enable(26),t.alphaTest&&o.enable(27),t.vertexColors&&o.enable(28),t.vertexAlphas&&o.enable(29),t.vertexUvs&&o.enable(30),t.vertexTangents&&o.enable(31),t.uvsVertexOnly&&o.enable(32),e.push(o.mask),o.disableAll(),t.fog&&o.enable(0),t.useFog&&o.enable(1),t.flatShading&&o.enable(2),t.logarithmicDepthBuffer&&o.enable(3),t.skinning&&o.enable(4),t.morphTargets&&o.enable(5),t.morphNormals&&o.enable(6),t.morphColors&&o.enable(7),t.premultipliedAlpha&&o.enable(8),t.shadowMapEnabled&&o.enable(9),t.physicallyCorrectLights&&o.enable(10),t.doubleSided&&o.enable(11),t.flipSided&&o.enable(12),t.useDepthPacking&&o.enable(13),t.dithering&&o.enable(14),t.specularIntensityMap&&o.enable(15),t.specularColorMap&&o.enable(16),t.transmission&&o.enable(17),t.transmissionMap&&o.enable(18),t.thicknessMap&&o.enable(19),t.sheen&&o.enable(20),t.sheenColorMap&&o.enable(21),t.sheenRoughnessMap&&o.enable(22),t.decodeVideoTexture&&o.enable(23),t.opaque&&o.enable(24),e.push(o.mask)}(n,t),n.push(e.outputEncoding)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=Zr[t];n=Nr.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,t=c.length;e<t;e++){const t=c[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new Wo(e,n,t,r),c.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:c,dispose:function(){l.dispose()}}}function Zo(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function $o(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Jo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ko(){const e=[];let t=0;const n=[],i=[],s=[];function r(n,i,s,r,a,o){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:i,material:s,groupOrder:r,renderOrder:n.renderOrder,z:a,group:o},e[t]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=s,l.groupOrder=r,l.renderOrder=n.renderOrder,l.z=a,l.group=o),t++,l}return{opaque:n,transmissive:i,transparent:s,init:function(){t=0,n.length=0,i.length=0,s.length=0},push:function(e,t,a,o,l,c){const h=r(e,t,a,o,l,c);a.transmission>0?i.push(h):!0===a.transparent?s.push(h):n.push(h)},unshift:function(e,t,a,o,l,c){const h=r(e,t,a,o,l,c);a.transmission>0?i.unshift(h):!0===a.transparent?s.unshift(h):n.unshift(h)},finish:function(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||$o),i.length>1&&i.sort(t||Jo),s.length>1&&s.sort(t||Jo)}}}function Qo(){let e=new WeakMap;return{get:function(t,n){const i=e.get(t);let s;return void 0===i?(s=new Ko,e.set(t,[s])):n>=i.length?(s=new Ko,i.push(s)):s=i[n],s},dispose:function(){e=new WeakMap}}}function el(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new wi,color:new li};break;case"SpotLight":n={position:new wi,direction:new wi,color:new li,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new wi,color:new li,distance:0,decay:0};break;case"HemisphereLight":n={direction:new wi,skyColor:new li,groundColor:new li};break;case"RectAreaLight":n={color:new li,position:new wi,halfWidth:new wi,halfHeight:new wi}}return e[t.id]=n,n}}}let tl=0;function nl(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function il(e,t){const n=new el,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xn,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let e=0;e<9;e++)s.probe.push(new wi);const r=new wi,a=new es,o=new es;return{setup:function(r,a){let o=0,l=0,c=0;for(let e=0;e<9;e++)s.probe[e].set(0,0,0);let h=0,u=0,d=0,p=0,m=0,f=0,g=0,x=0,v=0,y=0;r.sort(nl);const _=!0!==a?Math.PI:1;for(let e=0,t=r.length;e<t;e++){const t=r[e],a=t.color,b=t.intensity,M=t.distance,w=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=a.r*b*_,l+=a.g*b*_,c+=a.b*b*_;else if(t.isLightProbe)for(let e=0;e<9;e++)s.probe[e].addScaledVector(t.sh.coefficients[e],b);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*_),t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,s.directionalShadow[h]=n,s.directionalShadowMap[h]=w,s.directionalShadowMatrix[h]=t.shadow.matrix,f++}s.directional[h]=e,h++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(a).multiplyScalar(b*_),e.distance=M,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,s.spot[d]=e;const r=t.shadow;if(t.map&&(s.spotLightMap[v]=t.map,v++,r.updateMatrices(t),t.castShadow&&y++),s.spotLightMatrix[d]=r.matrix,t.castShadow){const e=i.get(t);e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,s.spotShadow[d]=e,s.spotShadowMap[d]=w,x++}d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(a).multiplyScalar(b),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),s.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*_),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,s.pointShadow[u]=n,s.pointShadowMap[u]=w,s.pointShadowMatrix[u]=t.shadow.matrix,g++}s.point[u]=e,u++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(b*_),e.groundColor.copy(t.groundColor).multiplyScalar(b*_),s.hemi[m]=e,m++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(s.rectAreaLTC1=Yr.LTC_FLOAT_1,s.rectAreaLTC2=Yr.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(s.rectAreaLTC1=Yr.LTC_HALF_1,s.rectAreaLTC2=Yr.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=o,s.ambient[1]=l,s.ambient[2]=c;const b=s.hash;b.directionalLength===h&&b.pointLength===u&&b.spotLength===d&&b.rectAreaLength===p&&b.hemiLength===m&&b.numDirectionalShadows===f&&b.numPointShadows===g&&b.numSpotShadows===x&&b.numSpotMaps===v||(s.directional.length=h,s.spot.length=d,s.rectArea.length=p,s.point.length=u,s.hemi.length=m,s.directionalShadow.length=f,s.directionalShadowMap.length=f,s.pointShadow.length=g,s.pointShadowMap.length=g,s.spotShadow.length=x,s.spotShadowMap.length=x,s.directionalShadowMatrix.length=f,s.pointShadowMatrix.length=g,s.spotLightMatrix.length=x+v-y,s.spotLightMap.length=v,s.numSpotLightShadowsWithMaps=y,b.directionalLength=h,b.pointLength=u,b.spotLength=d,b.rectAreaLength=p,b.hemiLength=m,b.numDirectionalShadows=f,b.numPointShadows=g,b.numSpotShadows=x,b.numSpotMaps=v,s.version=tl++)},setupView:function(e,t){let n=0,i=0,l=0,c=0,h=0;const u=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=s.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),n++}else if(d.isSpotLight){const e=s.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const e=s.rectArea[c];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),o.identity(),a.copy(d.matrixWorld),a.premultiply(u),o.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),c++}else if(d.isPointLight){const e=s.point[i];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(u),i++}else if(d.isHemisphereLight){const e=s.hemi[h];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(u),h++}}},state:s}}function sl(e,t){const n=new il(e,t),i=[],s=[];return{init:function(){i.length=0,s.length=0},state:{lightsArray:i,shadowsArray:s,lights:n},setupLights:function(e){n.setup(i,e)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){s.push(e)}}}function rl(e,t){let n=new WeakMap;return{get:function(i,s=0){const r=n.get(i);let a;return void 0===r?(a=new sl(e,t),n.set(i,[a])):s>=r.length?(a=new sl(e,t),r.push(a)):a=r[s],a},dispose:function(){n=new WeakMap}}}class al extends Us{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Zt,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ol extends Us{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new wi,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function ll(e,t,n){let i=new Hr;const s=new Xn,r=new Xn,a=new fi,o=new al({depthPacking:$t}),l=new ol,c={},h=n.maxTextureSize,u={0:P,1:R,2:I},d=new Lr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Xn},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const m=new ar;m.setAttribute("position",new Gs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new Sr(m,d),g=this;function x(n,i){const r=t.update(f);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new gi(s.x,s.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,r,d,f,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,r,p,f,null)}function v(t,n,i,s,r,a){let h=null;const d=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(h=void 0!==d?d:!0===i.isPointLight?l:o,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0){const e=h.uuid,t=n.uuid;let i=c[e];void 0===i&&(i={},c[e]=i);let s=i[t];void 0===s&&(s=h.clone(),i[t]=s),h=s}return h.visible=n.visible,h.wireframe=n.wireframe,h.side=a===L?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],h.alphaMap=n.alphaMap,h.alphaTest=n.alphaTest,h.clipShadows=n.clipShadows,h.clippingPlanes=n.clippingPlanes,h.clipIntersection=n.clipIntersection,h.displacementMap=n.displacementMap,h.displacementScale=n.displacementScale,h.displacementBias=n.displacementBias,h.wireframeLinewidth=n.wireframeLinewidth,h.linewidth=n.linewidth,!0===i.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(i.matrixWorld),h.nearDistance=s,h.farDistance=r),h}function y(n,s,r,a,o){if(!1===n.visible)return;if(n.layers.test(s.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===L)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);const i=t.update(n),s=n.material;if(Array.isArray(s)){const t=i.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],h=s[c.materialIndex];if(h&&h.visible){const t=v(n,h,a,r.near,r.far,o);e.renderBufferDirect(r,null,i,t,n,c)}}}else if(s.visible){const t=v(n,s,a,r.near,r.far,o);e.renderBufferDirect(r,null,i,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)y(l[e],s,r,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=C,this.render=function(t,n,o){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(D),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,c=t.length;l<c;l++){const c=t[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;s.copy(u.mapSize);const p=u.getFrameExtents();if(s.multiply(p),r.copy(u.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/p.x),s.x=r.x*p.x,u.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/p.y),s.y=r.y*p.y,u.mapSize.y=r.y)),null===u.map){const e=this.type!==L?{minFilter:Ce,magFilter:Ce}:{};u.map=new gi(s.x,s.y,e),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const m=u.getViewportCount();for(let e=0;e<m;e++){const t=u.getViewport(e);a.set(r.x*t.x,r.y*t.y,r.x*t.z,r.y*t.w),d.viewport(a),u.updateMatrices(c,e),i=u.getFrustum(),y(n,o,u.camera,c,this.type)}!0!==u.isPointLightShadow&&this.type===L&&x(u,o),u.needsUpdate=!1}g.needsUpdate=!1,e.setRenderTarget(l,c,u)}}function cl(e,t,n){const i=n.isWebGL2,s=new function(){let t=!1;const n=new fi;let i=null;const s=new fi(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,r,a,o){!0===o&&(t*=a,i*=a,r*=a),n.set(t,i,r,a),!1===s.equals(n)&&(e.clearColor(t,i,r,a),s.copy(n))},reset:function(){t=!1,i=null,s.set(-1,0,0,0)}}},r=new function(){let t=!1,n=null,i=null,s=null;return{setTest:function(e){e?be(2929):Me(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){switch(t){case ne:e.depthFunc(512);break;case ie:e.depthFunc(519);break;case se:e.depthFunc(513);break;case re:e.depthFunc(515);break;case ae:e.depthFunc(514);break;case oe:e.depthFunc(518);break;case le:e.depthFunc(516);break;case ce:e.depthFunc(517);break;default:e.depthFunc(515)}i=t}},setLocked:function(e){t=e},setClear:function(t){s!==t&&(e.clearDepth(t),s=t)},reset:function(){t=!1,n=null,i=null,s=null}}},a=new function(){let t=!1,n=null,i=null,s=null,r=null,a=null,o=null,l=null,c=null;return{setTest:function(e){t||(e?be(2960):Me(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,a){i===t&&s===n&&r===a||(e.stencilFunc(t,n,a),i=t,s=n,r=a)},setOp:function(t,n,i){a===t&&o===n&&l===i||(e.stencilOp(t,n,i),a=t,o=n,l=i)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,i=null,s=null,r=null,a=null,o=null,l=null,c=null}}},o=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],p=null,m=!1,f=null,g=null,x=null,v=null,y=null,_=null,b=null,M=!1,E=null,A=null,C=null,N=null,L=null;const R=e.getParameter(35661);let he=!1,ue=0;const de=e.getParameter(7938);-1!==de.indexOf("WebGL")?(ue=parseFloat(/^WebGL (\d)/.exec(de)[1]),he=ue>=1):-1!==de.indexOf("OpenGL ES")&&(ue=parseFloat(/^OpenGL ES (\d)/.exec(de)[1]),he=ue>=2);let pe=null,me={};const fe=e.getParameter(3088),ge=e.getParameter(2978),xe=(new fi).fromArray(fe),ve=(new fi).fromArray(ge);function ye(t,n,i){const s=new Uint8Array(4),r=e.createTexture();e.bindTexture(t,r),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<i;t++)e.texImage2D(n+t,0,6408,1,1,0,6408,5121,s);return r}const _e={};function be(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function Me(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}_e[3553]=ye(3553,3553,1),_e[34067]=ye(34067,34069,6),s.setClear(0,0,0,1),r.setClear(1),a.setClear(0),be(2929),r.setFunc(re),Ee(!1),Ae(S),be(2884),Te(D);const we={[V]:32774,[k]:32778,[G]:32779};if(i)we[H]=32775,we[W]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(we[H]=e.MIN_EXT,we[W]=e.MAX_EXT)}const Se={[j]:0,[X]:1,[q]:768,[Z]:770,[te]:776,[Q]:774,[J]:772,[Y]:769,[$]:771,[ee]:775,[K]:773};function Te(t,n,i,s,r,a,o,l){if(t!==D){if(!1===m&&(be(3042),m=!0),t===B)r=r||n,a=a||i,o=o||s,n===g&&r===y||(e.blendEquationSeparate(we[n],we[r]),g=n,y=r),i===x&&s===v&&a===_&&o===b||(e.blendFuncSeparate(Se[i],Se[s],Se[a],Se[o]),x=i,v=s,_=a,b=o),f=t,M=null;else if(t!==f||l!==M){if(g===V&&y===V||(e.blendEquation(32774),g=V,y=V),l)switch(t){case O:e.blendFuncSeparate(1,771,1,771);break;case z:e.blendFunc(1,1);break;case F:e.blendFuncSeparate(0,769,0,1);break;case U:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case O:e.blendFuncSeparate(770,771,1,771);break;case z:e.blendFunc(770,1);break;case F:e.blendFuncSeparate(0,769,0,1);break;case U:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}x=null,v=null,_=null,b=null,f=t,M=l}}else!0===m&&(Me(3042),m=!1)}function Ee(t){E!==t&&(t?e.frontFace(2304):e.frontFace(2305),E=t)}function Ae(t){t!==w?(be(2884),t!==A&&(t===S?e.cullFace(1029):t===T?e.cullFace(1028):e.cullFace(1032))):Me(2884),A=t}function Ce(t,n,i){t?(be(32823),N===n&&L===i||(e.polygonOffset(n,i),N=n,L=i)):Me(32823)}return{buffers:{color:s,depth:r,stencil:a},enable:be,disable:Me,bindFramebuffer:function(t,n){return h[t]!==n&&(e.bindFramebuffer(t,n),h[t]=n,i&&(36009===t&&(h[36160]=n),36160===t&&(h[36009]=n)),!0)},drawBuffers:function(i,s){let r=d,a=!1;if(i)if(r=u.get(s),void 0===r&&(r=[],u.set(s,r)),i.isWebGLMultipleRenderTargets){const e=i.texture;if(r.length!==e.length||36064!==r[0]){for(let t=0,n=e.length;t<n;t++)r[t]=36064+t;r.length=e.length,a=!0}}else 36064!==r[0]&&(r[0]=36064,a=!0);else 1029!==r[0]&&(r[0]=1029,a=!0);a&&(n.isWebGL2?e.drawBuffers(r):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(r))},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:Te,setMaterial:function(e,t){e.side===I?Me(2884):be(2884);let n=e.side===P;t&&(n=!n),Ee(n),e.blending===O&&!1===e.transparent?Te(D):Te(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),s.setMask(e.colorWrite);const i=e.stencilWrite;a.setTest(i),i&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Ce(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?be(32926):Me(32926)},setFlipSided:Ee,setCullFace:Ae,setLineWidth:function(t){t!==C&&(he&&e.lineWidth(t),C=t)},setPolygonOffset:Ce,setScissorTest:function(e){e?be(3089):Me(3089)},activeTexture:function(t){void 0===t&&(t=33984+R-1),pe!==t&&(e.activeTexture(t),pe=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===pe?33984+R-1:pe);let s=me[i];void 0===s&&(s={type:void 0,texture:void 0},me[i]=s),s.type===t&&s.texture===n||(pe!==i&&(e.activeTexture(i),pe=i),e.bindTexture(t,n||_e[t]),s.type=t,s.texture=n)},unbindTexture:function(){const t=me[pe];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let i=l.get(n);void 0===i&&(i=new WeakMap,l.set(n,i));let s=i.get(t);void 0===s&&(s=e.getUniformBlockIndex(n,t.name),i.set(t,s))},uniformBlockBinding:function(t,n){const i=l.get(n).get(t);o.get(t)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),o.set(t,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===xe.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),xe.copy(t))},viewport:function(t){!1===ve.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ve.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===i&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},pe=null,me={},h={},u=new WeakMap,d=[],p=null,m=!1,f=null,g=null,x=null,v=null,y=null,_=null,b=null,M=!1,E=null,A=null,C=null,N=null,L=null,xe.set(0,0,e.canvas.width,e.canvas.height),ve.set(0,0,e.canvas.width,e.canvas.height),s.reset(),r.reset(),a.reset()}}}function hl(e,t,n,i,s,r,a){const o=s.isWebGL2,l=s.maxTextures,c=s.maxCubemapSize,h=s.maxTextureSize,u=s.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let f;const g=new WeakMap;let x=!1;try{x="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function v(e,t){return x?new OffscreenCanvas(e,t):Jn("canvas")}function y(e,t,n,i){let s=1;if((e.width>i||e.height>i)&&(s=i/Math.max(e.width,e.height)),s<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const i=t?Gn:Math.floor,r=i(s*e.width),a=i(s*e.height);void 0===f&&(f=v(r,a));const o=n?v(r,a):f;return o.width=r,o.height=a,o.getContext("2d").drawImage(e,0,0,r,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+r+"x"+a+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function _(e){return Vn(e.width)&&Vn(e.height)}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==Ce&&e.minFilter!==Ie}function M(t){e.generateMipmap(t)}function w(n,i,s,r,a=!1){if(!1===o)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=i;return 6403===i&&(5126===s&&(l=33326),5131===s&&(l=33325),5121===s&&(l=33321)),33319===i&&(5126===s&&(l=33328),5131===s&&(l=33327),5121===s&&(l=33323)),6408===i&&(5126===s&&(l=34836),5131===s&&(l=34842),5121===s&&(l=r===Yt&&!1===a?35907:32856),32819===s&&(l=32854),32820===s&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||t.get("EXT_color_buffer_float"),l}function S(e,t,n){return!0===b(e,n)||e.isFramebufferTexture&&e.minFilter!==Ce&&e.minFilter!==Ie?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function T(e){return e===Ce||e===Ne||e===Re?9728:9729}function E(e){const t=e.target;t.removeEventListener("dispose",E),function(e){const t=i.get(e);if(void 0===t.__webglInit)return;const n=e.source,s=g.get(n);if(s){const i=s[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&C(e),0===Object.keys(s).length&&g.delete(n)}i.remove(e)}(t),t.isVideoTexture&&m.delete(t)}function A(t){const n=t.target;n.removeEventListener("dispose",A),function(t){const n=t.texture,s=i.get(t),r=i.get(n);if(void 0!==r.__webglTexture&&(e.deleteTexture(r.__webglTexture),a.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(s.__webglFramebuffer[t]),s.__webglDepthbuffer&&e.deleteRenderbuffer(s.__webglDepthbuffer[t]);else{if(e.deleteFramebuffer(s.__webglFramebuffer),s.__webglDepthbuffer&&e.deleteRenderbuffer(s.__webglDepthbuffer),s.__webglMultisampledFramebuffer&&e.deleteFramebuffer(s.__webglMultisampledFramebuffer),s.__webglColorRenderbuffer)for(let t=0;t<s.__webglColorRenderbuffer.length;t++)s.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(s.__webglColorRenderbuffer[t]);s.__webglDepthRenderbuffer&&e.deleteRenderbuffer(s.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,s=n.length;t<s;t++){const s=i.get(n[t]);s.__webglTexture&&(e.deleteTexture(s.__webglTexture),a.memory.textures--),i.remove(n[t])}i.remove(n),i.remove(t)}(n)}function C(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const s=t.source;delete g.get(s)[n.__cacheKey],a.memory.textures--}let N=0;function L(e,t){const s=i.get(e);if(e.isVideoTexture&&function(e){const t=a.render.frame;m.get(e)!==t&&(m.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&s.__version!==e.version){const n=e.image;if(null===n)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==n.complete)return void O(s,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(3553,s.__webglTexture,33984+t)}const R={[Te]:10497,[Ee]:33071,[Ae]:33648},P={[Ce]:9728,[Ne]:9984,[Re]:9986,[Ie]:9729,[De]:9985,[ze]:9987};function I(n,r,a){if(a?(e.texParameteri(n,10242,R[r.wrapS]),e.texParameteri(n,10243,R[r.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,R[r.wrapR]),e.texParameteri(n,10240,P[r.magFilter]),e.texParameteri(n,10241,P[r.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),r.wrapS===Ee&&r.wrapT===Ee||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,T(r.magFilter)),e.texParameteri(n,10241,T(r.minFilter)),r.minFilter!==Ce&&r.minFilter!==Ie&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const a=t.get("EXT_texture_filter_anisotropic");if(r.type===We&&!1===t.has("OES_texture_float_linear"))return;if(!1===o&&r.type===je&&!1===t.has("OES_texture_half_float_linear"))return;(r.anisotropy>1||i.get(r).__currentAnisotropy)&&(e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,s.getMaxAnisotropy())),i.get(r).__currentAnisotropy=r.anisotropy)}}function D(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",E));const s=n.source;let r=g.get(s);void 0===r&&(r={},g.set(s,r));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(o!==t.__cacheKey){void 0===r[o]&&(r[o]={texture:e.createTexture(),usedTimes:0},a.memory.textures++,i=!0),r[o].usedTimes++;const s=r[t.__cacheKey];void 0!==s&&(r[t.__cacheKey].usedTimes--,0===s.usedTimes&&C(n)),t.__cacheKey=o,t.__webglTexture=r[o].texture}return i}function O(t,s,a){let l=3553;s.isDataArrayTexture&&(l=35866),s.isData3DTexture&&(l=32879);const c=D(t,s),u=s.source;n.bindTexture(l,t.__webglTexture,33984+a);const d=i.get(u);if(u.version!==d.__version||!0===c){n.activeTexture(33984+a),e.pixelStorei(37440,s.flipY),e.pixelStorei(37441,s.premultiplyAlpha),e.pixelStorei(3317,s.unpackAlignment),e.pixelStorei(37443,0);const t=function(e){return!o&&(e.wrapS!==Ee||e.wrapT!==Ee||e.minFilter!==Ce&&e.minFilter!==Ie)}(s)&&!1===_(s.image);let i=y(s.image,t,!1,h);i=k(s,i);const p=_(i)||o,m=r.convert(s.format,s.encoding);let f,g=r.convert(s.type),x=w(s.internalFormat,m,g,s.encoding,s.isVideoTexture);I(l,s,p);const v=s.mipmaps,T=o&&!0!==s.isVideoTexture,E=void 0===d.__version||!0===c,A=S(s,i,p);if(s.isDepthTexture)x=6402,o?x=s.type===We?36012:s.type===He?33190:s.type===Ye?35056:33189:s.type===We&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),s.format===et&&6402===x&&s.type!==ke&&s.type!==He&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),s.type=He,g=r.convert(s.type)),s.format===tt&&6402===x&&(x=34041,s.type!==Ye&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),s.type=Ye,g=r.convert(s.type))),E&&(T?n.texStorage2D(3553,1,x,i.width,i.height):n.texImage2D(3553,0,x,i.width,i.height,0,m,g,null));else if(s.isDataTexture)if(v.length>0&&p){T&&E&&n.texStorage2D(3553,A,x,v[0].width,v[0].height);for(let e=0,t=v.length;e<t;e++)f=v[e],T?n.texSubImage2D(3553,e,0,0,f.width,f.height,m,g,f.data):n.texImage2D(3553,e,x,f.width,f.height,0,m,g,f.data);s.generateMipmaps=!1}else T?(E&&n.texStorage2D(3553,A,x,i.width,i.height),n.texSubImage2D(3553,0,0,0,i.width,i.height,m,g,i.data)):n.texImage2D(3553,0,x,i.width,i.height,0,m,g,i.data);else if(s.isCompressedTexture){T&&E&&n.texStorage2D(3553,A,x,v[0].width,v[0].height);for(let e=0,t=v.length;e<t;e++)f=v[e],s.format!==Je?null!==m?T?n.compressedTexSubImage2D(3553,e,0,0,f.width,f.height,m,f.data):n.compressedTexImage2D(3553,e,x,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?n.texSubImage2D(3553,e,0,0,f.width,f.height,m,g,f.data):n.texImage2D(3553,e,x,f.width,f.height,0,m,g,f.data)}else if(s.isDataArrayTexture)T?(E&&n.texStorage3D(35866,A,x,i.width,i.height,i.depth),n.texSubImage3D(35866,0,0,0,0,i.width,i.height,i.depth,m,g,i.data)):n.texImage3D(35866,0,x,i.width,i.height,i.depth,0,m,g,i.data);else if(s.isData3DTexture)T?(E&&n.texStorage3D(32879,A,x,i.width,i.height,i.depth),n.texSubImage3D(32879,0,0,0,0,i.width,i.height,i.depth,m,g,i.data)):n.texImage3D(32879,0,x,i.width,i.height,i.depth,0,m,g,i.data);else if(s.isFramebufferTexture){if(E)if(T)n.texStorage2D(3553,A,x,i.width,i.height);else{let e=i.width,t=i.height;for(let i=0;i<A;i++)n.texImage2D(3553,i,x,e,t,0,m,g,null),e>>=1,t>>=1}}else if(v.length>0&&p){T&&E&&n.texStorage2D(3553,A,x,v[0].width,v[0].height);for(let e=0,t=v.length;e<t;e++)f=v[e],T?n.texSubImage2D(3553,e,0,0,m,g,f):n.texImage2D(3553,e,x,m,g,f);s.generateMipmaps=!1}else T?(E&&n.texStorage2D(3553,A,x,i.width,i.height),n.texSubImage2D(3553,0,0,0,m,g,i)):n.texImage2D(3553,0,x,m,g,i);b(s,p)&&M(l),d.__version=u.version,s.onUpdate&&s.onUpdate(s)}t.__version=s.version}function z(t,s,a,o,l){const c=r.convert(a.format,a.encoding),h=r.convert(a.type),u=w(a.internalFormat,c,h,a.encoding);i.get(s).__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,u,s.width,s.height,s.depth,0,c,h,null):n.texImage2D(l,0,u,s.width,s.height,0,c,h,null)),n.bindFramebuffer(36160,t),V(s)?d.framebufferTexture2DMultisampleEXT(36160,o,l,i.get(a).__webglTexture,0,B(s)):e.framebufferTexture2D(36160,o,l,i.get(a).__webglTexture,0),n.bindFramebuffer(36160,null)}function F(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let s=33189;if(i||V(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===We?s=36012:t.type===He&&(s=33190));const i=B(n);V(n)?d.renderbufferStorageMultisampleEXT(36161,i,s,n.width,n.height):e.renderbufferStorageMultisample(36161,i,s,n.width,n.height)}else e.renderbufferStorage(36161,s,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){const s=B(n);i&&!1===V(n)?e.renderbufferStorageMultisample(36161,s,35056,n.width,n.height):V(n)?d.renderbufferStorageMultisampleEXT(36161,s,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let s=0;s<t.length;s++){const a=t[s],o=r.convert(a.format,a.encoding),l=r.convert(a.type),c=w(a.internalFormat,o,l,a.encoding),h=B(n);i&&!1===V(n)?e.renderbufferStorageMultisample(36161,h,c,n.width,n.height):V(n)?d.renderbufferStorageMultisampleEXT(36161,h,c,n.width,n.height):e.renderbufferStorage(36161,c,n.width,n.height)}}e.bindRenderbuffer(36161,null)}function U(t){const s=i.get(t),r=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!s.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),L(s.depthTexture,0);const r=i.get(s.depthTexture).__webglTexture,a=B(s);if(s.depthTexture.format===et)V(s)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,r,0,a):e.framebufferTexture2D(36160,36096,3553,r,0);else{if(s.depthTexture.format!==tt)throw new Error("Unknown depthTexture format");V(s)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,r,0,a):e.framebufferTexture2D(36160,33306,3553,r,0)}}(s.__webglFramebuffer,t)}else if(r){s.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(36160,s.__webglFramebuffer[i]),s.__webglDepthbuffer[i]=e.createRenderbuffer(),F(s.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(36160,s.__webglFramebuffer),s.__webglDepthbuffer=e.createRenderbuffer(),F(s.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function B(e){return Math.min(u,e.samples)}function V(e){const n=i.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function k(e,n){const i=e.encoding,s=e.format,r=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===Ln||i!==qt&&(i===Yt?!1===o?!0===t.has("EXT_sRGB")&&s===Je?(e.format=Ln,e.minFilter=Ie,e.generateMipmaps=!1):n=hi.sRGBToLinear(n):s===Je&&r===Ue||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",i)),n}this.allocateTextureUnit=function(){const e=N;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),N+=1,e},this.resetTextureUnits=function(){N=0},this.setTexture2D=L,this.setTexture2DArray=function(e,t){const s=i.get(e);e.version>0&&s.__version!==e.version?O(s,e,t):n.bindTexture(35866,s.__webglTexture,33984+t)},this.setTexture3D=function(e,t){const s=i.get(e);e.version>0&&s.__version!==e.version?O(s,e,t):n.bindTexture(32879,s.__webglTexture,33984+t)},this.setTextureCube=function(t,s){const a=i.get(t);t.version>0&&a.__version!==t.version?function(t,s,a){if(6!==s.image.length)return;const l=D(t,s),h=s.source;n.bindTexture(34067,t.__webglTexture,33984+a);const u=i.get(h);if(h.version!==u.__version||!0===l){n.activeTexture(33984+a),e.pixelStorei(37440,s.flipY),e.pixelStorei(37441,s.premultiplyAlpha),e.pixelStorei(3317,s.unpackAlignment),e.pixelStorei(37443,0);const t=s.isCompressedTexture||s.image[0].isCompressedTexture,i=s.image[0]&&s.image[0].isDataTexture,d=[];for(let e=0;e<6;e++)d[e]=t||i?i?s.image[e].image:s.image[e]:y(s.image[e],!1,!0,c),d[e]=k(s,d[e]);const p=d[0],m=_(p)||o,f=r.convert(s.format,s.encoding),g=r.convert(s.type),x=w(s.internalFormat,f,g,s.encoding),v=o&&!0!==s.isVideoTexture,T=void 0===u.__version||!0===l;let E,A=S(s,p,m);if(I(34067,s,m),t){v&&T&&n.texStorage2D(34067,A,x,p.width,p.height);for(let e=0;e<6;e++){E=d[e].mipmaps;for(let t=0;t<E.length;t++){const i=E[t];s.format!==Je?null!==f?v?n.compressedTexSubImage2D(34069+e,t,0,0,i.width,i.height,f,i.data):n.compressedTexImage2D(34069+e,t,x,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v?n.texSubImage2D(34069+e,t,0,0,i.width,i.height,f,g,i.data):n.texImage2D(34069+e,t,x,i.width,i.height,0,f,g,i.data)}}}else{E=s.mipmaps,v&&T&&(E.length>0&&A++,n.texStorage2D(34067,A,x,d[0].width,d[0].height));for(let e=0;e<6;e++)if(i){v?n.texSubImage2D(34069+e,0,0,0,d[e].width,d[e].height,f,g,d[e].data):n.texImage2D(34069+e,0,x,d[e].width,d[e].height,0,f,g,d[e].data);for(let t=0;t<E.length;t++){const i=E[t].image[e].image;v?n.texSubImage2D(34069+e,t+1,0,0,i.width,i.height,f,g,i.data):n.texImage2D(34069+e,t+1,x,i.width,i.height,0,f,g,i.data)}}else{v?n.texSubImage2D(34069+e,0,0,0,f,g,d[e]):n.texImage2D(34069+e,0,x,f,g,d[e]);for(let t=0;t<E.length;t++){const i=E[t];v?n.texSubImage2D(34069+e,t+1,0,0,f,g,i.image[e]):n.texImage2D(34069+e,t+1,x,f,g,i.image[e])}}}b(s,m)&&M(34067),u.__version=h.version,s.onUpdate&&s.onUpdate(s)}t.__version=s.version}(a,t,s):n.bindTexture(34067,a.__webglTexture,33984+s)},this.rebindTextures=function(e,t,n){const s=i.get(e);void 0!==t&&z(s.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&U(e)},this.setupRenderTarget=function(t){const l=t.texture,c=i.get(t),h=i.get(l);t.addEventListener("dispose",A),!0!==t.isWebGLMultipleRenderTargets&&(void 0===h.__webglTexture&&(h.__webglTexture=e.createTexture()),h.__version=l.version,a.memory.textures++);const u=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=_(t)||o;if(u){c.__webglFramebuffer=[];for(let t=0;t<6;t++)c.__webglFramebuffer[t]=e.createFramebuffer()}else{if(c.__webglFramebuffer=e.createFramebuffer(),d)if(s.drawBuffers){const n=t.texture;for(let t=0,s=n.length;t<s;t++){const s=i.get(n[t]);void 0===s.__webglTexture&&(s.__webglTexture=e.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&t.samples>0&&!1===V(t)){const i=d?l:[l];c.__webglMultisampledFramebuffer=e.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,c.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const s=i[n];c.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(36161,c.__webglColorRenderbuffer[n]);const a=r.convert(s.format,s.encoding),o=r.convert(s.type),l=w(s.internalFormat,a,o,s.encoding,!0===t.isXRRenderTarget),h=B(t);e.renderbufferStorageMultisample(36161,h,l,t.width,t.height),e.framebufferRenderbuffer(36160,36064+n,36161,c.__webglColorRenderbuffer[n])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(c.__webglDepthRenderbuffer=e.createRenderbuffer(),F(c.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}}if(u){n.bindTexture(34067,h.__webglTexture),I(34067,l,p);for(let e=0;e<6;e++)z(c.__webglFramebuffer[e],t,l,36064,34069+e);b(l,p)&&M(34067),n.unbindTexture()}else if(d){const e=t.texture;for(let s=0,r=e.length;s<r;s++){const r=e[s],a=i.get(r);n.bindTexture(3553,a.__webglTexture),I(3553,r,p),z(c.__webglFramebuffer,t,r,36064+s,3553),b(r,p)&&M(3553)}n.unbindTexture()}else{let e=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?e=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(e,h.__webglTexture),I(e,l,p),z(c.__webglFramebuffer,t,l,36064,e),b(l,p)&&M(e),n.unbindTexture()}t.depthBuffer&&U(t)},this.updateRenderTargetMipmap=function(e){const t=_(e)||o,s=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let r=0,a=s.length;r<a;r++){const a=s[r];if(b(a,t)){const t=e.isWebGLCubeRenderTarget?34067:3553,s=i.get(a).__webglTexture;n.bindTexture(t,s),M(t),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===V(t)){const s=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],r=t.width,a=t.height;let o=16384;const l=[],c=t.stencilBuffer?33306:36096,h=i.get(t),u=!0===t.isWebGLMultipleRenderTargets;if(u)for(let t=0;t<s.length;t++)n.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+t,36161,null),n.bindFramebuffer(36160,h.__webglFramebuffer),e.framebufferTexture2D(36009,36064+t,3553,null,0);n.bindFramebuffer(36008,h.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,h.__webglFramebuffer);for(let n=0;n<s.length;n++){l.push(36064+n),t.depthBuffer&&l.push(c);const d=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;if(!1===d&&(t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024)),u&&e.framebufferRenderbuffer(36008,36064,36161,h.__webglColorRenderbuffer[n]),!0===d&&(e.invalidateFramebuffer(36008,[c]),e.invalidateFramebuffer(36009,[c])),u){const t=i.get(s[n]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,t,0)}e.blitFramebuffer(0,0,r,a,0,0,r,a,o,9728),p&&e.invalidateFramebuffer(36008,l)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),u)for(let t=0;t<s.length;t++){n.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+t,36161,h.__webglColorRenderbuffer[t]);const r=i.get(s[t]).__webglTexture;n.bindFramebuffer(36160,h.__webglFramebuffer),e.framebufferTexture2D(36009,36064+t,3553,r,0)}n.bindFramebuffer(36009,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=U,this.setupFrameBufferTexture=z,this.useMultisampledRTT=V}function ul(e,t,n){const i=n.isWebGL2;return{convert:function(n,s=null){let r;if(n===Ue)return 5121;if(n===Xe)return 32819;if(n===qe)return 32820;if(n===Be)return 5120;if(n===Ve)return 5122;if(n===ke)return 5123;if(n===Ge)return 5124;if(n===He)return 5125;if(n===We)return 5126;if(n===je)return i?5131:(r=t.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(n===Ze)return 6406;if(n===Je)return 6408;if(n===Ke)return 6409;if(n===Qe)return 6410;if(n===et)return 6402;if(n===tt)return 34041;if(n===nt)return 6403;if(n===$e)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===Ln)return r=t.get("EXT_sRGB"),null!==r?r.SRGB_ALPHA_EXT:null;if(n===it)return 36244;if(n===st)return 33319;if(n===rt)return 33320;if(n===at)return 36249;if(n===ot||n===lt||n===ct||n===ht)if(s===Yt){if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(n===ot)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===lt)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===ct)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ht)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=t.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(n===ot)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===lt)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===ct)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ht)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===ut||n===dt||n===pt||n===mt){if(r=t.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(n===ut)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===dt)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===pt)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===mt)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===ft)return r=t.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===gt||n===xt){if(r=t.get("WEBGL_compressed_texture_etc"),null===r)return null;if(n===gt)return s===Yt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===xt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(n===vt||n===yt||n===_t||n===bt||n===Mt||n===wt||n===St||n===Tt||n===Et||n===At||n===Ct||n===Nt||n===Lt||n===Rt){if(r=t.get("WEBGL_compressed_texture_astc"),null===r)return null;if(n===vt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===yt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===_t)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===bt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Mt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===wt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===St)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Tt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Et)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===At)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ct)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Nt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Lt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Rt)return s===Yt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Pt){if(r=t.get("EXT_texture_compression_bptc"),null===r)return null;if(n===Pt)return s===Yt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===Ye?i?34042:(r=t.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class dl extends Pr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class pl extends Ts{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ml={type:"move"};class fl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new pl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new pl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new wi,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new wi),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new pl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new wi,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new wi),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,r=null;const a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){r=!0;for(const i of e.hand.values()){const e=t.getJointPose(i,n);if(void 0===l.joints[i.jointName]){const e=new pl;e.matrixAutoUpdate=!1,e.visible=!1,l.joints[i.jointName]=e,l.add(e)}const s=l.joints[i.jointName];null!==e&&(s.matrix.fromArray(e.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.jointRadius=e.radius),s.visible=null!==e}const i=l.joints["index-finger-tip"],s=l.joints["thumb-tip"],a=i.position.distanceTo(s.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==s&&(i=s),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(ml)))}return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==s),null!==l&&(l.visible=null!==r),this}}class gl extends mi{constructor(e,t,n,i,s,r,a,o,l,c){if((c=void 0!==c?c:et)!==et&&c!==tt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===et&&(n=He),void 0===n&&c===tt&&(n=Ye),super(null,i,s,r,a,o,c,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==a?a:Ce,this.minFilter=void 0!==o?o:Ce,this.flipY=!1,this.generateMipmaps=!1}}class xl extends Rn{constructor(e,t){super();const n=this;let i=null,s=1,r=null,a="local-floor",o=null,l=null,c=null,h=null,u=null,d=null;const p=t.getContextAttributes();let m=null,f=null;const g=[],x=[],v=new Pr;v.layers.enable(1),v.viewport=new fi;const y=new Pr;y.layers.enable(2),y.viewport=new fi;const _=[v,y],b=new dl;b.layers.enable(1),b.layers.enable(2);let M=null,w=null;function S(e){const t=x.indexOf(e.inputSource);if(-1===t)return;const n=g[t];void 0!==n&&n.dispatchEvent({type:e.type,data:e.inputSource})}function T(){i.removeEventListener("select",S),i.removeEventListener("selectstart",S),i.removeEventListener("selectend",S),i.removeEventListener("squeeze",S),i.removeEventListener("squeezestart",S),i.removeEventListener("squeezeend",S),i.removeEventListener("end",T),i.removeEventListener("inputsourceschange",E);for(let e=0;e<g.length;e++){const t=x[e];null!==t&&(x[e]=null,g[e].disconnect(t))}M=null,w=null,e.setRenderTarget(m),u=null,h=null,c=null,i=null,f=null,R.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function E(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=x.indexOf(n);i>=0&&(x[i]=null,g[i].dispatchEvent({type:"disconnected",data:n}))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=x.indexOf(n);if(-1===i){for(let e=0;e<g.length;e++){if(e>=x.length){x.push(n),i=e;break}if(null===x[e]){x[e]=n,i=e;break}}if(-1===i)break}const s=g[i];s&&s.dispatchEvent({type:"connected",data:n})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new fl,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new fl,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new fl,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||r},this.setReferenceSpace=function(e){o=e},this.getBaseLayer=function(){return null!==h?h:u},this.getBinding=function(){return c},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(l){if(i=l,null!==i){if(m=e.getRenderTarget(),i.addEventListener("select",S),i.addEventListener("selectstart",S),i.addEventListener("selectend",S),i.addEventListener("squeeze",S),i.addEventListener("squeezestart",S),i.addEventListener("squeezeend",S),i.addEventListener("end",T),i.addEventListener("inputsourceschange",E),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==i.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};u=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:u}),f=new gi(u.framebufferWidth,u.framebufferHeight,{format:Je,type:Ue,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let n=null,r=null,a=null;p.depth&&(a=p.stencil?35056:33190,n=p.stencil?tt:et,r=p.stencil?Ye:He);const o={colorFormat:32856,depthFormat:a,scaleFactor:s};c=new XRWebGLBinding(i,t),h=c.createProjectionLayer(o),i.updateRenderState({layers:[h]}),f=new gi(h.textureWidth,h.textureHeight,{format:Je,type:Ue,depthTexture:new gl(h.textureWidth,h.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0}),e.properties.get(f).__ignoreDepthValues=h.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),o=null,r=await i.requestReferenceSpace(a),R.setContext(i),R.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const A=new wi,C=new wi;function N(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;b.near=y.near=v.near=e.near,b.far=y.far=v.far=e.far,M===b.near&&w===b.far||(i.updateRenderState({depthNear:b.near,depthFar:b.far}),M=b.near,w=b.far);const t=e.parent,n=b.cameras;N(b,t);for(let e=0;e<n.length;e++)N(n[e],t);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),e.matrix.copy(b.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const s=e.children;for(let e=0,t=s.length;e<t;e++)s[e].updateMatrixWorld(!0);2===n.length?function(e,t,n){A.setFromMatrixPosition(t.matrixWorld),C.setFromMatrixPosition(n.matrixWorld);const i=A.distanceTo(C),s=t.projectionMatrix.elements,r=n.projectionMatrix.elements,a=s[14]/(s[10]-1),o=s[14]/(s[10]+1),l=(s[9]+1)/s[5],c=(s[9]-1)/s[5],h=(s[8]-1)/s[0],u=(r[8]+1)/r[0],d=a*h,p=a*u,m=i/(-h+u),f=m*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=a+m,x=o+m,v=d-f,y=p+(i-f),_=l*o/x*g,b=c*o/x*g;e.projectionMatrix.makePerspective(v,y,_,b,g,x)}(b,v,y):b.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==u?u.fixedFoveation:void 0},this.setFoveation=function(e){null!==h&&(h.fixedFoveation=e),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=e)};let L=null;const R=new Wr;R.setAnimationLoop((function(t,n){if(l=n.getViewerPose(o||r),d=n,null!==l){const t=l.views;null!==u&&(e.setRenderTargetFramebuffer(f,u.framebuffer),e.setRenderTarget(f));let n=!1;t.length!==b.cameras.length&&(b.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const s=t[i];let r=null;if(null!==u)r=u.getViewport(s);else{const t=c.getViewSubImage(h,s);r=t.viewport,0===i&&(e.setRenderTargetTextures(f,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(f))}let a=_[i];void 0===a&&(a=new Pr,a.layers.enable(i),a.viewport=new fi,_[i]=a),a.matrix.fromArray(s.transform.matrix),a.projectionMatrix.fromArray(s.projectionMatrix),a.viewport.set(r.x,r.y,r.width,r.height),0===i&&b.matrix.copy(a.matrix),!0===n&&b.cameras.push(a)}}for(let e=0;e<g.length;e++){const t=x[e],i=g[e];null!==t&&void 0!==i&&i.update(t,n,o||r)}L&&L(t,n),d=null})),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}}function vl(e,t){function n(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map),i.alphaMap&&(n.alphaMap.value=i.alphaMap),i.bumpMap&&(n.bumpMap.value=i.bumpMap,n.bumpScale.value=i.bumpScale,i.side===P&&(n.bumpScale.value*=-1)),i.displacementMap&&(n.displacementMap.value=i.displacementMap,n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap),i.normalMap&&(n.normalMap.value=i.normalMap,n.normalScale.value.copy(i.normalScale),i.side===P&&n.normalScale.value.negate()),i.specularMap&&(n.specularMap.value=i.specularMap),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);const s=t.get(i).envMap;if(s&&(n.envMap.value=s,n.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap){n.lightMap.value=i.lightMap;const t=!0!==e.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*t}let r,a;i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity),i.map?r=i.map:i.specularMap?r=i.specularMap:i.displacementMap?r=i.displacementMap:i.normalMap?r=i.normalMap:i.bumpMap?r=i.bumpMap:i.roughnessMap?r=i.roughnessMap:i.metalnessMap?r=i.metalnessMap:i.alphaMap?r=i.alphaMap:i.emissiveMap?r=i.emissiveMap:i.clearcoatMap?r=i.clearcoatMap:i.clearcoatNormalMap?r=i.clearcoatNormalMap:i.clearcoatRoughnessMap?r=i.clearcoatRoughnessMap:i.iridescenceMap?r=i.iridescenceMap:i.iridescenceThicknessMap?r=i.iridescenceThicknessMap:i.specularIntensityMap?r=i.specularIntensityMap:i.specularColorMap?r=i.specularColorMap:i.transmissionMap?r=i.transmissionMap:i.thicknessMap?r=i.thicknessMap:i.sheenColorMap?r=i.sheenColorMap:i.sheenRoughnessMap&&(r=i.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),n.uvTransform.value.copy(r.matrix)),i.aoMap?a=i.aoMap:i.lightMap&&(a=i.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uv2Transform.value.copy(a.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,i,s,r,a){i.isMeshBasicMaterial||i.isMeshLambertMaterial?n(e,i):i.isMeshToonMaterial?(n(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,i)):i.isMeshPhongMaterial?(n(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,i)):i.isMeshStandardMaterial?(n(e,i),function(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}(e,i),i.isMeshPhysicalMaterial&&function(e,t,n){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap)),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===P&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap)),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,i,a)):i.isMeshMatcapMaterial?(n(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,i)):i.isMeshDepthMaterial?n(e,i):i.isMeshDistanceMaterial?(n(e,i),function(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,i)):i.isMeshNormalMaterial?n(e,i):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,n,i){let s;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?s=t.map:t.alphaMap&&(s=t.alphaMap),void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uvTransform.value.copy(s.matrix))}(e,i,s,r):i.isSpriteMaterial?function(e,t){let n;e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest),t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function yl(e,t,n,i){let s={},r={},a=[];const o=n.isWebGL2?e.getParameter(35375):0;function l(e,t,n){const i=e.value;if(void 0===n[t])return n[t]="number"==typeof i?i:i.clone(),!0;if("number"==typeof i){if(n[t]!==i)return n[t]=i,!0}else{const e=n[t];if(!1===e.equals(i))return e.copy(i),!0}return!1}function c(e){const t=e.value,n={boundary:0,storage:0};return"number"==typeof t?(n.boundary=4,n.storage=4):t.isVector2?(n.boundary=8,n.storage=8):t.isVector3||t.isColor?(n.boundary=16,n.storage=12):t.isVector4?(n.boundary=16,n.storage=16):t.isMatrix3?(n.boundary=48,n.storage=48):t.isMatrix4?(n.boundary=64,n.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),n}function h(t){const n=t.target;n.removeEventListener("dispose",h);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1),e.deleteBuffer(s[n.id]),delete s[n.id],delete r[n.id]}return{bind:function(e,t){const n=t.program;i.uniformBlockBinding(e,n)},update:function(n,u){let d=s[n.id];void 0===d&&(function(e){const t=e.uniforms;let n=0;let i=0;for(let e=0,s=t.length;e<s;e++){const s=t[e],r=c(s);if(s.__data=new Float32Array(r.storage/Float32Array.BYTES_PER_ELEMENT),s.__offset=n,e>0){i=n%16;const e=16-i;0!==i&&e-r.boundary<0&&(n+=16-i,s.__offset=n)}n+=r.storage}i=n%16,i>0&&(n+=16-i),e.__size=n,e.__cache={}}(n),d=function(t){const n=function(){for(let e=0;e<o;e++)if(-1===a.indexOf(e))return a.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const i=e.createBuffer(),s=t.__size,r=t.usage;return e.bindBuffer(35345,i),e.bufferData(35345,s,r),e.bindBuffer(35345,null),e.bindBufferBase(35345,n,i),i}(n),s[n.id]=d,n.addEventListener("dispose",h));const p=u.program;i.updateUBOMapping(n,p);const m=t.render.frame;r[n.id]!==m&&(function(t){const n=s[t.id],i=t.uniforms,r=t.__cache;e.bindBuffer(35345,n);for(let t=0,n=i.length;t<n;t++){const n=i[t];if(!0===l(n,t,r)){const t=n.value,i=n.__offset;"number"==typeof t?(n.__data[0]=t,e.bufferSubData(35345,i,n.__data)):(n.value.isMatrix3?(n.__data[0]=n.value.elements[0],n.__data[1]=n.value.elements[1],n.__data[2]=n.value.elements[2],n.__data[3]=n.value.elements[0],n.__data[4]=n.value.elements[3],n.__data[5]=n.value.elements[4],n.__data[6]=n.value.elements[5],n.__data[7]=n.value.elements[0],n.__data[8]=n.value.elements[6],n.__data[9]=n.value.elements[7],n.__data[10]=n.value.elements[8],n.__data[11]=n.value.elements[0]):t.toArray(n.__data),e.bufferSubData(35345,i,n.__data))}}e.bindBuffer(35345,null)}(n),r[n.id]=m)},dispose:function(){for(const t in s)e.deleteBuffer(s[t]);a=[],s={},r={}}}}function _l(e={}){this.isWebGLRenderer=!0;const t=void 0!==e.canvas?e.canvas:function(){const e=Jn("canvas");return e.style.display="block",e}(),n=void 0!==e.context?e.context:null,i=void 0===e.depth||e.depth,s=void 0===e.stencil||e.stencil,r=void 0!==e.antialias&&e.antialias,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,o=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let h;h=null!==n?n.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let u=null,d=null;const p=[],m=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=qt,this.physicallyCorrectLights=!1,this.toneMapping=pe,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const f=this;let g=!1,x=0,v=0,y=null,b=-1,M=null;const w=new fi,S=new fi;let T=null,E=t.width,A=t.height,C=1,N=null,L=null;const D=new fi(0,0,E,A),O=new fi(0,0,E,A);let z=!1;const F=new Hr;let U=!1,B=!1,V=null;const k=new es,G=new Xn,H=new wi,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function j(){return null===y?C:1}let X,q,Y,Z,$,J,K,Q,ee,te,ne,ie,se,re,ae,oe,le,ce,he,ue,de,me,fe,ge,xe=n;function ve(e,n){for(let i=0;i<e.length;i++){const s=e[i],r=t.getContext(s,n);if(null!==r)return r}return null}try{const e={alpha:!0,depth:i,stencil:s,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${_}`),t.addEventListener("webglcontextlost",be,!1),t.addEventListener("webglcontextrestored",Me,!1),t.addEventListener("webglcontextcreationerror",we,!1),null===xe){const t=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&t.shift(),xe=ve(t,e),null===xe)throw ve(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xe.getShaderPrecisionFormat&&(xe.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ye(){X=new ga(xe),q=new Qr(xe,X,e),X.init(q),me=new ul(xe,X,q),Y=new cl(xe,X,q),Z=new ya,$=new Zo,J=new hl(xe,X,Y,$,q,me,Z),K=new ta(f),Q=new fa(f),ee=new jr(xe,q),fe=new Jr(xe,X,ee,q),te=new xa(xe,ee,Z,fe),ne=new wa(xe,te,ee,Z),he=new Ma(xe,q,J),oe=new ea($),ie=new Yo(f,K,Q,X,q,fe,oe),se=new vl(f,$),re=new Qo,ae=new rl(X,q),ce=new $r(f,K,Y,ne,h,a),le=new ll(f,ne,q),ge=new yl(xe,Z,q,Y),ue=new Kr(xe,X,Z,q),de=new va(xe,X,Z,q),Z.programs=ie.programs,f.capabilities=q,f.extensions=X,f.properties=$,f.renderLists=re,f.shadowMap=le,f.state=Y,f.info=Z}ye();const _e=new xl(f,xe);function be(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Me(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const e=Z.autoReset,t=le.enabled,n=le.autoUpdate,i=le.needsUpdate,s=le.type;ye(),Z.autoReset=e,le.enabled=t,le.autoUpdate=n,le.needsUpdate=i,le.type=s}function we(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Se(e){const t=e.target;t.removeEventListener("dispose",Se),function(e){(function(e){const t=$.get(e).programs;void 0!==t&&(t.forEach((function(e){ie.releaseProgram(e)})),e.isShaderMaterial&&ie.releaseShaderCache(e))})(e),$.remove(e)}(t)}this.xr=_e,this.getContext=function(){return xe},this.getContextAttributes=function(){return xe.getContextAttributes()},this.forceContextLoss=function(){const e=X.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=X.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(e){void 0!==e&&(C=e,this.setSize(E,A,!1))},this.getSize=function(e){return e.set(E,A)},this.setSize=function(e,n,i){_e.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=e,A=n,t.width=Math.floor(e*C),t.height=Math.floor(n*C),!1!==i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(E*C,A*C).floor()},this.setDrawingBufferSize=function(e,n,i){E=e,A=n,C=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(w)},this.getViewport=function(e){return e.copy(D)},this.setViewport=function(e,t,n,i){e.isVector4?D.set(e.x,e.y,e.z,e.w):D.set(e,t,n,i),Y.viewport(w.copy(D).multiplyScalar(C).floor())},this.getScissor=function(e){return e.copy(O)},this.setScissor=function(e,t,n,i){e.isVector4?O.set(e.x,e.y,e.z,e.w):O.set(e,t,n,i),Y.scissor(S.copy(O).multiplyScalar(C).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(e){Y.setScissorTest(z=e)},this.setOpaqueSort=function(e){N=e},this.setTransparentSort=function(e){L=e},this.getClearColor=function(e){return e.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(e=!0,t=!0,n=!0){let i=0;e&&(i|=16384),t&&(i|=256),n&&(i|=1024),xe.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",be,!1),t.removeEventListener("webglcontextrestored",Me,!1),t.removeEventListener("webglcontextcreationerror",we,!1),re.dispose(),ae.dispose(),$.dispose(),K.dispose(),Q.dispose(),ne.dispose(),fe.dispose(),ge.dispose(),ie.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",Ee),_e.removeEventListener("sessionend",Ae),V&&(V.dispose(),V=null),Ce.stop()},this.renderBufferDirect=function(e,t,n,i,s,r){null===t&&(t=W);const a=s.isMesh&&s.matrixWorld.determinant()<0,o=function(e,t,n,i,s){!0!==t.isScene&&(t=W),J.resetTextureUnits();const r=t.fog,a=i.isMeshStandardMaterial?t.environment:null,o=null===y?f.outputEncoding:!0===y.isXRRenderTarget?y.texture.encoding:qt,l=(i.isMeshStandardMaterial?Q:K).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!i.normalMap&&!!n.attributes.tangent,u=!!n.morphAttributes.position,p=!!n.morphAttributes.normal,m=!!n.morphAttributes.color,g=i.toneMapped?f.toneMapping:pe,x=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,v=void 0!==x?x.length:0,_=$.get(i),w=d.state.lights;if(!0===U&&(!0===B||e!==M)){const t=e===M&&i.id===b;oe.setState(i,e,t)}let S=!1;i.version===_.__version?_.needsLights&&_.lightsStateVersion!==w.state.version||_.outputEncoding!==o||s.isInstancedMesh&&!1===_.instancing?S=!0:s.isInstancedMesh||!0!==_.instancing?s.isSkinnedMesh&&!1===_.skinning?S=!0:s.isSkinnedMesh||!0!==_.skinning?_.envMap!==l||!0===i.fog&&_.fog!==r?S=!0:void 0===_.numClippingPlanes||_.numClippingPlanes===oe.numPlanes&&_.numIntersection===oe.numIntersection?(_.vertexAlphas!==c||_.vertexTangents!==h||_.morphTargets!==u||_.morphNormals!==p||_.morphColors!==m||_.toneMapping!==g||!0===q.isWebGL2&&_.morphTargetsCount!==v)&&(S=!0):S=!0:S=!0:S=!0:(S=!0,_.__version=i.version);let T=_.currentProgram;!0===S&&(T=Ie(i,t,s));let E=!1,N=!1,L=!1;const R=T.getUniforms(),P=_.uniforms;if(Y.useProgram(T.program)&&(E=!0,N=!0,L=!0),i.id!==b&&(b=i.id,N=!0),E||M!==e){if(R.setValue(xe,"projectionMatrix",e.projectionMatrix),q.logarithmicDepthBuffer&&R.setValue(xe,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),M!==e&&(M=e,N=!0,L=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=R.map.cameraPosition;void 0!==t&&t.setValue(xe,H.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(xe,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||s.isSkinnedMesh)&&R.setValue(xe,"viewMatrix",e.matrixWorldInverse)}if(s.isSkinnedMesh){R.setOptional(xe,s,"bindMatrix"),R.setOptional(xe,s,"bindMatrixInverse");const e=s.skeleton;e&&(q.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),R.setValue(xe,"boneTexture",e.boneTexture,J),R.setValue(xe,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const I=n.morphAttributes;var D,O;if((void 0!==I.position||void 0!==I.normal||void 0!==I.color&&!0===q.isWebGL2)&&he.update(s,n,i,T),(N||_.receiveShadow!==s.receiveShadow)&&(_.receiveShadow=s.receiveShadow,R.setValue(xe,"receiveShadow",s.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),N&&(R.setValue(xe,"toneMappingExposure",f.toneMappingExposure),_.needsLights&&(O=L,(D=P).ambientLightColor.needsUpdate=O,D.lightProbe.needsUpdate=O,D.directionalLights.needsUpdate=O,D.directionalLightShadows.needsUpdate=O,D.pointLights.needsUpdate=O,D.pointLightShadows.needsUpdate=O,D.spotLights.needsUpdate=O,D.spotLightShadows.needsUpdate=O,D.rectAreaLights.needsUpdate=O,D.hemisphereLights.needsUpdate=O),r&&!0===i.fog&&se.refreshFogUniforms(P,r),se.refreshMaterialUniforms(P,i,C,A,V),Co.upload(xe,_.uniformsList,P,J)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Co.upload(xe,_.uniformsList,P,J),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&R.setValue(xe,"center",s.center),R.setValue(xe,"modelViewMatrix",s.modelViewMatrix),R.setValue(xe,"normalMatrix",s.normalMatrix),R.setValue(xe,"modelMatrix",s.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(q.isWebGL2){const n=e[t];ge.update(n,T),ge.bind(n,T)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return T}(e,t,n,i,s);Y.setMaterial(i,a);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===i.wireframe&&(l=te.getWireframeAttribute(n),u=2),fe.setup(s,i,o,n,l);let p=ue;null!==l&&(h=ee.get(l),p=de,p.setIndex(h));const m=null!==l?l.count:c.count,g=n.drawRange.start*u,x=n.drawRange.count*u,v=null!==r?r.start*u:0,_=null!==r?r.count*u:1/0,w=Math.max(g,v),S=Math.min(m,g+x,v+_)-1,T=Math.max(0,S-w+1);if(0!==T){if(s.isMesh)!0===i.wireframe?(Y.setLineWidth(i.wireframeLinewidth*j()),p.setMode(1)):p.setMode(4);else if(s.isLine){let e=i.linewidth;void 0===e&&(e=1),Y.setLineWidth(e*j()),s.isLineSegments?p.setMode(1):s.isLineLoop?p.setMode(2):p.setMode(3)}else s.isPoints?p.setMode(0):s.isSprite&&p.setMode(4);if(s.isInstancedMesh)p.renderInstances(w,T,s.count);else if(n.isInstancedBufferGeometry){const e=Math.min(n.instanceCount,n._maxInstanceCount);p.renderInstances(w,T,e)}else p.render(w,T)}},this.compile=function(e,t){function n(e,t,n){!0===e.transparent&&e.side===I?(e.side=P,e.needsUpdate=!0,Ie(e,t,n),e.side=R,e.needsUpdate=!0,Ie(e,t,n),e.side=I):Ie(e,t,n)}d=ae.get(e),d.init(),m.push(d),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(f.physicallyCorrectLights),e.traverse((function(t){const i=t.material;if(i)if(Array.isArray(i))for(let s=0;s<i.length;s++)n(i[s],e,t);else n(i,e,t)})),m.pop(),d=null};let Te=null;function Ee(){Ce.stop()}function Ae(){Ce.start()}const Ce=new Wr;function Ne(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||F.intersectsSprite(e)){i&&H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k);const t=ne.update(e),s=e.material;s.visible&&u.push(e,t,s,n,H.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Z.render.frame&&(e.skeleton.update(),e.skeleton.frame=Z.render.frame),!e.frustumCulled||F.intersectsObject(e))){i&&H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k);const t=ne.update(e),s=e.material;if(Array.isArray(s)){const i=t.groups;for(let r=0,a=i.length;r<a;r++){const a=i[r],o=s[a.materialIndex];o&&o.visible&&u.push(e,t,o,n,H.z,a)}}else s.visible&&u.push(e,t,s,n,H.z,null)}const s=e.children;for(let e=0,r=s.length;e<r;e++)Ne(s[e],t,n,i)}function Le(e,t,n,i){const s=e.opaque,a=e.transmissive,o=e.transparent;d.setupLightsView(n),a.length>0&&function(e,t,n){const i=q.isWebGL2;null===V&&(V=new gi(1,1,{generateMipmaps:!0,type:X.has("EXT_color_buffer_half_float")?je:Ue,minFilter:ze,samples:i&&!0===r?4:0})),f.getDrawingBufferSize(G),i?V.setSize(G.x,G.y):V.setSize(Gn(G.x),Gn(G.y));const s=f.getRenderTarget();f.setRenderTarget(V),f.clear();const a=f.toneMapping;f.toneMapping=pe,Re(e,t,n),f.toneMapping=a,J.updateMultisampleRenderTarget(V),J.updateRenderTargetMipmap(V),f.setRenderTarget(s)}(s,t,n),i&&Y.viewport(w.copy(i)),s.length>0&&Re(s,t,n),a.length>0&&Re(a,t,n),o.length>0&&Re(o,t,n),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function Re(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let s=0,r=e.length;s<r;s++){const r=e[s],a=r.object,o=r.geometry,l=null===i?r.material:i,c=r.group;a.layers.test(n.layers)&&Pe(a,t,n,o,l,c)}}function Pe(e,t,n,i,s,r){e.onBeforeRender(f,t,n,i,s,r),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),s.onBeforeRender(f,t,n,i,e,r),!0===s.transparent&&s.side===I?(s.side=P,s.needsUpdate=!0,f.renderBufferDirect(n,t,i,s,e,r),s.side=R,s.needsUpdate=!0,f.renderBufferDirect(n,t,i,s,e,r),s.side=I):f.renderBufferDirect(n,t,i,s,e,r),e.onAfterRender(f,t,n,i,s,r)}function Ie(e,t,n){!0!==t.isScene&&(t=W);const i=$.get(e),s=d.state.lights,r=d.state.shadowsArray,a=s.state.version,o=ie.getParameters(e,s.state,r,t,n),l=ie.getProgramCacheKey(o);let c=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?Q:K).get(e.envMap||i.environment),void 0===c&&(e.addEventListener("dispose",Se),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===a)return De(e,o),h}else o.uniforms=ie.getUniforms(e),e.onBuild(n,o,f),e.onBeforeCompile(o,f),h=ie.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=oe.uniform),De(e,o),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=a,i.needsLights&&(u.ambientLightColor.value=s.state.ambient,u.lightProbe.value=s.state.probe,u.directionalLights.value=s.state.directional,u.directionalLightShadows.value=s.state.directionalShadow,u.spotLights.value=s.state.spot,u.spotLightShadows.value=s.state.spotShadow,u.rectAreaLights.value=s.state.rectArea,u.ltc_1.value=s.state.rectAreaLTC1,u.ltc_2.value=s.state.rectAreaLTC2,u.pointLights.value=s.state.point,u.pointLightShadows.value=s.state.pointShadow,u.hemisphereLights.value=s.state.hemi,u.directionalShadowMap.value=s.state.directionalShadowMap,u.directionalShadowMatrix.value=s.state.directionalShadowMatrix,u.spotShadowMap.value=s.state.spotShadowMap,u.spotLightMatrix.value=s.state.spotLightMatrix,u.spotLightMap.value=s.state.spotLightMap,u.pointShadowMap.value=s.state.pointShadowMap,u.pointShadowMatrix.value=s.state.pointShadowMatrix);const p=h.getUniforms(),m=Co.seqWithValue(p.seq,u);return i.currentProgram=h,i.uniformsList=m,h}function De(e,t){const n=$.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Ce.setAnimationLoop((function(e){Te&&Te(e)})),"undefined"!=typeof self&&Ce.setContext(self),this.setAnimationLoop=function(e){Te=e,_e.setAnimationLoop(e),null===e?Ce.stop():Ce.start()},_e.addEventListener("sessionstart",Ee),_e.addEventListener("sessionend",Ae),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===_e.enabled&&!0===_e.isPresenting&&(!0===_e.cameraAutoUpdate&&_e.updateCamera(t),t=_e.getCamera()),!0===e.isScene&&e.onBeforeRender(f,e,t,y),d=ae.get(e,m.length),d.init(),m.push(d),k.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),F.setFromProjectionMatrix(k),B=this.localClippingEnabled,U=oe.init(this.clippingPlanes,B,t),u=re.get(e,p.length),u.init(),p.push(u),Ne(e,t,0,f.sortObjects),u.finish(),!0===f.sortObjects&&u.sort(N,L),!0===U&&oe.beginShadows();const n=d.state.shadowsArray;if(le.render(n,e,t),!0===U&&oe.endShadows(),!0===this.info.autoReset&&this.info.reset(),ce.render(u,e),d.setupLights(f.physicallyCorrectLights),t.isArrayCamera){const n=t.cameras;for(let t=0,i=n.length;t<i;t++){const i=n[t];Le(u,e,i,i.viewport)}}else Le(u,e,t);null!==y&&(J.updateMultisampleRenderTarget(y),J.updateRenderTargetMipmap(y)),!0===e.isScene&&e.onAfterRender(f,e,t),fe.resetDefaultState(),b=-1,M=null,m.pop(),d=m.length>0?m[m.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(e,t,n){$.get(e.texture).__webglTexture=t,$.get(e.depthTexture).__webglTexture=n;const i=$.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===X.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=$.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){y=e,x=t,v=n;let i=!0;if(e){const t=$.get(e);void 0!==t.__useDefaultFramebuffer?(Y.bindFramebuffer(36160,null),i=!1):void 0===t.__webglFramebuffer?J.setupRenderTarget(e):t.__hasExternalTextures&&J.rebindTextures(e,$.get(e.texture).__webglTexture,$.get(e.depthTexture).__webglTexture)}let s=null,r=!1,a=!1;if(e){const n=e.texture;(n.isData3DTexture||n.isDataArrayTexture)&&(a=!0);const i=$.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(s=i[t],r=!0):s=q.isWebGL2&&e.samples>0&&!1===J.useMultisampledRTT(e)?$.get(e).__webglMultisampledFramebuffer:i,w.copy(e.viewport),S.copy(e.scissor),T=e.scissorTest}else w.copy(D).multiplyScalar(C).floor(),S.copy(O).multiplyScalar(C).floor(),T=z;if(Y.bindFramebuffer(36160,s)&&q.drawBuffers&&i&&Y.drawBuffers(e,s),Y.viewport(w),Y.scissor(S),Y.setScissorTest(T),r){const i=$.get(e.texture);xe.framebufferTexture2D(36160,36064,34069+t,i.__webglTexture,n)}else if(a){const i=$.get(e.texture),s=t||0;xe.framebufferTextureLayer(36160,36064,i.__webglTexture,n||0,s)}b=-1},this.readRenderTargetPixels=function(e,t,n,i,s,r,a){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=$.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Y.bindFramebuffer(36160,o);try{const a=e.texture,o=a.format,l=a.type;if(o!==Je&&me.convert(o)!==xe.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===je&&(X.has("EXT_color_buffer_half_float")||q.isWebGL2&&X.has("EXT_color_buffer_float"));if(!(l===Ue||me.convert(l)===xe.getParameter(35738)||l===We&&(q.isWebGL2||X.has("OES_texture_float")||X.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-s&&xe.readPixels(t,n,i,s,me.convert(o),me.convert(l),r)}finally{const e=null!==y?$.get(y).__webglFramebuffer:null;Y.bindFramebuffer(36160,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n),s=Math.floor(t.image.width*i),r=Math.floor(t.image.height*i);J.setTexture2D(t,0),xe.copyTexSubImage2D(3553,n,0,0,e.x,e.y,s,r),Y.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){const s=t.image.width,r=t.image.height,a=me.convert(n.format),o=me.convert(n.type);J.setTexture2D(n,0),xe.pixelStorei(37440,n.flipY),xe.pixelStorei(37441,n.premultiplyAlpha),xe.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?xe.texSubImage2D(3553,i,e.x,e.y,s,r,a,o,t.image.data):t.isCompressedTexture?xe.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):xe.texSubImage2D(3553,i,e.x,e.y,a,o,t.image),0===i&&n.generateMipmaps&&xe.generateMipmap(3553),Y.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i,s=0){if(f.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const r=e.max.x-e.min.x+1,a=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=me.convert(i.format),c=me.convert(i.type);let h;if(i.isData3DTexture)J.setTexture3D(i,0),h=32879;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(i,0),h=35866}xe.pixelStorei(37440,i.flipY),xe.pixelStorei(37441,i.premultiplyAlpha),xe.pixelStorei(3317,i.unpackAlignment);const u=xe.getParameter(3314),d=xe.getParameter(32878),p=xe.getParameter(3316),m=xe.getParameter(3315),g=xe.getParameter(32877),x=n.isCompressedTexture?n.mipmaps[0]:n.image;xe.pixelStorei(3314,x.width),xe.pixelStorei(32878,x.height),xe.pixelStorei(3316,e.min.x),xe.pixelStorei(3315,e.min.y),xe.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?xe.texSubImage3D(h,s,t.x,t.y,t.z,r,a,o,l,c,x.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xe.compressedTexSubImage3D(h,s,t.x,t.y,t.z,r,a,o,l,x.data)):xe.texSubImage3D(h,s,t.x,t.y,t.z,r,a,o,l,c,x),xe.pixelStorei(3314,u),xe.pixelStorei(32878,d),xe.pixelStorei(3316,p),xe.pixelStorei(3315,m),xe.pixelStorei(32877,g),0===s&&i.generateMipmaps&&xe.generateMipmap(h),Y.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?J.setTextureCube(e,0):e.isData3DTexture?J.setTexture3D(e,0):e.isDataArrayTexture?J.setTexture2DArray(e,0):J.setTexture2D(e,0),Y.unbindTexture()},this.resetState=function(){x=0,v=0,y=null,Y.reset(),fe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class bl extends _l{}bl.prototype.isWebGL1Renderer=!0;class Ml{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new li(e),this.density=t}clone(){return new Ml(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class wl{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new li(e),this.near=t,this.far=n}clone(){return new wl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Sl extends Ts{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Tl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=yn,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=zn()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=zn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=zn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const El=new wi;class Al{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)El.fromBufferAttribute(this,t),El.applyMatrix4(e),this.setXYZ(t,El.x,El.y,El.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)El.fromBufferAttribute(this,t),El.applyNormalMatrix(e),this.setXYZ(t,El.x,El.y,El.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)El.fromBufferAttribute(this,t),El.transformDirection(e),this.setXYZ(t,El.x,El.y,El.z);return this}setX(e,t){return this.normalized&&(t=Wn(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Wn(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Wn(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Wn(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Hn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Hn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Hn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Hn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Wn(t,this.array),n=Wn(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Wn(t,this.array),n=Wn(n,this.array),i=Wn(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Wn(t,this.array),n=Wn(n,this.array),i=Wn(i,this.array),s=Wn(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new Gs(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Al(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Cl extends Us{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new li(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Nl;const Ll=new wi,Rl=new wi,Pl=new wi,Il=new Xn,Dl=new Xn,Ol=new es,zl=new wi,Fl=new wi,Ul=new wi,Bl=new Xn,Vl=new Xn,kl=new Xn;class Gl extends Ts{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",void 0===Nl){Nl=new ar;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Tl(e,5);Nl.setIndex([0,1,2,0,2,3]),Nl.setAttribute("position",new Al(t,3,0,!1)),Nl.setAttribute("uv",new Al(t,2,3,!1))}this.geometry=Nl,this.material=void 0!==e?e:new Cl,this.center=new Xn(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Rl.setFromMatrixScale(this.matrixWorld),Ol.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Pl.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Rl.multiplyScalar(-Pl.z);const n=this.material.rotation;let i,s;0!==n&&(s=Math.cos(n),i=Math.sin(n));const r=this.center;Hl(zl.set(-.5,-.5,0),Pl,r,Rl,i,s),Hl(Fl.set(.5,-.5,0),Pl,r,Rl,i,s),Hl(Ul.set(.5,.5,0),Pl,r,Rl,i,s),Bl.set(0,0),Vl.set(1,0),kl.set(1,1);let a=e.ray.intersectTriangle(zl,Fl,Ul,!1,Ll);if(null===a&&(Hl(Fl.set(-.5,.5,0),Pl,r,Rl,i,s),Vl.set(0,1),a=e.ray.intersectTriangle(zl,Ul,Fl,!1,Ll),null===a))return;const o=e.ray.origin.distanceTo(Ll);o<e.near||o>e.far||t.push({distance:o,point:Ll.clone(),uv:zs.getUV(Ll,zl,Fl,Ul,Bl,Vl,kl,new Xn),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function Hl(e,t,n,i,s,r){Il.subVectors(e,n).addScalar(.5).multiply(i),void 0!==s?(Dl.x=r*Il.x-s*Il.y,Dl.y=s*Il.x+r*Il.y):Dl.copy(Il),e.copy(t),e.x+=Dl.x,e.y+=Dl.y,e.applyMatrix4(Ol)}const Wl=new wi,jl=new wi;class Xl extends Ts{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let e=0,n=t.length;e<n;e++){const n=t[e];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Wl.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Wl);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Wl.setFromMatrixPosition(e.matrixWorld),jl.setFromMatrixPosition(this.matrixWorld);const n=Wl.distanceTo(jl)/e.zoom;let i,s;for(t[0].object.visible=!0,i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let e=0,i=n.length;e<i;e++){const i=n[e];t.object.levels.push({object:i.object.uuid,distance:i.distance})}return t}}const ql=new wi,Yl=new fi,Zl=new fi,$l=new wi,Jl=new es;class Kl extends Sr{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new es,this.bindMatrixInverse=new es}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new fi,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Yl.fromBufferAttribute(i.attributes.skinIndex,e),Zl.fromBufferAttribute(i.attributes.skinWeight,e),ql.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){const i=Zl.getComponent(e);if(0!==i){const s=Yl.getComponent(e);Jl.multiplyMatrices(n.bones[s].matrixWorld,n.boneInverses[s]),t.addScaledVector($l.copy(ql).applyMatrix4(Jl),i)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Ql extends Ts{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ec extends mi{constructor(e=null,t=1,n=1,i,s,r,a,o,l=Ce,c=Ce,h,u){super(null,r,a,o,l,c,i,s,h,u),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const tc=new es,nc=new es;class ic{constructor(e=[],t=[]){this.uuid=zn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new es)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new es;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,s=e.length;i<s;i++){const s=e[i]?e[i].matrixWorld:nc;tc.multiplyMatrices(s,t[i]),tc.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new ic(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=kn(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ec(t,e,e,Je,We);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const i=e.bones[n];let s=t[i];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),s=new Ql),this.bones.push(s),this.boneInverses.push((new es).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const s=t[i];e.bones.push(s.uuid);const r=n[i];e.boneInverses.push(r.toArray())}return e}}class sc extends Gs{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const rc=new es,ac=new es,oc=[],lc=new Sr;class cc extends Sr{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new sc(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(lc.geometry=this.geometry,lc.material=this.material,void 0!==lc.material)for(let s=0;s<i;s++){this.getMatrixAt(s,rc),ac.multiplyMatrices(n,rc),lc.matrixWorld=ac,lc.raycast(e,oc);for(let e=0,n=oc.length;e<n;e++){const n=oc[e];n.instanceId=s,n.object=this,t.push(n)}oc.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new sc(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class hc extends Us{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new li(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const uc=new wi,dc=new wi,pc=new es,mc=new Qi,fc=new ji;class gc extends Ts{constructor(e=new ar,t=new hc){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)uc.fromBufferAttribute(t,e-1),dc.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=uc.distanceTo(dc);e.setAttribute("lineDistance",new Js(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),fc.copy(n.boundingSphere),fc.applyMatrix4(i),fc.radius+=s,!1===e.ray.intersectsSphere(fc))return;pc.copy(i).invert(),mc.copy(e.ray).applyMatrix4(pc);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new wi,c=new wi,h=new wi,u=new wi,d=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(null!==p)for(let n=Math.max(0,r.start),i=Math.min(p.count,r.start+r.count)-1;n<i;n+=d){const i=p.getX(n),s=p.getX(n+1);if(l.fromBufferAttribute(m,i),c.fromBufferAttribute(m,s),mc.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(u);r<e.near||r>e.far||t.push({distance:r,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,r.start),i=Math.min(m.count,r.start+r.count)-1;n<i;n+=d){if(l.fromBufferAttribute(m,n),c.fromBufferAttribute(m,n+1),mc.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(u);i<e.near||i>e.far||t.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}const xc=new wi,vc=new wi;class yc extends gc{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)xc.fromBufferAttribute(t,e),vc.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+xc.distanceTo(vc);e.setAttribute("lineDistance",new Js(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class _c extends gc{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class bc extends Us{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new li(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Mc=new es,wc=new Qi,Sc=new ji,Tc=new wi;class Ec extends Ts{constructor(e=new ar,t=new bc){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Sc.copy(n.boundingSphere),Sc.applyMatrix4(i),Sc.radius+=s,!1===e.ray.intersectsSphere(Sc))return;Mc.copy(i).invert(),wc.copy(e.ray).applyMatrix4(Mc);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,c=n.attributes.position;if(null!==l)for(let n=Math.max(0,r.start),s=Math.min(l.count,r.start+r.count);n<s;n++){const s=l.getX(n);Tc.fromBufferAttribute(c,s),Ac(Tc,s,o,i,e,t,this)}else for(let n=Math.max(0,r.start),s=Math.min(c.count,r.start+r.count);n<s;n++)Tc.fromBufferAttribute(c,n),Ac(Tc,n,o,i,e,t,this)}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function Ac(e,t,n,i,s,r,a){const o=wc.distanceSqToPoint(e);if(o<n){const n=new wi;wc.closestPointToPoint(e,n),n.applyMatrix4(i);const l=s.ray.origin.distanceTo(n);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:a})}}class Cc extends mi{constructor(e,t,n,i,s,r,a,o,l){super(e,t,n,i,s,r,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==r?r:Ie,this.magFilter=void 0!==s?s:Ie,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){c.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Nc extends mi{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=Ce,this.minFilter=Ce,this.generateMipmaps=!1,this.needsUpdate=!0}}class Lc extends mi{constructor(e,t,n,i,s,r,a,o,l,c,h,u){super(null,r,a,o,l,c,i,s,h,u),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Rc extends mi{constructor(e,t,n,i,s,r,a,o,l){super(e,t,n,i,s,r,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Pc{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let r=1;r<=e;r++)n=this.getPoint(r/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let r;r=t||e*n[s-1];let a,o=0,l=s-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-r,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===r)return i/(s-1);const c=n[i];return(i+(r-c)/(n[i+1]-c))/(s-1)}getTangent(e,t){const n=1e-4;let i=e-n,s=e+n;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),a=this.getPoint(s),o=t||(r.isVector2?new Xn:new wi);return o.copy(a).sub(r).normalize(),o}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new wi,i=[],s=[],r=[],a=new wi,o=new es;for(let t=0;t<=e;t++){const n=t/e;i[t]=this.getTangentAt(n,new wi)}s[0]=new wi,r[0]=new wi;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),u<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),r[0].crossVectors(i[0],s[0]);for(let t=1;t<=e;t++){if(s[t]=s[t-1].clone(),r[t]=r[t-1].clone(),a.crossVectors(i[t-1],i[t]),a.length()>Number.EPSILON){a.normalize();const e=Math.acos(Fn(i[t-1].dot(i[t]),-1,1));s[t].applyMatrix4(o.makeRotationAxis(a,e))}r[t].crossVectors(i[t],s[t])}if(!0===t){let t=Math.acos(Fn(s[0].dot(s[e]),-1,1));t/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(t=-t);for(let n=1;n<=e;n++)s[n].applyMatrix4(o.makeRotationAxis(i[n],t*n)),r[n].crossVectors(i[n],s[n])}return{tangents:i,normals:s,binormals:r}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ic extends Pc{constructor(e=0,t=0,n=1,i=1,s=0,r=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=o}getPoint(e,t){const n=t||new Xn,i=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(s=r?0:i),!0!==this.aClockwise||r||(s===i?s=-i:s-=i);const a=this.aStartAngle+e*s;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*e-i*t+this.aX,l=n*t+i*e+this.aY}return n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Dc extends Ic{constructor(e,t,n,i,s,r){super(e,t,n,n,i,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Oc(){let e=0,t=0,n=0,i=0;function s(s,r,a,o){e=s,t=a,n=-3*s+3*r-2*a-o,i=2*s-2*r+a+o}return{initCatmullRom:function(e,t,n,i,r){s(t,n,r*(n-e),r*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,r,a,o){let l=(t-e)/r-(n-e)/(r+a)+(n-t)/a,c=(n-t)/a-(i-t)/(a+o)+(i-n)/o;l*=a,c*=a,s(t,n,l,c)},calc:function(s){const r=s*s;return e+t*s+n*r+i*(r*s)}}}const zc=new wi,Fc=new Oc,Uc=new Oc,Bc=new Oc;class Vc extends Pc{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new wi){const n=t,i=this.points,s=i.length,r=(s-(this.closed?0:1))*e;let a,o,l=Math.floor(r),c=r-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s)+1)*s:0===c&&l===s-1&&(l=s-2,c=1),this.closed||l>0?a=i[(l-1)%s]:(zc.subVectors(i[0],i[1]).add(i[0]),a=zc);const h=i[l%s],u=i[(l+1)%s];if(this.closed||l+2<s?o=i[(l+2)%s]:(zc.subVectors(i[s-1],i[s-2]).add(i[s-1]),o=zc),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(h),e),n=Math.pow(h.distanceToSquared(u),e),i=Math.pow(u.distanceToSquared(o),e);n<1e-4&&(n=1),t<1e-4&&(t=n),i<1e-4&&(i=n),Fc.initNonuniformCatmullRom(a.x,h.x,u.x,o.x,t,n,i),Uc.initNonuniformCatmullRom(a.y,h.y,u.y,o.y,t,n,i),Bc.initNonuniformCatmullRom(a.z,h.z,u.z,o.z,t,n,i)}else"catmullrom"===this.curveType&&(Fc.initCatmullRom(a.x,h.x,u.x,o.x,this.tension),Uc.initCatmullRom(a.y,h.y,u.y,o.y,this.tension),Bc.initCatmullRom(a.z,h.z,u.z,o.z,this.tension));return n.set(Fc.calc(c),Uc.calc(c),Bc.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new wi).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function kc(e,t,n,i,s){const r=.5*(i-t),a=.5*(s-n),o=e*e;return(2*n-2*i+r+a)*(e*o)+(-3*n+3*i-2*r-a)*o+r*e+n}function Gc(e,t,n,i){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,i)}function Hc(e,t,n,i,s){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,i)+function(e,t){return e*e*e*t}(e,s)}class Wc extends Pc{constructor(e=new Xn,t=new Xn,n=new Xn,i=new Xn){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new Xn){const n=t,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(Hc(e,i.x,s.x,r.x,a.x),Hc(e,i.y,s.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class jc extends Pc{constructor(e=new wi,t=new wi,n=new wi,i=new wi){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new wi){const n=t,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(Hc(e,i.x,s.x,r.x,a.x),Hc(e,i.y,s.y,r.y,a.y),Hc(e,i.z,s.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Xc extends Pc{constructor(e=new Xn,t=new Xn){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Xn){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Xn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qc extends Pc{constructor(e=new wi,t=new wi){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new wi){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yc extends Pc{constructor(e=new Xn,t=new Xn,n=new Xn){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Xn){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(Gc(e,i.x,s.x,r.x),Gc(e,i.y,s.y,r.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zc extends Pc{constructor(e=new wi,t=new wi,n=new wi){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new wi){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(Gc(e,i.x,s.x,r.x),Gc(e,i.y,s.y,r.y),Gc(e,i.z,s.z,r.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $c extends Pc{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Xn){const n=t,i=this.points,s=(i.length-1)*e,r=Math.floor(s),a=s-r,o=i[0===r?r:r-1],l=i[r],c=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return n.set(kc(a,o.x,l.x,c.x,h.x),kc(a,o.y,l.y,c.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Xn).fromArray(n))}return this}}var Jc=Object.freeze({__proto__:null,ArcCurve:Dc,CatmullRomCurve3:Vc,CubicBezierCurve:Wc,CubicBezierCurve3:jc,EllipseCurve:Ic,LineCurve:Xc,LineCurve3:qc,QuadraticBezierCurve:Yc,QuadraticBezierCurve3:Zc,SplineCurve:$c});class Kc extends Pc{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Xc(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const e=i[s]-n,r=this.curves[s],a=r.getLength(),o=0===a?0:1-e/a;return r.getPointAt(o,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],a=r.isEllipseCurve?2*e:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,o=r.getPoints(a);for(let e=0;e<o.length;e++){const i=o[e];n&&n.equals(i)||(t.push(i),n=i)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new Jc[n.type]).fromJSON(n))}return this}}class Qc extends Kc{constructor(e){super(),this.type="Path",this.currentPoint=new Xn,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Xc(this.currentPoint.clone(),new Xn(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Yc(this.currentPoint.clone(),new Xn(e,t),new Xn(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,r){const a=new Wc(this.currentPoint.clone(),new Xn(e,t),new Xn(n,i),new Xn(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new $c(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,r){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,n,i,s,r),this}absarc(e,t,n,i,s,r){return this.absellipse(e,t,n,n,i,s,r),this}ellipse(e,t,n,i,s,r,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,i,s,r,a,o),this}absellipse(e,t,n,i,s,r,a,o){const l=new Ic(e,t,n,i,s,r,a,o);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class eh extends ar{constructor(e=[new Xn(0,-.5),new Xn(.5,0),new Xn(0,.5)],t=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Fn(i,0,2*Math.PI);const s=[],r=[],a=[],o=[],l=[],c=1/t,h=new wi,u=new Xn,d=new wi,p=new wi,m=new wi;let f=0,g=0;for(let t=0;t<=e.length-1;t++)switch(t){case 0:f=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-f,d.z=0*g,m.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(m.x,m.y,m.z);break;default:f=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-f,d.z=0*g,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),o.push(d.x,d.y,d.z),m.copy(p)}for(let s=0;s<=t;s++){const d=n+s*c*i,p=Math.sin(d),m=Math.cos(d);for(let n=0;n<=e.length-1;n++){h.x=e[n].x*p,h.y=e[n].y,h.z=e[n].x*m,r.push(h.x,h.y,h.z),u.x=s/t,u.y=n/(e.length-1),a.push(u.x,u.y);const i=o[3*n+0]*p,c=o[3*n+1],d=o[3*n+0]*m;l.push(i,c,d)}}for(let n=0;n<t;n++)for(let t=0;t<e.length-1;t++){const i=t+n*e.length,r=i,a=i+e.length,o=i+e.length+1,l=i+1;s.push(r,a,l),s.push(o,l,a)}this.setIndex(s),this.setAttribute("position",new Js(r,3)),this.setAttribute("uv",new Js(a,2)),this.setAttribute("normal",new Js(l,3))}static fromJSON(e){return new eh(e.points,e.segments,e.phiStart,e.phiLength)}}class th extends eh{constructor(e=1,t=1,n=4,i=8){const s=new Qc;s.absarc(0,-t/2,e,1.5*Math.PI,0),s.absarc(0,t/2,e,0,.5*Math.PI),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new th(e.radius,e.length,e.capSegments,e.radialSegments)}}class nh extends ar{constructor(e=1,t=8,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],r=[],a=[],o=[],l=new wi,c=new Xn;r.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let s=0,h=3;s<=t;s++,h+=3){const u=n+s/t*i;l.x=e*Math.cos(u),l.y=e*Math.sin(u),r.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(r[h]/e+1)/2,c.y=(r[h+1]/e+1)/2,o.push(c.x,c.y)}for(let e=1;e<=t;e++)s.push(e,e+1,0);this.setIndex(s),this.setAttribute("position",new Js(r,3)),this.setAttribute("normal",new Js(a,3)),this.setAttribute("uv",new Js(o,2))}static fromJSON(e){return new nh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ih extends ar{constructor(e=1,t=1,n=1,i=8,s=1,r=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),s=Math.floor(s);const c=[],h=[],u=[],d=[];let p=0;const m=[],f=n/2;let g=0;function x(n){const s=p,r=new Xn,m=new wi;let x=0;const v=!0===n?e:t,y=!0===n?1:-1;for(let e=1;e<=i;e++)h.push(0,f*y,0),u.push(0,y,0),d.push(.5,.5),p++;const _=p;for(let e=0;e<=i;e++){const t=e/i*o+a,n=Math.cos(t),s=Math.sin(t);m.x=v*s,m.y=f*y,m.z=v*n,h.push(m.x,m.y,m.z),u.push(0,y,0),r.x=.5*n+.5,r.y=.5*s*y+.5,d.push(r.x,r.y),p++}for(let e=0;e<i;e++){const t=s+e,i=_+e;!0===n?c.push(i,i+1,t):c.push(i+1,i,t),x+=3}l.addGroup(g,x,!0===n?1:2),g+=x}!function(){const r=new wi,x=new wi;let v=0;const y=(t-e)/n;for(let l=0;l<=s;l++){const c=[],g=l/s,v=g*(t-e)+e;for(let e=0;e<=i;e++){const t=e/i,s=t*o+a,l=Math.sin(s),m=Math.cos(s);x.x=v*l,x.y=-g*n+f,x.z=v*m,h.push(x.x,x.y,x.z),r.set(l,y,m).normalize(),u.push(r.x,r.y,r.z),d.push(t,1-g),c.push(p++)}m.push(c)}for(let e=0;e<i;e++)for(let t=0;t<s;t++){const n=m[t][e],i=m[t+1][e],s=m[t+1][e+1],r=m[t][e+1];c.push(n,i,r),c.push(i,s,r),v+=6}l.addGroup(g,v,0),g+=v}(),!1===r&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(c),this.setAttribute("position",new Js(h,3)),this.setAttribute("normal",new Js(u,3)),this.setAttribute("uv",new Js(d,2))}static fromJSON(e){return new ih(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sh extends ih{constructor(e=1,t=1,n=8,i=1,s=!1,r=0,a=2*Math.PI){super(0,e,t,n,i,s,r,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(e){return new sh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class rh extends ar{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],r=[];function a(e,t,n,i){const s=i+1,r=[];for(let i=0;i<=s;i++){r[i]=[];const a=e.clone().lerp(n,i/s),o=t.clone().lerp(n,i/s),l=s-i;for(let e=0;e<=l;e++)r[i][e]=0===e&&i===s?a:a.clone().lerp(o,e/l)}for(let e=0;e<s;e++)for(let t=0;t<2*(s-e)-1;t++){const n=Math.floor(t/2);t%2==0?(o(r[e][n+1]),o(r[e+1][n]),o(r[e][n])):(o(r[e][n+1]),o(r[e+1][n+1]),o(r[e+1][n]))}}function o(e){s.push(e.x,e.y,e.z)}function l(t,n){const i=3*t;n.x=e[i+0],n.y=e[i+1],n.z=e[i+2]}function c(e,t,n,i){i<0&&1===e.x&&(r[t]=e.x-1),0===n.x&&0===n.z&&(r[t]=i/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}function u(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}!function(e){const n=new wi,i=new wi,s=new wi;for(let r=0;r<t.length;r+=3)l(t[r+0],n),l(t[r+1],i),l(t[r+2],s),a(n,i,s,e)}(i),function(e){const t=new wi;for(let n=0;n<s.length;n+=3)t.x=s[n+0],t.y=s[n+1],t.z=s[n+2],t.normalize().multiplyScalar(e),s[n+0]=t.x,s[n+1]=t.y,s[n+2]=t.z}(n),function(){const e=new wi;for(let t=0;t<s.length;t+=3){e.x=s[t+0],e.y=s[t+1],e.z=s[t+2];const n=h(e)/2/Math.PI+.5,i=u(e)/Math.PI+.5;r.push(n,1-i)}(function(){const e=new wi,t=new wi,n=new wi,i=new wi,a=new Xn,o=new Xn,l=new Xn;for(let u=0,d=0;u<s.length;u+=9,d+=6){e.set(s[u+0],s[u+1],s[u+2]),t.set(s[u+3],s[u+4],s[u+5]),n.set(s[u+6],s[u+7],s[u+8]),a.set(r[d+0],r[d+1]),o.set(r[d+2],r[d+3]),l.set(r[d+4],r[d+5]),i.copy(e).add(t).add(n).divideScalar(3);const p=h(i);c(a,d+0,e,p),c(o,d+2,t,p),c(l,d+4,n,p)}})(),function(){for(let e=0;e<r.length;e+=6){const t=r[e+0],n=r[e+2],i=r[e+4],s=Math.max(t,n,i),a=Math.min(t,n,i);s>.9&&a<.1&&(t<.2&&(r[e+0]+=1),n<.2&&(r[e+2]+=1),i<.2&&(r[e+4]+=1))}}()}(),this.setAttribute("position",new Js(s,3)),this.setAttribute("normal",new Js(s.slice(),3)),this.setAttribute("uv",new Js(r,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new rh(e.vertices,e.indices,e.radius,e.details)}}class ah extends rh{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ah(e.radius,e.detail)}}const oh=new wi,lh=new wi,ch=new wi,hh=new zs;class uh extends ar{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){const n=4,i=Math.pow(10,n),s=Math.cos(Dn*t),r=e.getIndex(),a=e.getAttribute("position"),o=r?r.count:a.count,l=[0,0,0],c=["a","b","c"],h=new Array(3),u={},d=[];for(let e=0;e<o;e+=3){r?(l[0]=r.getX(e),l[1]=r.getX(e+1),l[2]=r.getX(e+2)):(l[0]=e,l[1]=e+1,l[2]=e+2);const{a:t,b:n,c:o}=hh;if(t.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),hh.getNormal(ch),h[0]=`${Math.round(t.x*i)},${Math.round(t.y*i)},${Math.round(t.z*i)}`,h[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,h[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=h[e],i=h[t],r=hh[c[e]],a=hh[c[t]],o=`${n}_${i}`,p=`${i}_${n}`;p in u&&u[p]?(ch.dot(u[p].normal)<=s&&(d.push(r.x,r.y,r.z),d.push(a.x,a.y,a.z)),u[p]=null):o in u||(u[o]={index0:l[e],index1:l[t],normal:ch.clone()})}}for(const e in u)if(u[e]){const{index0:t,index1:n}=u[e];oh.fromBufferAttribute(a,t),lh.fromBufferAttribute(a,n),d.push(oh.x,oh.y,oh.z),d.push(lh.x,lh.y,lh.z)}this.setAttribute("position",new Js(d,3))}}}class dh extends Qc{constructor(e){super(e),this.uuid=zn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new Qc).fromJSON(n))}return this}}function ph(e,t,n,i,s){let r,a;if(s===function(e,t,n,i){let s=0;for(let r=t,a=n-i;r<n;r+=i)s+=(e[a]-e[r])*(e[r+1]+e[a+1]),a=r;return s}(e,t,n,i)>0)for(r=t;r<n;r+=i)a=Dh(r,e[r],e[r+1],a);else for(r=n-i;r>=t;r-=i)a=Dh(r,e[r],e[r+1],a);return a&&Ch(a,a.next)&&(Oh(a),a=a.next),a}function mh(e,t){if(!e)return e;t||(t=e);let n,i=e;do{if(n=!1,i.steiner||!Ch(i,i.next)&&0!==Ah(i.prev,i,i.next))i=i.next;else{if(Oh(i),i=t=i.prev,i===i.next)break;n=!0}}while(n||i!==t);return t}function fh(e,t,n,i,s,r,a){if(!e)return;!a&&r&&function(e,t,n,i){let s=e;do{null===s.z&&(s.z=wh(s.x,s.y,t,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==e);s.prevZ.nextZ=null,s.prevZ=null,function(e){let t,n,i,s,r,a,o,l,c=1;do{for(n=e,e=null,r=null,a=0;n;){for(a++,i=n,o=0,t=0;t<c&&(o++,i=i.nextZ,i);t++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(s=n,n=n.nextZ,o--):(s=i,i=i.nextZ,l--),r?r.nextZ=s:e=s,s.prevZ=r,r=s;n=i}r.nextZ=null,c*=2}while(a>1)}(s)}(e,i,s,r);let o,l,c=e;for(;e.prev!==e.next;)if(o=e.prev,l=e.next,r?xh(e,i,s,r):gh(e))t.push(o.i/n),t.push(e.i/n),t.push(l.i/n),Oh(e),e=l.next,c=l.next;else if((e=l)===c){a?1===a?fh(e=vh(mh(e),t,n),t,n,i,s,r,2):2===a&&yh(e,t,n,i,s,r):fh(mh(e),t,n,i,s,r,1);break}}function gh(e){const t=e.prev,n=e,i=e.next;if(Ah(t,n,i)>=0)return!1;let s=e.next.next;for(;s!==e.prev;){if(Th(t.x,t.y,n.x,n.y,i.x,i.y,s.x,s.y)&&Ah(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function xh(e,t,n,i){const s=e.prev,r=e,a=e.next;if(Ah(s,r,a)>=0)return!1;const o=s.x<r.x?s.x<a.x?s.x:a.x:r.x<a.x?r.x:a.x,l=s.y<r.y?s.y<a.y?s.y:a.y:r.y<a.y?r.y:a.y,c=s.x>r.x?s.x>a.x?s.x:a.x:r.x>a.x?r.x:a.x,h=s.y>r.y?s.y>a.y?s.y:a.y:r.y>a.y?r.y:a.y,u=wh(o,l,t,n,i),d=wh(c,h,t,n,i);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&Th(s.x,s.y,r.x,r.y,a.x,a.y,p.x,p.y)&&Ah(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&Th(s.x,s.y,r.x,r.y,a.x,a.y,m.x,m.y)&&Ah(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&Th(s.x,s.y,r.x,r.y,a.x,a.y,p.x,p.y)&&Ah(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&Th(s.x,s.y,r.x,r.y,a.x,a.y,m.x,m.y)&&Ah(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function vh(e,t,n){let i=e;do{const s=i.prev,r=i.next.next;!Ch(s,r)&&Nh(s,i,i.next,r)&&Ph(s,r)&&Ph(r,s)&&(t.push(s.i/n),t.push(i.i/n),t.push(r.i/n),Oh(i),Oh(i.next),i=e=r),i=i.next}while(i!==e);return mh(i)}function yh(e,t,n,i,s,r){let a=e;do{let e=a.next.next;for(;e!==a.prev;){if(a.i!==e.i&&Eh(a,e)){let o=Ih(a,e);return a=mh(a,a.next),o=mh(o,o.next),fh(a,t,n,i,s,r),void fh(o,t,n,i,s,r)}e=e.next}a=a.next}while(a!==e)}function _h(e,t){return e.x-t.x}function bh(e,t){if(t=function(e,t){let n=t;const i=e.x,s=e.y;let r,a=-1/0;do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){const e=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=i&&e>a){if(a=e,e===i){if(s===n.y)return n;if(s===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!r)return null;if(i===a)return r;const o=r,l=r.x,c=r.y;let h,u=1/0;n=r;do{i>=n.x&&n.x>=l&&i!==n.x&&Th(s<c?i:a,s,l,c,s<c?a:i,s,n.x,n.y)&&(h=Math.abs(s-n.y)/(i-n.x),Ph(n,e)&&(h<u||h===u&&(n.x>r.x||n.x===r.x&&Mh(r,n)))&&(r=n,u=h)),n=n.next}while(n!==o);return r}(e,t),t){const n=Ih(t,e);mh(t,t.next),mh(n,n.next)}}function Mh(e,t){return Ah(e.prev,e,t.prev)<0&&Ah(t.next,e,e.next)<0}function wh(e,t,n,i,s){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*s)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*s)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Sh(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Th(e,t,n,i,s,r,a,o){return(s-a)*(t-o)-(e-a)*(r-o)>=0&&(e-a)*(i-o)-(n-a)*(t-o)>=0&&(n-a)*(r-o)-(s-a)*(i-o)>=0}function Eh(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Nh(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(Ph(e,t)&&Ph(t,e)&&function(e,t){let n=e,i=!1;const s=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&s<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(Ah(e.prev,e,t.prev)||Ah(e,t.prev,t))||Ch(e,t)&&Ah(e.prev,e,e.next)>0&&Ah(t.prev,t,t.next)>0)}function Ah(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Ch(e,t){return e.x===t.x&&e.y===t.y}function Nh(e,t,n,i){const s=Rh(Ah(e,t,n)),r=Rh(Ah(e,t,i)),a=Rh(Ah(n,i,e)),o=Rh(Ah(n,i,t));return s!==r&&a!==o||!(0!==s||!Lh(e,n,t))||!(0!==r||!Lh(e,i,t))||!(0!==a||!Lh(n,e,i))||!(0!==o||!Lh(n,t,i))}function Lh(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Rh(e){return e>0?1:e<0?-1:0}function Ph(e,t){return Ah(e.prev,e,e.next)<0?Ah(e,t,e.next)>=0&&Ah(e,e.prev,t)>=0:Ah(e,t,e.prev)<0||Ah(e,e.next,t)<0}function Ih(e,t){const n=new zh(e.i,e.x,e.y),i=new zh(t.i,t.x,t.y),s=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=s,s.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function Dh(e,t,n,i){const s=new zh(e,t,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function Oh(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function zh(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Fh{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return.5*n}static isClockWise(e){return Fh.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Uh(e),Bh(n,e);let r=e.length;t.forEach(Uh);for(let e=0;e<t.length;e++)i.push(r),r+=t[e].length,Bh(n,t[e]);const a=function(e,t,n=2){const i=t&&t.length,s=i?t[0]*n:e.length;let r=ph(e,0,s,n,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,h,u,d,p;if(i&&(r=function(e,t,n,i){const s=[];let r,a,o,l,c;for(r=0,a=t.length;r<a;r++)o=t[r]*i,l=r<a-1?t[r+1]*i:e.length,c=ph(e,o,l,i,!1),c===c.next&&(c.steiner=!0),s.push(Sh(c));for(s.sort(_h),r=0;r<s.length;r++)bh(s[r],n),n=mh(n,n.next);return n}(e,t,r,n)),e.length>80*n){o=c=e[0],l=h=e[1];for(let t=n;t<s;t+=n)u=e[t],d=e[t+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?1/p:0}return fh(r,a,n,o,l,p),a}(n,i);for(let e=0;e<a.length;e+=3)s.push(a.slice(e,e+3));return s}}function Uh(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Bh(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Vh extends ar{constructor(e=new dh([new Xn(.5,.5),new Xn(-.5,.5),new Xn(-.5,-.5),new Xn(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let t=0,n=e.length;t<n;t++)r(e[t]);function r(e){const r=[],a=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1;let c=void 0===t.bevelEnabled||t.bevelEnabled,h=void 0!==t.bevelThickness?t.bevelThickness:.2,u=void 0!==t.bevelSize?t.bevelSize:h-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:kh;let g,x,v,y,_,b=!1;m&&(g=m.getSpacedPoints(o),b=!0,c=!1,x=m.computeFrenetFrames(o,!1),v=new wi,y=new wi,_=new wi),c||(p=0,h=0,u=0,d=0);const M=e.extractPoints(a);let w=M.shape;const S=M.holes;if(!Fh.isClockWise(w)){w=w.reverse();for(let e=0,t=S.length;e<t;e++){const t=S[e];Fh.isClockWise(t)&&(S[e]=t.reverse())}}const T=Fh.triangulateShape(w,S),E=w;for(let e=0,t=S.length;e<t;e++){const t=S[e];w=w.concat(t)}function A(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const C=w.length,N=T.length;function L(e,t,n){let i,s,r;const a=e.x-t.x,o=e.y-t.y,l=n.x-e.x,c=n.y-e.y,h=a*a+o*o,u=a*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-o/u,m=t.y+a/u,f=((n.x-c/d-p)*c-(n.y+l/d-m)*l)/(a*c-o*l);i=p+a*f-e.x,s=m+o*f-e.y;const g=i*i+s*s;if(g<=2)return new Xn(i,s);r=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(c)&&(e=!0),e?(i=-o,s=a,r=Math.sqrt(h)):(i=a,s=o,r=Math.sqrt(h/2))}return new Xn(i/r,s/r)}const R=[];for(let e=0,t=E.length,n=t-1,i=e+1;e<t;e++,n++,i++)n===t&&(n=0),i===t&&(i=0),R[e]=L(E[e],E[n],E[i]);const P=[];let I,D=R.concat();for(let e=0,t=S.length;e<t;e++){const t=S[e];I=[];for(let e=0,n=t.length,i=n-1,s=e+1;e<n;e++,i++,s++)i===n&&(i=0),s===n&&(s=0),I[e]=L(t[e],t[i],t[s]);P.push(I),D=D.concat(I)}for(let e=0;e<p;e++){const t=e/p,n=h*Math.cos(t*Math.PI/2),i=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=E.length;e<t;e++){const t=A(E[e],R[e],i);F(t.x,t.y,-n)}for(let e=0,t=S.length;e<t;e++){const t=S[e];I=P[e];for(let e=0,s=t.length;e<s;e++){const s=A(t[e],I[e],i);F(s.x,s.y,-n)}}}const O=u+d;for(let e=0;e<C;e++){const t=c?A(w[e],D[e],O):w[e];b?(y.copy(x.normals[0]).multiplyScalar(t.x),v.copy(x.binormals[0]).multiplyScalar(t.y),_.copy(g[0]).add(y).add(v),F(_.x,_.y,_.z)):F(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<C;t++){const n=c?A(w[t],D[t],O):w[t];b?(y.copy(x.normals[e]).multiplyScalar(n.x),v.copy(x.binormals[e]).multiplyScalar(n.y),_.copy(g[e]).add(y).add(v),F(_.x,_.y,_.z)):F(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=h*Math.cos(t*Math.PI/2),i=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=E.length;e<t;e++){const t=A(E[e],R[e],i);F(t.x,t.y,l+n)}for(let e=0,t=S.length;e<t;e++){const t=S[e];I=P[e];for(let e=0,s=t.length;e<s;e++){const s=A(t[e],I[e],i);b?F(s.x,s.y+g[o-1].y,g[o-1].x+n):F(s.x,s.y,l+n)}}}function z(e,t){let n=e.length;for(;--n>=0;){const i=n;let s=n-1;s<0&&(s=e.length-1);for(let e=0,n=o+2*p;e<n;e++){const n=C*e,r=C*(e+1);B(t+i+n,t+s+n,t+s+r,t+i+r)}}}function F(e,t,n){r.push(e),r.push(t),r.push(n)}function U(e,t,s){V(e),V(t),V(s);const r=i.length/3,a=f.generateTopUV(n,i,r-3,r-2,r-1);k(a[0]),k(a[1]),k(a[2])}function B(e,t,s,r){V(e),V(t),V(r),V(t),V(s),V(r);const a=i.length/3,o=f.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);k(o[0]),k(o[1]),k(o[3]),k(o[1]),k(o[2]),k(o[3])}function V(e){i.push(r[3*e+0]),i.push(r[3*e+1]),i.push(r[3*e+2])}function k(e){s.push(e.x),s.push(e.y)}!function(){const e=i.length/3;if(c){let e=0,t=C*e;for(let e=0;e<N;e++){const n=T[e];U(n[2]+t,n[1]+t,n[0]+t)}e=o+2*p,t=C*e;for(let e=0;e<N;e++){const n=T[e];U(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<N;e++){const t=T[e];U(t[2],t[1],t[0])}for(let e=0;e<N;e++){const t=T[e];U(t[0]+C*o,t[1]+C*o,t[2]+C*o)}}n.addGroup(e,i.length/3-e,0)}(),function(){const e=i.length/3;let t=0;z(E,t),t+=E.length;for(let e=0,n=S.length;e<n;e++){const n=S[e];z(n,t),t+=n.length}n.addGroup(e,i.length/3-e,1)}()}this.setAttribute("position",new Js(i,3)),this.setAttribute("uv",new Js(s,2)),this.computeVertexNormals()}toJSON(){const e=super.toJSON();return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,i=e.length;t<i;t++){const i=e[t];n.shapes.push(i.uuid)}else n.shapes.push(e.uuid);return n.options=Object.assign({},t),void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const s=t[e.shapes[i]];n.push(s)}const i=e.options.extrudePath;return void 0!==i&&(e.options.extrudePath=(new Jc[i.type]).fromJSON(i)),new Vh(n,e.options)}}const kh={generateTopUV:function(e,t,n,i,s){const r=t[3*n],a=t[3*n+1],o=t[3*i],l=t[3*i+1],c=t[3*s],h=t[3*s+1];return[new Xn(r,a),new Xn(o,l),new Xn(c,h)]},generateSideWallUV:function(e,t,n,i,s,r){const a=t[3*n],o=t[3*n+1],l=t[3*n+2],c=t[3*i],h=t[3*i+1],u=t[3*i+2],d=t[3*s],p=t[3*s+1],m=t[3*s+2],f=t[3*r],g=t[3*r+1],x=t[3*r+2];return Math.abs(o-h)<Math.abs(a-c)?[new Xn(a,1-l),new Xn(c,1-u),new Xn(d,1-m),new Xn(f,1-x)]:[new Xn(o,1-l),new Xn(h,1-u),new Xn(p,1-m),new Xn(g,1-x)]}};class Gh extends rh{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gh(e.radius,e.detail)}}class Hh extends rh{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Hh(e.radius,e.detail)}}class Wh extends ar{constructor(e=.5,t=1,n=8,i=1,s=0,r=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:r},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let h=e;const u=(t-e)/(i=Math.max(1,i)),d=new wi,p=new Xn;for(let e=0;e<=i;e++){for(let e=0;e<=n;e++){const i=s+e/n*r;d.x=h*Math.cos(i),d.y=h*Math.sin(i),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<i;e++){const t=e*(n+1);for(let e=0;e<n;e++){const i=e+t,s=i,r=i+n+1,o=i+n+2,l=i+1;a.push(s,r,l),a.push(r,o,l)}}this.setIndex(a),this.setAttribute("position",new Js(o,3)),this.setAttribute("normal",new Js(l,3)),this.setAttribute("uv",new Js(c,2))}static fromJSON(e){return new Wh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class jh extends ar{constructor(e=new dh([new Xn(0,.5),new Xn(-.5,-.5),new Xn(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],r=[];let a=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(a,o,t),a+=o,o=0;function l(e){const a=i.length/3,l=e.extractPoints(t);let c=l.shape;const h=l.holes;!1===Fh.isClockWise(c)&&(c=c.reverse());for(let e=0,t=h.length;e<t;e++){const t=h[e];!0===Fh.isClockWise(t)&&(h[e]=t.reverse())}const u=Fh.triangulateShape(c,h);for(let e=0,t=h.length;e<t;e++){const t=h[e];c=c.concat(t)}for(let e=0,t=c.length;e<t;e++){const t=c[e];i.push(t.x,t.y,0),s.push(0,0,1),r.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){const t=u[e],i=t[0]+a,s=t[1]+a,r=t[2]+a;n.push(i,s,r),o+=3}}this.setIndex(n),this.setAttribute("position",new Js(i,3)),this.setAttribute("normal",new Js(s,3)),this.setAttribute("uv",new Js(r,2))}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const s=t[e.shapes[i]];n.push(s)}return new jh(n,e.curveSegments)}}class Xh extends ar{constructor(e=1,t=32,n=16,i=0,s=2*Math.PI,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(r+a,Math.PI);let l=0;const c=[],h=new wi,u=new wi,d=[],p=[],m=[],f=[];for(let d=0;d<=n;d++){const g=[],x=d/n;let v=0;0==d&&0==r?v=.5/t:d==n&&o==Math.PI&&(v=-.5/t);for(let n=0;n<=t;n++){const o=n/t;h.x=-e*Math.cos(i+o*s)*Math.sin(r+x*a),h.y=e*Math.cos(r+x*a),h.z=e*Math.sin(i+o*s)*Math.sin(r+x*a),p.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),f.push(o+v,1-x),g.push(l++)}c.push(g)}for(let e=0;e<n;e++)for(let i=0;i<t;i++){const t=c[e][i+1],s=c[e][i],a=c[e+1][i],l=c[e+1][i+1];(0!==e||r>0)&&d.push(t,s,l),(e!==n-1||o<Math.PI)&&d.push(s,a,l)}this.setIndex(d),this.setAttribute("position",new Js(p,3)),this.setAttribute("normal",new Js(m,3)),this.setAttribute("uv",new Js(f,2))}static fromJSON(e){return new Xh(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class qh extends rh{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qh(e.radius,e.detail)}}class Yh extends ar{constructor(e=1,t=.4,n=8,i=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const r=[],a=[],o=[],l=[],c=new wi,h=new wi,u=new wi;for(let r=0;r<=n;r++)for(let d=0;d<=i;d++){const p=d/i*s,m=r/n*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(p),h.y=(e+t*Math.cos(m))*Math.sin(p),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),u.subVectors(h,c).normalize(),o.push(u.x,u.y,u.z),l.push(d/i),l.push(r/n)}for(let e=1;e<=n;e++)for(let t=1;t<=i;t++){const n=(i+1)*e+t-1,s=(i+1)*(e-1)+t-1,a=(i+1)*(e-1)+t,o=(i+1)*e+t;r.push(n,s,o),r.push(s,a,o)}this.setIndex(r),this.setAttribute("position",new Js(a,3)),this.setAttribute("normal",new Js(o,3)),this.setAttribute("uv",new Js(l,2))}static fromJSON(e){return new Yh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Zh extends ar{constructor(e=1,t=.4,n=64,i=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],h=new wi,u=new wi,d=new wi,p=new wi,m=new wi,f=new wi,g=new wi;for(let a=0;a<=n;++a){const v=a/n*s*Math.PI*2;x(v,s,r,e,d),x(v+.01,s,r,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=i;++e){const s=e/i*Math.PI*2,r=-t*Math.cos(s),p=t*Math.sin(s);h.x=d.x+(r*g.x+p*m.x),h.y=d.y+(r*g.y+p*m.y),h.z=d.z+(r*g.z+p*m.z),o.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(a/n),c.push(e/i)}}for(let e=1;e<=n;e++)for(let t=1;t<=i;t++){const n=(i+1)*(e-1)+(t-1),s=(i+1)*e+(t-1),r=(i+1)*e+t,o=(i+1)*(e-1)+t;a.push(n,s,o),a.push(s,r,o)}function x(e,t,n,i,s){const r=Math.cos(e),a=Math.sin(e),o=n/t*e,l=Math.cos(o);s.x=i*(2+l)*.5*r,s.y=i*(2+l)*a*.5,s.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Js(o,3)),this.setAttribute("normal",new Js(l,3)),this.setAttribute("uv",new Js(c,2))}static fromJSON(e){return new Zh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class $h extends ar{constructor(e=new Zc(new wi(-1,-1,0),new wi(-1,1,0),new wi(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const r=e.computeFrenetFrames(t,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const a=new wi,o=new wi,l=new Xn;let c=new wi;const h=[],u=[],d=[],p=[];function m(s){c=e.getPointAt(s/t,c);const l=r.normals[s],d=r.binormals[s];for(let e=0;e<=i;e++){const t=e/i*Math.PI*2,s=Math.sin(t),r=-Math.cos(t);o.x=r*l.x+s*d.x,o.y=r*l.y+s*d.y,o.z=r*l.z+s*d.z,o.normalize(),u.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,h.push(a.x,a.y,a.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===s?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=i;n++)l.x=e/t,l.y=n/i,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=i;t++){const n=(i+1)*(e-1)+(t-1),s=(i+1)*e+(t-1),r=(i+1)*e+t,a=(i+1)*(e-1)+t;p.push(n,s,a),p.push(s,r,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Js(h,3)),this.setAttribute("normal",new Js(u,3)),this.setAttribute("uv",new Js(d,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new $h((new Jc[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Jh extends ar{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const t=[],n=new Set,i=new wi,s=new wi;if(null!==e.index){const r=e.attributes.position,a=e.index;let o=e.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let e=0,l=o.length;e<l;++e){const l=o[e],c=l.start;for(let e=c,o=c+l.count;e<o;e+=3)for(let o=0;o<3;o++){const l=a.getX(e+o),c=a.getX(e+(o+1)%3);i.fromBufferAttribute(r,l),s.fromBufferAttribute(r,c),!0===Kh(i,s,n)&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const r=e.attributes.position;for(let e=0,a=r.count/3;e<a;e++)for(let a=0;a<3;a++){const o=3*e+a,l=3*e+(a+1)%3;i.fromBufferAttribute(r,o),s.fromBufferAttribute(r,l),!0===Kh(i,s,n)&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Js(t,3))}}}function Kh(e,t,n){const i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,s=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(i)&&!0!==n.has(s)&&(n.add(i),n.add(s),!0)}var Qh=Object.freeze({__proto__:null,BoxGeometry:Er,CapsuleGeometry:th,CircleGeometry:nh,ConeGeometry:sh,CylinderGeometry:ih,DodecahedronGeometry:ah,EdgesGeometry:uh,ExtrudeGeometry:Vh,IcosahedronGeometry:Gh,LatheGeometry:eh,OctahedronGeometry:Hh,PlaneGeometry:Xr,PolyhedronGeometry:rh,RingGeometry:Wh,ShapeGeometry:jh,SphereGeometry:Xh,TetrahedronGeometry:qh,TorusGeometry:Yh,TorusKnotGeometry:Zh,TubeGeometry:$h,WireframeGeometry:Jh});class eu extends Us{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new li(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class tu extends Lr{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class nu extends Us{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new li(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new li(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jt,this.normalScale=new Xn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class iu extends nu{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Xn(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Fn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new li(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new li(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new li(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class su extends Us{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new li(16777215),this.specular=new li(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new li(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jt,this.normalScale=new Xn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=he,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ru extends Us{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new li(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new li(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jt,this.normalScale=new Xn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class au extends Us{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jt,this.normalScale=new Xn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class ou extends Us{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new li(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new li(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jt,this.normalScale=new Xn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=he,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class lu extends Us{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new li(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jt,this.normalScale=new Xn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class cu extends hc{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function hu(e,t,n){return du(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)}function uu(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function du(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function pu(e){const t=e.length,n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort((function(t,n){return e[t]-e[n]})),n}function mu(e,t,n){const i=e.length,s=new e.constructor(i);for(let r=0,a=0;a!==i;++r){const i=n[r]*t;for(let n=0;n!==t;++n)s[a++]=e[i+n]}return s}function fu(e,t,n,i){let s=1,r=e[0];for(;void 0!==r&&void 0===r[i];)r=e[s++];if(void 0===r)return;let a=r[i];if(void 0!==a)if(Array.isArray(a))do{a=r[i],void 0!==a&&(t.push(r.time),n.push.apply(n,a)),r=e[s++]}while(void 0!==r);else if(void 0!==a.toArray)do{a=r[i],void 0!==a&&(t.push(r.time),a.toArray(n,n.length)),r=e[s++]}while(void 0!==r);else do{a=r[i],void 0!==a&&(t.push(r.time),n.push(a)),r=e[s++]}while(void 0!==r)}var gu=Object.freeze({__proto__:null,arraySlice:hu,convertArray:uu,isTypedArray:du,getKeyframeOrder:pu,sortedArray:mu,flattenJSON:fu,subclip:function(e,t,n,i,s=30){const r=e.clone();r.name=t;const a=[];for(let e=0;e<r.tracks.length;++e){const t=r.tracks[e],o=t.getValueSize(),l=[],c=[];for(let e=0;e<t.times.length;++e){const r=t.times[e]*s;if(!(r<n||r>=i)){l.push(t.times[e]);for(let n=0;n<o;++n)c.push(t.values[e*o+n])}}0!==l.length&&(t.times=uu(l,t.times.constructor),t.values=uu(c,t.values.constructor),a.push(t))}r.tracks=a;let o=1/0;for(let e=0;e<r.tracks.length;++e)o>r.tracks[e].times[0]&&(o=r.tracks[e].times[0]);for(let e=0;e<r.tracks.length;++e)r.tracks[e].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(e,t=0,n=e,i=30){i<=0&&(i=30);const s=n.tracks.length,r=t/i;for(let t=0;t<s;++t){const i=n.tracks[t],s=i.ValueTypeName;if("bool"===s||"string"===s)continue;const a=e.tracks.find((function(e){return e.name===i.name&&e.ValueTypeName===s}));if(void 0===a)continue;let o=0;const l=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=i.times.length-1;let d;if(r<=i.times[0]){const e=o,t=l-o;d=hu(i.values,e,t)}else if(r>=i.times[u]){const e=u*l+o,t=e+l-o;d=hu(i.values,e,t)}else{const e=i.createInterpolant(),t=o,n=l-o;e.evaluate(r),d=hu(e.resultBuffer,t,n)}"quaternion"===s&&(new Mi).fromArray(d).normalize().conjugate().toArray(d);const p=a.times.length;for(let e=0;e<p;++e){const t=e*h+c;if("quaternion"===s)Mi.multiplyQuaternionsFlat(a.values,t,d,0,a.values,t);else{const e=h-2*c;for(let n=0;n<e;++n)a.values[t+n]-=d[n]}}}return e.blendMode=Ht,e}});class xu{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let r;n:{i:if(!(e<i)){for(let r=n+2;;){if(void 0===i){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===r)break;if(s=i,i=t[++n],e<i)break t}r=t.length;break n}if(e>=s)break e;{const a=t[1];e<a&&(n=2,s=a);for(let r=n-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(n===r)break;if(i=s,s=t[--n-1],e>=s)break t}r=n,n=0}}for(;n<r;){const i=n+r>>>1;e<t[i]?r=i:n=i+1}if(i=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let e=0;e!==i;++e)t[e]=n[s+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class vu extends xu{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Bt,endingEnd:Bt}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,r=e+1,a=i[s],o=i[r];if(void 0===a)switch(this.getSettings_().endingStart){case Vt:s=e,a=2*t-n;break;case kt:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Vt:r=e,o=2*n-t;break;case kt:r=1,o=n+i[1]-i[0];break;default:r=e-1,o=t}const l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-n),this._offsetPrev=s*c,this._offsetNext=r*c}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,x=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,v=(-1-d)*f+(1.5+d)*m+.5*p,y=d*f-d*m;for(let e=0;e!==a;++e)s[e]=g*r[c+e]+x*r[l+e]+v*r[o+e]+y*r[h+e];return s}}class yu extends xu{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,c=(n-t)/(i-t),h=1-c;for(let e=0;e!==a;++e)s[e]=r[l+e]*h+r[o+e]*c;return s}}class _u extends xu{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class bu{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=uu(t,this.TimeBufferType),this.values=uu(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:uu(e.times,Array),values:uu(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new _u(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new yu(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new vu(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case zt:t=this.InterpolantFactoryMethodDiscrete;break;case Ft:t=this.InterpolantFactoryMethodLinear;break;case Ut:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return zt;case this.InterpolantFactoryMethodLinear:return Ft;case this.InterpolantFactoryMethodSmooth:return Ut}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<e;)++s;for(;-1!==r&&n[r]>t;)--r;if(++r,0!==s||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const e=this.getValueSize();this.times=hu(n,s,r),this.values=hu(this.values,s*e,r*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let t=0;t!==s;t++){const i=n[t];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,i),e=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,i,r),e=!1;break}r=i}if(void 0!==i&&du(i))for(let t=0,n=i.length;t!==n;++t){const n=i[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}optimize(){const e=hu(this.times),t=hu(this.values),n=this.getValueSize(),i=this.getInterpolation()===Ut,s=e.length-1;let r=1;for(let a=1;a<s;++a){let s=!1;const o=e[a];if(o!==e[a+1]&&(1!==a||o!==e[0]))if(i)s=!0;else{const e=a*n,i=e-n,r=e+n;for(let a=0;a!==n;++a){const n=t[e+a];if(n!==t[i+a]||n!==t[r+a]){s=!0;break}}}if(s){if(a!==r){e[r]=e[a];const i=a*n,s=r*n;for(let e=0;e!==n;++e)t[s+e]=t[i+e]}++r}}if(s>0){e[r]=e[s];for(let e=s*n,i=r*n,a=0;a!==n;++a)t[i+a]=t[e+a];++r}return r!==e.length?(this.times=hu(e,0,r),this.values=hu(t,0,r*n)):(this.times=e,this.values=t),this}clone(){const e=hu(this.times,0),t=hu(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}bu.prototype.TimeBufferType=Float32Array,bu.prototype.ValueBufferType=Float32Array,bu.prototype.DefaultInterpolation=Ft;class Mu extends bu{}Mu.prototype.ValueTypeName="bool",Mu.prototype.ValueBufferType=Array,Mu.prototype.DefaultInterpolation=zt,Mu.prototype.InterpolantFactoryMethodLinear=void 0,Mu.prototype.InterpolantFactoryMethodSmooth=void 0;class wu extends bu{}wu.prototype.ValueTypeName="color";class Su extends bu{}Su.prototype.ValueTypeName="number";class Tu extends xu{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=(n-t)/(i-t);let l=e*a;for(let e=l+a;l!==e;l+=4)Mi.slerpFlat(s,0,r,l-a,r,l,o);return s}}class Eu extends bu{InterpolantFactoryMethodLinear(e){return new Tu(this.times,this.values,this.getValueSize(),e)}}Eu.prototype.ValueTypeName="quaternion",Eu.prototype.DefaultInterpolation=Ft,Eu.prototype.InterpolantFactoryMethodSmooth=void 0;class Au extends bu{}Au.prototype.ValueTypeName="string",Au.prototype.ValueBufferType=Array,Au.prototype.DefaultInterpolation=zt,Au.prototype.InterpolantFactoryMethodLinear=void 0,Au.prototype.InterpolantFactoryMethodSmooth=void 0;class Cu extends bu{}Cu.prototype.ValueTypeName="vector";class Nu{constructor(e,t=-1,n,i=Gt){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=zn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let e=0,s=n.length;e!==s;++e)t.push(Lu(n[e]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,i=n.length;e!==i;++e)t.push(bu.toJSON(n[e]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,r=[];for(let e=0;e<s;e++){let a=[],o=[];a.push((e+s-1)%s,e,(e+1)%s),o.push(0,1,0);const l=pu(a);a=mu(a,1,l),o=mu(o,1,l),i||0!==a[0]||(a.push(s),o.push(o[0])),r.push(new Su(".morphTargetInfluences["+t[e].name+"]",a,o).scale(1/n))}return new this(e,-1,r)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){const n=e[t],r=n.name.match(s);if(r&&r.length>1){const e=r[1];let t=i[e];t||(i[e]=t=[]),t.push(n)}}const r=[];for(const e in i)r.push(this.CreateFromMorphTargetSequence(e,i[e],t,n));return r}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,i,s){if(0!==n.length){const r=[],a=[];fu(n,r,a,i),0!==r.length&&s.push(new e(t,r,a))}},i=[],s=e.name||"default",r=e.fps||30,a=e.blendMode;let o=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const s=l[e].keys;if(s&&0!==s.length)if(s[0].morphTargets){const e={};let t;for(t=0;t<s.length;t++)if(s[t].morphTargets)for(let n=0;n<s[t].morphTargets.length;n++)e[s[t].morphTargets[n]]=-1;for(const n in e){const e=[],r=[];for(let i=0;i!==s[t].morphTargets.length;++i){const i=s[t];e.push(i.time),r.push(i.morphTarget===n?1:0)}i.push(new Su(".morphTargetInfluence["+n+"]",e,r))}o=e.length*r}else{const r=".bones["+t[e].name+"]";n(Cu,r+".position",s,"pos",i),n(Eu,r+".quaternion",s,"rot",i),n(Cu,r+".scale",s,"scl",i)}}return 0===i.length?null:new this(s,o,i,a)}resetDuration(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Lu(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Su;case"vector":case"vector2":case"vector3":case"vector4":return Cu;case"color":return wu;case"quaternion":return Eu;case"bool":case"boolean":return Mu;case"string":return Au}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];fu(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const Ru={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Pu{constructor(e,t,n){const i=this;let s,r=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===r&&void 0!==i.onStart&&i.onStart(e,a,o),r=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,o),a===o&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],i=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null}}}const Iu=new Pu;class Du{constructor(e){this.manager=void 0!==e?e:Iu,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(i,s){n.load(e,i,t,s)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ou={};class zu extends Error{constructor(e,t){super(e),this.response=t}}class Fu extends Du{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Ru.get(e);if(void 0!==s)return this.manager.itemStart(e),setTimeout((()=>{t&&t(s),this.manager.itemEnd(e)}),0),s;if(void 0!==Ou[e])return void Ou[e].push({onLoad:t,onProgress:n,onError:i});Ou[e]=[],Ou[e].push({onLoad:t,onProgress:n,onError:i});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(r).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=Ou[e],i=t.body.getReader(),s=t.headers.get("Content-Length"),r=s?parseInt(s):0,a=0!==r;let o=0;const l=new ReadableStream({start(e){!function t(){i.read().then((({done:i,value:s})=>{if(i)e.close();else{o+=s.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:r});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(i)}e.enqueue(s),t()}}))}()}});return new Response(l)}throw new zu(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,a)));case"json":return e.json();default:if(void 0===a)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(a),n=t&&t[1]?t[1].toLowerCase():void 0,i=new TextDecoder(n);return e.arrayBuffer().then((e=>i.decode(e)))}}})).then((t=>{Ru.add(e,t);const n=Ou[e];delete Ou[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onLoad&&i.onLoad(t)}})).catch((t=>{const n=Ou[e];if(void 0===n)throw this.manager.itemError(e),t;delete Ou[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Uu extends Du{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new Fu(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(function(n){try{t(s.parse(JSON.parse(n)))}catch(t){i?i(t):console.error(t),s.manager.itemError(e)}}),n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Nu.parse(e[n]);t.push(i)}return t}}class Bu extends Du{constructor(e){super(e)}load(e,t,n,i){const s=this,r=[],a=new Lc,o=new Fu(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(s.withCredentials);let l=0;function c(c){o.load(e[c],(function(e){const n=s.parse(e,!0);r[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=Ie),a.image=r,a.format=n.format,a.needsUpdate=!0,t&&t(a))}),n,i)}if(Array.isArray(e))for(let t=0,n=e.length;t<n;++t)c(t);else o.load(e,(function(e){const n=s.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){r[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)r[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),r[t].format=n.format,r[t].width=n.width,r[t].height=n.height}a.image=r}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=Ie),a.format=n.format,a.needsUpdate=!0,t&&t(a)}),n,i);return a}}class Vu extends Du{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Ru.get(e);if(void 0!==r)return s.manager.itemStart(e),setTimeout((function(){t&&t(r),s.manager.itemEnd(e)}),0),r;const a=Jn("img");function o(){c(),Ru.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(t){c(),i&&i(t),s.manager.itemError(e),s.manager.itemEnd(e)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class ku extends Du{constructor(e){super(e)}load(e,t,n,i){const s=new Or,r=new Vu(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function o(n){r.load(e[n],(function(e){s.images[n]=e,a++,6===a&&(s.needsUpdate=!0,t&&t(s))}),void 0,i)}for(let t=0;t<e.length;++t)o(t);return s}}class Gu extends Du{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new ec,a=new Fu(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,(function(e){const n=s.parse(e);n&&(void 0!==n.image?r.image=n.image:void 0!==n.data&&(r.image.width=n.width,r.image.height=n.height,r.image.data=n.data),r.wrapS=void 0!==n.wrapS?n.wrapS:Ee,r.wrapT=void 0!==n.wrapT?n.wrapT:Ee,r.magFilter=void 0!==n.magFilter?n.magFilter:Ie,r.minFilter=void 0!==n.minFilter?n.minFilter:Ie,r.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.encoding&&(r.encoding=n.encoding),void 0!==n.flipY&&(r.flipY=n.flipY),void 0!==n.format&&(r.format=n.format),void 0!==n.type&&(r.type=n.type),void 0!==n.mipmaps&&(r.mipmaps=n.mipmaps,r.minFilter=ze),1===n.mipmapCount&&(r.minFilter=Ie),void 0!==n.generateMipmaps&&(r.generateMipmaps=n.generateMipmaps),r.needsUpdate=!0,t&&t(r,n))}),n,i),r}}class Hu extends Du{constructor(e){super(e)}load(e,t,n,i){const s=new mi,r=new Vu(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,(function(e){s.image=e,s.needsUpdate=!0,void 0!==t&&t(s)}),n,i),s}}class Wu extends Ts{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new li(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}class ju extends Wu{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ts.DefaultUp),this.updateMatrix(),this.groundColor=new li(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Xu=new es,qu=new wi,Yu=new wi;class Zu{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Xn(512,512),this.map=null,this.mapPass=null,this.matrix=new es,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Hr,this._frameExtents=new Xn(1,1),this._viewportCount=1,this._viewports=[new fi(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;qu.setFromMatrixPosition(e.matrixWorld),t.position.copy(qu),Yu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Yu),t.updateMatrixWorld(),Xu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Xu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Xu)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class $u extends Zu{constructor(){super(new Pr(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=2*On*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;n===t.fov&&i===t.aspect&&s===t.far||(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Ju extends Wu{constructor(e,t,n=0,i=Math.PI/3,s=0,r=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ts.DefaultUp),this.updateMatrix(),this.target=new Ts,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new $u}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Ku=new es,Qu=new wi,ed=new wi;class td extends Zu{constructor(){super(new Pr(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Xn(4,2),this._viewportCount=6,this._viewports=[new fi(2,1,1,1),new fi(0,1,1,1),new fi(3,1,1,1),new fi(1,1,1,1),new fi(3,0,1,1),new fi(1,0,1,1)],this._cubeDirections=[new wi(1,0,0),new wi(-1,0,0),new wi(0,0,1),new wi(0,0,-1),new wi(0,1,0),new wi(0,-1,0)],this._cubeUps=[new wi(0,1,0),new wi(0,1,0),new wi(0,1,0),new wi(0,1,0),new wi(0,0,1),new wi(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Qu.setFromMatrixPosition(e.matrixWorld),n.position.copy(Qu),ed.copy(n.position),ed.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(ed),n.updateMatrixWorld(),i.makeTranslation(-Qu.x,-Qu.y,-Qu.z),Ku.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ku)}}class nd extends Wu{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new td}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class id extends Zu{constructor(){super(new na(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class sd extends Wu{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ts.DefaultUp),this.updateMatrix(),this.target=new Ts,this.shadow=new id}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class rd extends Wu{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class ad extends Wu{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class od{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new wi)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*i),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],n*i*1.092548),t.addScaledVector(r[5],i*s*1.092548),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],n*s*1.092548),t.addScaledVector(r[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],1.023328*i),t.addScaledVector(r[2],1.023328*s),t.addScaledVector(r[3],1.023328*n),t.addScaledVector(r[4],.858086*n*i),t.addScaledVector(r[5],.858086*i*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],.858086*n*s),t.addScaledVector(r[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class ld extends Wu{constructor(e=new od,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class cd extends Du{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,r=new Fu(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,(function(n){try{t(s.parse(JSON.parse(n)))}catch(t){i?i(t):console.error(t),s.manager.itemError(e)}}),n,i)}parse(e){const t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const i=cd.createMaterialFromType(e.type);if(void 0!==e.uuid&&(i.uuid=e.uuid),void 0!==e.name&&(i.name=e.name),void 0!==e.color&&void 0!==i.color&&i.color.setHex(e.color),void 0!==e.roughness&&(i.roughness=e.roughness),void 0!==e.metalness&&(i.metalness=e.metalness),void 0!==e.sheen&&(i.sheen=e.sheen),void 0!==e.sheenColor&&(i.sheenColor=(new li).setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(i.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==i.emissive&&i.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==i.specular&&i.specular.setHex(e.specular),void 0!==e.specularIntensity&&(i.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(i.shininess=e.shininess),void 0!==e.clearcoat&&(i.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(i.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.iridescence&&(i.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(i.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(i.transmission=e.transmission),void 0!==e.thickness&&(i.thickness=e.thickness),void 0!==e.attenuationDistance&&(i.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(i.fog=e.fog),void 0!==e.flatShading&&(i.flatShading=e.flatShading),void 0!==e.blending&&(i.blending=e.blending),void 0!==e.combine&&(i.combine=e.combine),void 0!==e.side&&(i.side=e.side),void 0!==e.shadowSide&&(i.shadowSide=e.shadowSide),void 0!==e.opacity&&(i.opacity=e.opacity),void 0!==e.transparent&&(i.transparent=e.transparent),void 0!==e.alphaTest&&(i.alphaTest=e.alphaTest),void 0!==e.depthTest&&(i.depthTest=e.depthTest),void 0!==e.depthWrite&&(i.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(i.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(i.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(i.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(i.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(i.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(i.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(i.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(i.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(i.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(i.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(i.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(i.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(i.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(i.rotation=e.rotation),1!==e.linewidth&&(i.linewidth=e.linewidth),void 0!==e.dashSize&&(i.dashSize=e.dashSize),void 0!==e.gapSize&&(i.gapSize=e.gapSize),void 0!==e.scale&&(i.scale=e.scale),void 0!==e.polygonOffset&&(i.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(i.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(i.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(i.dithering=e.dithering),void 0!==e.alphaToCoverage&&(i.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(i.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.toneMapped&&(i.toneMapped=e.toneMapped),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const s=e.uniforms[t];switch(i.uniforms[t]={},s.type){case"t":i.uniforms[t].value=n(s.value);break;case"c":i.uniforms[t].value=(new li).setHex(s.value);break;case"v2":i.uniforms[t].value=(new Xn).fromArray(s.value);break;case"v3":i.uniforms[t].value=(new wi).fromArray(s.value);break;case"v4":i.uniforms[t].value=(new fi).fromArray(s.value);break;case"m3":i.uniforms[t].value=(new qn).fromArray(s.value);break;case"m4":i.uniforms[t].value=(new es).fromArray(s.value);break;default:i.uniforms[t].value=s.value}}if(void 0!==e.defines&&(i.defines=e.defines),void 0!==e.vertexShader&&(i.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(i.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(i.glslVersion=e.glslVersion),void 0!==e.extensions)for(const t in e.extensions)i.extensions[t]=e.extensions[t];if(void 0!==e.size&&(i.size=e.size),void 0!==e.sizeAttenuation&&(i.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(i.map=n(e.map)),void 0!==e.matcap&&(i.matcap=n(e.matcap)),void 0!==e.alphaMap&&(i.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(i.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(i.bumpScale=e.bumpScale),void 0!==e.normalMap&&(i.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(i.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),i.normalScale=(new Xn).fromArray(t)}return void 0!==e.displacementMap&&(i.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(i.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(i.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(i.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(i.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(i.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(i.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(i.specularMap=n(e.specularMap)),void 0!==e.specularIntensityMap&&(i.specularIntensityMap=n(e.specularIntensityMap)),void 0!==e.specularColorMap&&(i.specularColorMap=n(e.specularColorMap)),void 0!==e.envMap&&(i.envMap=n(e.envMap)),void 0!==e.envMapIntensity&&(i.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(i.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(i.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(i.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(i.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(i.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(i.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(i.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(i.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(i.clearcoatNormalScale=(new Xn).fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(i.iridescenceMap=n(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(i.transmissionMap=n(e.transmissionMap)),void 0!==e.thicknessMap&&(i.thicknessMap=n(e.thicknessMap)),void 0!==e.sheenColorMap&&(i.sheenColorMap=n(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new{ShadowMaterial:eu,SpriteMaterial:Cl,RawShaderMaterial:tu,ShaderMaterial:Lr,PointsMaterial:bc,MeshPhysicalMaterial:iu,MeshStandardMaterial:nu,MeshPhongMaterial:su,MeshToonMaterial:ru,MeshNormalMaterial:au,MeshLambertMaterial:ou,MeshDepthMaterial:al,MeshDistanceMaterial:ol,MeshBasicMaterial:Bs,MeshMatcapMaterial:lu,LineDashedMaterial:cu,LineBasicMaterial:hc,Material:Us}[e]}}class hd{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ud extends ar{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class dd extends Du{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new Fu(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,(function(n){try{t(s.parse(JSON.parse(n)))}catch(t){i?i(t):console.error(t),s.manager.itemError(e)}}),n,i)}parse(e){const t={},n={};function i(e,i){if(void 0!==t[i])return t[i];const s=e.interleavedBuffers[i],r=function(e,t){if(void 0!==n[t])return n[t];const i=e.arrayBuffers[t],s=new Uint32Array(i).buffer;return n[t]=s,s}(e,s.buffer),a=$n(s.type,r),o=new Tl(a,s.stride);return o.uuid=s.uuid,t[i]=o,o}const s=e.isInstancedBufferGeometry?new ud:new ar,r=e.data.index;if(void 0!==r){const e=$n(r.type,r.array);s.setIndex(new Gs(e,1))}const a=e.data.attributes;for(const t in a){const n=a[t];let r;if(n.isInterleavedBufferAttribute){const t=i(e.data,n.data);r=new Al(t,n.itemSize,n.offset,n.normalized)}else{const e=$n(n.type,n.array);r=new(n.isInstancedBufferAttribute?sc:Gs)(e,n.itemSize,n.normalized)}void 0!==n.name&&(r.name=n.name),void 0!==n.usage&&r.setUsage(n.usage),void 0!==n.updateRange&&(r.updateRange.offset=n.updateRange.offset,r.updateRange.count=n.updateRange.count),s.setAttribute(t,r)}const o=e.data.morphAttributes;if(o)for(const t in o){const n=o[t],r=[];for(let t=0,s=n.length;t<s;t++){const s=n[t];let a;if(s.isInterleavedBufferAttribute){const t=i(e.data,s.data);a=new Al(t,s.itemSize,s.offset,s.normalized)}else{const e=$n(s.type,s.array);a=new Gs(e,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),r.push(a)}s.morphAttributes[t]=r}e.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const t=l[e];s.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new wi;void 0!==c.center&&e.fromArray(c.center),s.boundingSphere=new ji(e,c.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}}class pd extends Du{constructor(e){super(e)}load(e,t,n,i){const s=this,r=""===this.path?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const a=new Fu(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(n){let r=null;try{r=JSON.parse(n)}catch(t){return void 0!==i&&i(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const a=r.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?s.parse(r,t):console.error("THREE.ObjectLoader: Can't load "+e)}),n,i)}async loadAsync(e,t){const n=""===this.path?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const i=new Fu(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const s=await i.loadAsync(e,t),r=JSON.parse(s),a=r.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(r)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),r=this.parseImages(e.images,(function(){void 0!==t&&t(l)})),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,s,o,a,n),c=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,c),void 0!==t){let e=!1;for(const t in r)if(r[t].data instanceof HTMLImageElement){e=!0;break}!1===e&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),r=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,r),o=this.parseObject(e.object,i,a,r,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){const t={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){const i=(new dh).fromJSON(e[n]);t[i.uuid]=i}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse((function(e){e.isBone&&(i[e.uuid]=e)})),void 0!==e)for(let t=0,s=e.length;t<s;t++){const s=(new ic).fromJSON(e[t],i);n[s.uuid]=s}return n}parseGeometries(e,t){const n={};if(void 0!==e){const i=new dd;for(let s=0,r=e.length;s<r;s++){let r;const a=e[s];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":r=i.parse(a);break;default:a.type in Qh?r=Qh[a.type].fromJSON(a,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}r.uuid=a.uuid,void 0!==a.name&&(r.name=a.name),!0===r.isBufferGeometry&&void 0!==a.userData&&(r.userData=a.userData),n[a.uuid]=r}}return n}parseMaterials(e,t){const n={},i={};if(void 0!==e){const s=new cd;s.setTextures(t);for(let t=0,r=e.length;t<r;t++){const r=e[t];void 0===n[r.uuid]&&(n[r.uuid]=s.parse(r)),i[r.uuid]=n[r.uuid]}}return i}parseAnimations(e){const t={};if(void 0!==e)for(let n=0;n<e.length;n++){const i=e[n],s=Nu.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function r(e){if("string"==typeof e){const t=e;return function(e){return n.manager.itemStart(e),s.load(e,(function(){n.manager.itemEnd(e)}),void 0,(function(){n.manager.itemError(e),n.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t)}return e.data?{data:$n(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const n=new Pu(t);s=new Vu(n),s.setCrossOrigin(this.crossOrigin);for(let t=0,n=e.length;t<n;t++){const n=e[t],s=n.url;if(Array.isArray(s)){const e=[];for(let t=0,n=s.length;t<n;t++){const n=r(s[t]);null!==n&&(n instanceof HTMLImageElement?e.push(n):e.push(new ec(n.data,n.width,n.height)))}i[n.uuid]=new ui(e)}else{const e=r(n.url);i[n.uuid]=new ui(e)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(e){if("string"==typeof e){const n=e,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:t.resourcePath+n;return await i.loadAsync(s)}return e.data?{data:$n(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){i=new Vu(this.manager),i.setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t],r=i.url;if(Array.isArray(r)){const e=[];for(let t=0,n=r.length;t<n;t++){const n=r[t],i=await s(n);null!==i&&(i instanceof HTMLImageElement?e.push(i):e.push(new ec(i.data,i.width,i.height)))}n[i.uuid]=new ui(e)}else{const e=await s(i.url);n[i.uuid]=new ui(e)}}}return n}parseTextures(e,t){function n(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const i={};if(void 0!==e)for(let s=0,r=e.length;s<r;s++){const r=e[s];void 0===r.image&&console.warn('THREE.ObjectLoader: No "image" specified for',r.uuid),void 0===t[r.image]&&console.warn("THREE.ObjectLoader: Undefined image",r.image);const a=t[r.image],o=a.data;let l;Array.isArray(o)?(l=new Or,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new ec:new mi,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=r.uuid,void 0!==r.name&&(l.name=r.name),void 0!==r.mapping&&(l.mapping=n(r.mapping,md)),void 0!==r.offset&&l.offset.fromArray(r.offset),void 0!==r.repeat&&l.repeat.fromArray(r.repeat),void 0!==r.center&&l.center.fromArray(r.center),void 0!==r.rotation&&(l.rotation=r.rotation),void 0!==r.wrap&&(l.wrapS=n(r.wrap[0],fd),l.wrapT=n(r.wrap[1],fd)),void 0!==r.format&&(l.format=r.format),void 0!==r.type&&(l.type=r.type),void 0!==r.encoding&&(l.encoding=r.encoding),void 0!==r.minFilter&&(l.minFilter=n(r.minFilter,gd)),void 0!==r.magFilter&&(l.magFilter=n(r.magFilter,gd)),void 0!==r.anisotropy&&(l.anisotropy=r.anisotropy),void 0!==r.flipY&&(l.flipY=r.flipY),void 0!==r.premultiplyAlpha&&(l.premultiplyAlpha=r.premultiplyAlpha),void 0!==r.unpackAlignment&&(l.unpackAlignment=r.unpackAlignment),void 0!==r.userData&&(l.userData=r.userData),i[r.uuid]=l}return i}parseObject(e,t,n,i,s){let r,a,o;function l(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function c(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let i=0,s=e.length;i<s;i++){const s=e[i];void 0===n[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),t.push(n[s])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}function h(e){return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),i[e]}switch(e.type){case"Scene":r=new Sl,void 0!==e.background&&(Number.isInteger(e.background)?r.background=new li(e.background):r.background=h(e.background)),void 0!==e.environment&&(r.environment=h(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?r.fog=new wl(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(r.fog=new Ml(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new Pr(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(r.focus=e.focus),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.filmGauge&&(r.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(r.filmOffset=e.filmOffset),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new na(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new rd(e.color,e.intensity);break;case"DirectionalLight":r=new sd(e.color,e.intensity);break;case"PointLight":r=new nd(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new ad(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new Ju(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new ju(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=(new ld).fromJSON(e);break;case"SkinnedMesh":a=l(e.geometry),o=c(e.material),r=new Kl(a,o),void 0!==e.bindMode&&(r.bindMode=e.bindMode),void 0!==e.bindMatrix&&r.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(r.skeleton=e.skeleton);break;case"Mesh":a=l(e.geometry),o=c(e.material),r=new Sr(a,o);break;case"InstancedMesh":a=l(e.geometry),o=c(e.material);const t=e.count,n=e.instanceMatrix,i=e.instanceColor;r=new cc(a,o,t),r.instanceMatrix=new sc(new Float32Array(n.array),16),void 0!==i&&(r.instanceColor=new sc(new Float32Array(i.array),i.itemSize));break;case"LOD":r=new Xl;break;case"Line":r=new gc(l(e.geometry),c(e.material));break;case"LineLoop":r=new _c(l(e.geometry),c(e.material));break;case"LineSegments":r=new yc(l(e.geometry),c(e.material));break;case"PointCloud":case"Points":r=new Ec(l(e.geometry),c(e.material));break;case"Sprite":r=new Gl(c(e.material));break;case"Group":r=new pl;break;case"Bone":r=new Ql;break;default:r=new Ts}if(r.uuid=e.uuid,void 0!==e.name&&(r.name=e.name),void 0!==e.matrix?(r.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==e.position&&r.position.fromArray(e.position),void 0!==e.rotation&&r.rotation.fromArray(e.rotation),void 0!==e.quaternion&&r.quaternion.fromArray(e.quaternion),void 0!==e.scale&&r.scale.fromArray(e.scale)),void 0!==e.castShadow&&(r.castShadow=e.castShadow),void 0!==e.receiveShadow&&(r.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(r.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(r.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(r.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&r.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(r.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.frustumCulled&&(r.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(r.renderOrder=e.renderOrder),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.layers&&(r.layers.mask=e.layers),void 0!==e.children){const a=e.children;for(let e=0;e<a.length;e++)r.add(this.parseObject(a[e],t,n,i,s))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const n=t[e];r.animations.push(s[n])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(r.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const n=t[e],i=r.getObjectByProperty("uuid",n.object);void 0!==i&&r.addLevel(i,n.distance)}}return r}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}}))}}const md={UVMapping:ye,CubeReflectionMapping:_e,CubeRefractionMapping:be,EquirectangularReflectionMapping:Me,EquirectangularRefractionMapping:we,CubeUVReflectionMapping:Se},fd={RepeatWrapping:Te,ClampToEdgeWrapping:Ee,MirroredRepeatWrapping:Ae},gd={NearestFilter:Ce,NearestMipmapNearestFilter:Ne,NearestMipmapLinearFilter:Re,LinearFilter:Ie,LinearMipmapNearestFilter:De,LinearMipmapLinearFilter:ze};class xd extends Du{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Ru.get(e);if(void 0!==r)return s.manager.itemStart(e),setTimeout((function(){t&&t(r),s.manager.itemEnd(e)}),0),r;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(s.options,{colorSpaceConversion:"none"}))})).then((function(n){Ru.add(e,n),t&&t(n),s.manager.itemEnd(e)})).catch((function(t){i&&i(t),s.manager.itemError(e),s.manager.itemEnd(e)})),s.manager.itemStart(e)}}let vd;const yd={getContext:function(){return void 0===vd&&(vd=new(window.AudioContext||window.webkitAudioContext)),vd},setContext:function(e){vd=e}};class _d extends Du{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new Fu(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(function(n){try{const e=n.slice(0);yd.getContext().decodeAudioData(e,(function(e){t(e)}))}catch(t){i?i(t):console.error(t),s.manager.itemError(e)}}),n,i)}}class bd extends ld{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=(new li).set(e),s=(new li).set(t),r=new wi(i.r,i.g,i.b),a=new wi(s.r,s.g,s.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(r).sub(a).multiplyScalar(l)}}class Md extends ld{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=(new li).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const wd=new es,Sd=new es,Td=new es;class Ed{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Pr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Pr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Td.copy(e.projectionMatrix);const n=t.eyeSep/2,i=n*t.near/t.focus,s=t.near*Math.tan(Dn*t.fov*.5)/t.zoom;let r,a;Sd.elements[12]=-n,wd.elements[12]=n,r=-s*t.aspect+i,a=s*t.aspect+i,Td.elements[0]=2*t.near/(a-r),Td.elements[8]=(a+r)/(a-r),this.cameraL.projectionMatrix.copy(Td),r=-s*t.aspect-i,a=s*t.aspect-i,Td.elements[0]=2*t.near/(a-r),Td.elements[8]=(a+r)/(a-r),this.cameraR.projectionMatrix.copy(Td)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Sd),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(wd)}}class Ad{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Cd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Cd();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Cd(){return("undefined"==typeof performance?Date:performance).now()}const Nd=new wi,Ld=new Mi,Rd=new wi,Pd=new wi;class Id extends Ts{constructor(){super(),this.type="AudioListener",this.context=yd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ad}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Nd,Ld,Rd),Pd.set(0,0,-1).applyQuaternion(Ld),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Nd.x,e),t.positionY.linearRampToValueAtTime(Nd.y,e),t.positionZ.linearRampToValueAtTime(Nd.z,e),t.forwardX.linearRampToValueAtTime(Pd.x,e),t.forwardY.linearRampToValueAtTime(Pd.y,e),t.forwardZ.linearRampToValueAtTime(Pd.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)}else t.setPosition(Nd.x,Nd.y,Nd.z),t.setOrientation(Pd.x,Pd.y,Pd.z,n.x,n.y,n.z)}}class Dd extends Ts{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Od=new wi,zd=new Mi,Fd=new wi,Ud=new wi;class Bd extends Dd{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Od,zd,Fd),Ud.set(0,0,1).applyQuaternion(zd);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Od.x,e),t.positionY.linearRampToValueAtTime(Od.y,e),t.positionZ.linearRampToValueAtTime(Od.z,e),t.orientationX.linearRampToValueAtTime(Ud.x,e),t.orientationY.linearRampToValueAtTime(Ud.y,e),t.orientationZ.linearRampToValueAtTime(Ud.z,e)}else t.setPosition(Od.x,Od.y,Od.z),t.setOrientation(Ud.x,Ud.y,Ud.z)}}class Vd{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class kd{constructor(e,t,n){let i,s,r;switch(this.binding=e,this.valueSize=n,t){case"quaternion":i=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let r=this.cumulativeWeight;if(0===r){for(let e=0;e!==i;++e)n[s+e]=n[e];r=t}else{r+=t;const e=t/r;this._mixBufferRegion(n,s,0,e,i)}this.cumulativeWeight=r}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const e=t*this._origIndex;this._mixBufferRegion(n,i,e,1-s,t)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let e=t,s=t+t;e!==s;++e)if(n[e]!==n[e+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let e=n,s=i;e!==s;++e)t[e]=t[i+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let i=0;i!==s;++i)e[t+i]=e[n+i]}_slerp(e,t,n,i){Mi.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const r=this._workIndex*s;Mi.multiplyQuaternionsFlat(e,r,e,t,e,n),Mi.slerpFlat(e,t,e,t,e,r,i)}_lerp(e,t,n,i,s){const r=1-i;for(let a=0;a!==s;++a){const s=t+a;e[s]=e[s]*r+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let r=0;r!==s;++r){const s=t+r;e[s]=e[s]+e[n+r]*i}}}const Gd=new RegExp("[\\[\\]\\.:\\/]","g"),Hd="[^\\[\\]\\.:\\/]",Wd="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",jd=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Hd)+/(WCOD+)?/.source.replace("WCOD",Wd)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Hd)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Hd)+"$"),Xd=["material","materials","bones","map"];class qd{constructor(e,t,n){this.path=t,this.parsedPath=n||qd.parseTrackName(t),this.node=qd.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new qd.Composite(e,t,n):new qd(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Gd,"")}static parseTrackName(e){const t=jd.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const e=n.nodeName.substring(i+1);-1!==Xd.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const s=e[i];if(s.name===t||s.uuid===t)return s;const r=n(s.children);if(r)return r}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=qd.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}const r=e[i];if(void 0===r){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e)}let a=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[s]&&(s=e.morphTargetDictionary[s])}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else void 0!==r.fromArray&&void 0!==r.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}qd.Composite=class{constructor(e,t,n){const i=n||qd.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},qd.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},qd.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},qd.prototype.GetterByBindingType=[qd.prototype._getValue_direct,qd.prototype._getValue_array,qd.prototype._getValue_arrayElement,qd.prototype._getValue_toArray],qd.prototype.SetterByBindingTypeAndVersioning=[[qd.prototype._setValue_direct,qd.prototype._setValue_direct_setNeedsUpdate,qd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[qd.prototype._setValue_array,qd.prototype._setValue_array_setNeedsUpdate,qd.prototype._setValue_array_setMatrixWorldNeedsUpdate],[qd.prototype._setValue_arrayElement,qd.prototype._setValue_arrayElement_setNeedsUpdate,qd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[qd.prototype._setValue_fromArray,qd.prototype._setValue_fromArray_setNeedsUpdate,qd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Yd{constructor(){this.isAnimationObjectGroup=!0,this.uuid=zn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,r=s.length;let a,o=e.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=t[u];if(void 0===d){d=o++,t[u]=d,e.push(h);for(let e=0,t=r;e!==t;++e)s[e].push(new qd(h,n[e],i[e]))}else if(d<l){a=e[d];const o=--l,c=e[o];t[c.uuid]=d,e[d]=c,t[u]=o,e[o]=h;for(let e=0,t=r;e!==t;++e){const t=s[e],r=t[o];let a=t[d];t[d]=r,void 0===a&&(a=new qd(h,n[e],i[e])),t[o]=a}}else e[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const a=arguments[r],o=a.uuid,l=t[o];if(void 0!==l&&l>=s){const r=s++,c=e[r];t[c.uuid]=l,e[l]=c,t[o]=r,e[r]=a;for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[r],s=t[l];t[l]=i,t[r]=s}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,r=e.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=t[o];if(void 0!==l)if(delete t[o],l<s){const a=--s,o=e[a],c=--r,h=e[c];t[o.uuid]=l,e[l]=o,t[h.uuid]=a,e[a]=h,e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[a],s=t[c];t[l]=i,t[a]=s,t.pop()}}else{const s=--r,a=e[s];s>0&&(t[a.uuid]=l),e[l]=a,e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e];t[l]=t[s],t.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(void 0!==i)return s[i];const r=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=s.length,n[e]=i,r.push(e),a.push(t),s.push(h);for(let n=c,i=o.length;n!==i;++n){const i=o[n];h[n]=new qd(i,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const i=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,o=r[a];t[e[a]]=n,r[n]=o,r.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class Zd{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,r=s.length,a=new Array(r),o={endingStart:Bt,endingEnd:Bt};for(let e=0;e!==r;++e){const t=s[e].createInterpolant(null);a[e]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Dt,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,i=e._clip.duration,s=i/n,r=n/i;e.warp(1,s,t),this.warp(r,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,r=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,o[1]=s+n,l[0]=e/r,l[1]=t/r,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled)return void this._updateWeight(e);const s=this._startTime;if(null!==s){const i=(e-s)*n;i<0||0===n?t=0:(this._startTime=null,t=n*i)}t*=this._updateTimeScale(e);const r=this._updateTime(t),a=this._updateWeight(e);if(a>0){const e=this._interpolants,t=this._propertyBindings;if(this.blendMode===Ht)for(let n=0,i=e.length;n!==i;++n)e[n].evaluate(r),t[n].accumulateAdditive(a);else for(let n=0,s=e.length;n!==s;++n)e[n].evaluate(r),t[n].accumulate(i,a)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const r=n===Ot;if(0===e)return-1===s?i:r&&1==(1&s)?t-i:i;if(n===It){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===s&&(e>=0?(s=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),i>=t||i<0){const n=Math.floor(i/t);i-=t*n,s+=Math.abs(n);const a=this.repetitions-s;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){const t=e<0;this._setEndings(t,!t,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(r&&1==(1&s))return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Vt,i.endingEnd=Vt):(i.endingStart=e?this.zeroSlopeAtStart?Vt:Bt:kt,i.endingEnd=t?this.zeroSlopeAtEnd?Vt:Bt:kt)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let r=this._weightInterpolant;null===r&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const a=r.parameterPositions,o=r.sampleValues;return a[0]=s,o[0]=t,a[1]=s+e,o[1]=n,this}}const $d=new Float32Array(1);class Jd extends Rn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,r=e._propertyBindings,a=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let e=0;e!==s;++e){const s=i[e],l=s.name;let h=c[l];if(void 0!==h)++h.referenceCount,r[e]=h;else{if(h=r[e],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,l));continue}const i=t&&t._propertyBindings[e].binding.parsedPath;h=new kd(qd.create(n,l,i),s.ValueTypeName,s.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,l),r[e]=h}a[e].resultBuffer=h.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let r=s[t];if(void 0===r)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=r;else{const t=r.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=i.length,i.push(e),r.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,r=this._actionsByClip,a=r[s],o=a.knownActions,l=o[o.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete r[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let r=i[t];void 0===r&&(r={},i[t]=r),r[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,r=this._bindingsByRootAndName,a=r[i],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[s],0===Object.keys(a).length&&delete r[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new yu(new Float32Array(2),new Float32Array(2),1,$d),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let r="string"==typeof e?Nu.findByName(i,e):e;const a=null!==r?r.uuid:e,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==r?r.blendMode:Gt),void 0!==o){const e=o.actionByRoot[s];if(void 0!==e&&e.blendMode===n)return e;l=o.knownActions[0],null===r&&(r=l._clip)}if(null===r)return null;const c=new Zd(this,r,t,n);return this._bindAction(c,l),this._addInactiveAction(c,a,s),c}existingAction(e,t){const n=t||this._root,i=n.uuid,s="string"==typeof e?Nu.findByName(n,e):e,r=s?s.uuid:e,a=this._actionsByClip[r];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),r=this._accuIndex^=1;for(let a=0;a!==n;++a)t[a]._update(i,e,s,r);const a=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e)a[e].apply(r);return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(void 0!==s){const e=s.knownActions;for(let n=0,i=e.length;n!==i;++n){const i=e[n];this._deactivateAction(i);const s=i._cacheIndex,r=t[t.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,r._cacheIndex=s,t[s]=r,t.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const i=n[e].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[t];if(void 0!==i)for(const e in i){const t=i[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Kd{constructor(e){this.value=e}clone(){return new Kd(void 0===this.value.clone?this.value:this.value.clone())}}let Qd=0;class ep extends Rn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Qd++}),this.name="",this.usage=yn,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let e=0,n=t.length;e<n;e++)this.uniforms.push(t[e].clone());return this}clone(){return(new this.constructor).copy(this)}}class tp extends Tl{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class np{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class ip{constructor(e,t,n=0,i=1/0){this.ray=new Qi(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new us,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return rp(e,this,n,t),n.sort(sp),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)rp(e[i],this,n,t);return n.sort(sp),n}}function sp(e,t){return e.distance-t.distance}function rp(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===i){const i=e.children;for(let e=0,s=i.length;e<s;e++)rp(i[e],t,n,!0)}}class ap{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Fn(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class op{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}}const lp=new Xn;class cp{constructor(e=new Xn(1/0,1/0),t=new Xn(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=lp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return lp.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const hp=new wi,up=new wi;class dp{constructor(e=new wi,t=new wi){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){hp.subVectors(e,this.start),up.subVectors(this.end,this.start);const n=up.dot(up);let i=up.dot(hp)/n;return t&&(i=Fn(i,0,1)),i}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const pp=new wi;class mp extends Ts{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new ar,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,n=32;e<n;e++,t++){const s=e/n*Math.PI*2,r=t/n*Math.PI*2;i.push(Math.cos(s),Math.sin(s),1,Math.cos(r),Math.sin(r),1)}n.setAttribute("position",new Js(i,3));const s=new hc({fog:!1,toneMapped:!1});this.cone=new yc(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),pp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(pp),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const fp=new wi,gp=new es,xp=new es;class vp extends yc{constructor(e){const t=yp(e),n=new ar,i=[],s=[],r=new li(0,0,1),a=new li(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];n.parent&&n.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(r.r,r.g,r.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Js(i,3)),n.setAttribute("color",new Js(s,3)),super(n,new hc({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");xp.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<t.length;e++){const s=t[e];s.parent&&s.parent.isBone&&(gp.multiplyMatrices(xp,s.matrixWorld),fp.setFromMatrixPosition(gp),i.setXYZ(n,fp.x,fp.y,fp.z),gp.multiplyMatrices(xp,s.parent.matrixWorld),fp.setFromMatrixPosition(gp),i.setXYZ(n+1,fp.x,fp.y,fp.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function yp(e){const t=[];!0===e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,yp(e.children[n]));return t}class _p extends Sr{constructor(e,t,n){super(new Xh(t,4,2),new Bs({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const bp=new wi,Mp=new li,wp=new li;class Sp extends Ts{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Hh(t);i.rotateY(.5*Math.PI),this.material=new Bs({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),r=new Float32Array(3*s.count);i.setAttribute("color",new Gs(r,3)),this.add(new Sr(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Mp.copy(this.light.color),wp.copy(this.light.groundColor);for(let e=0,n=t.count;e<n;e++){const i=e<n/2?Mp:wp;t.setXYZ(e,i.r,i.g,i.b)}t.needsUpdate=!0}e.lookAt(bp.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Tp extends yc{constructor(e=10,t=10,n=4473924,i=8947848){n=new li(n),i=new li(i);const s=t/2,r=e/t,a=e/2,o=[],l=[];for(let e=0,c=0,h=-a;e<=t;e++,h+=r){o.push(-a,0,h,a,0,h),o.push(h,0,-a,h,0,a);const t=e===s?n:i;t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3}const c=new ar;c.setAttribute("position",new Js(o,3)),c.setAttribute("color",new Js(l,3)),super(c,new hc({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ep extends yc{constructor(e=10,t=16,n=8,i=64,s=4473924,r=8947848){s=new li(s),r=new li(r);const a=[],o=[];if(t>1)for(let n=0;n<t;n++){const i=n/t*(2*Math.PI),l=Math.sin(i)*e,c=Math.cos(i)*e;a.push(0,0,0),a.push(l,0,c);const h=1&n?s:r;o.push(h.r,h.g,h.b),o.push(h.r,h.g,h.b)}for(let t=0;t<n;t++){const l=1&t?s:r,c=e-e/n*t;for(let e=0;e<i;e++){let t=e/i*(2*Math.PI),n=Math.sin(t)*c,s=Math.cos(t)*c;a.push(n,0,s),o.push(l.r,l.g,l.b),t=(e+1)/i*(2*Math.PI),n=Math.sin(t)*c,s=Math.cos(t)*c,a.push(n,0,s),o.push(l.r,l.g,l.b)}}const l=new ar;l.setAttribute("position",new Js(a,3)),l.setAttribute("color",new Js(o,3)),super(l,new hc({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Ap=new wi,Cp=new wi,Np=new wi;class Lp extends Ts{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let i=new ar;i.setAttribute("position",new Js([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new hc({fog:!1,toneMapped:!1});this.lightPlane=new gc(i,s),this.add(this.lightPlane),i=new ar,i.setAttribute("position",new Js([0,0,0,0,0,1],3)),this.targetLine=new gc(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Ap.setFromMatrixPosition(this.light.matrixWorld),Cp.setFromMatrixPosition(this.light.target.matrixWorld),Np.subVectors(Cp,Ap),this.lightPlane.lookAt(Cp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Cp),this.targetLine.scale.z=Np.length()}}const Rp=new wi,Pp=new Rr;class Ip extends yc{constructor(e){const t=new ar,n=new hc({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],r={};function a(e,t){o(e),o(t)}function o(e){i.push(0,0,0),s.push(0,0,0),void 0===r[e]&&(r[e]=[]),r[e].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),t.setAttribute("position",new Js(i,3)),t.setAttribute("color",new Js(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const l=new li(16755200),c=new li(16711680),h=new li(43775),u=new li(16777215),d=new li(3355443);this.setColors(l,c,h,u,d)}setColors(e,t,n,i,s){const r=this.geometry.getAttribute("color");r.setXYZ(0,e.r,e.g,e.b),r.setXYZ(1,e.r,e.g,e.b),r.setXYZ(2,e.r,e.g,e.b),r.setXYZ(3,e.r,e.g,e.b),r.setXYZ(4,e.r,e.g,e.b),r.setXYZ(5,e.r,e.g,e.b),r.setXYZ(6,e.r,e.g,e.b),r.setXYZ(7,e.r,e.g,e.b),r.setXYZ(8,e.r,e.g,e.b),r.setXYZ(9,e.r,e.g,e.b),r.setXYZ(10,e.r,e.g,e.b),r.setXYZ(11,e.r,e.g,e.b),r.setXYZ(12,e.r,e.g,e.b),r.setXYZ(13,e.r,e.g,e.b),r.setXYZ(14,e.r,e.g,e.b),r.setXYZ(15,e.r,e.g,e.b),r.setXYZ(16,e.r,e.g,e.b),r.setXYZ(17,e.r,e.g,e.b),r.setXYZ(18,e.r,e.g,e.b),r.setXYZ(19,e.r,e.g,e.b),r.setXYZ(20,e.r,e.g,e.b),r.setXYZ(21,e.r,e.g,e.b),r.setXYZ(22,e.r,e.g,e.b),r.setXYZ(23,e.r,e.g,e.b),r.setXYZ(24,t.r,t.g,t.b),r.setXYZ(25,t.r,t.g,t.b),r.setXYZ(26,t.r,t.g,t.b),r.setXYZ(27,t.r,t.g,t.b),r.setXYZ(28,t.r,t.g,t.b),r.setXYZ(29,t.r,t.g,t.b),r.setXYZ(30,t.r,t.g,t.b),r.setXYZ(31,t.r,t.g,t.b),r.setXYZ(32,n.r,n.g,n.b),r.setXYZ(33,n.r,n.g,n.b),r.setXYZ(34,n.r,n.g,n.b),r.setXYZ(35,n.r,n.g,n.b),r.setXYZ(36,n.r,n.g,n.b),r.setXYZ(37,n.r,n.g,n.b),r.setXYZ(38,i.r,i.g,i.b),r.setXYZ(39,i.r,i.g,i.b),r.setXYZ(40,s.r,s.g,s.b),r.setXYZ(41,s.r,s.g,s.b),r.setXYZ(42,s.r,s.g,s.b),r.setXYZ(43,s.r,s.g,s.b),r.setXYZ(44,s.r,s.g,s.b),r.setXYZ(45,s.r,s.g,s.b),r.setXYZ(46,s.r,s.g,s.b),r.setXYZ(47,s.r,s.g,s.b),r.setXYZ(48,s.r,s.g,s.b),r.setXYZ(49,s.r,s.g,s.b),r.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap;Pp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Dp("c",t,e,Pp,0,0,-1),Dp("t",t,e,Pp,0,0,1),Dp("n1",t,e,Pp,-1,-1,-1),Dp("n2",t,e,Pp,1,-1,-1),Dp("n3",t,e,Pp,-1,1,-1),Dp("n4",t,e,Pp,1,1,-1),Dp("f1",t,e,Pp,-1,-1,1),Dp("f2",t,e,Pp,1,-1,1),Dp("f3",t,e,Pp,-1,1,1),Dp("f4",t,e,Pp,1,1,1),Dp("u1",t,e,Pp,.7,1.1,-1),Dp("u2",t,e,Pp,-.7,1.1,-1),Dp("u3",t,e,Pp,0,2,-1),Dp("cf1",t,e,Pp,-1,0,1),Dp("cf2",t,e,Pp,1,0,1),Dp("cf3",t,e,Pp,0,-1,1),Dp("cf4",t,e,Pp,0,1,1),Dp("cn1",t,e,Pp,-1,0,-1),Dp("cn2",t,e,Pp,1,0,-1),Dp("cn3",t,e,Pp,0,-1,-1),Dp("cn4",t,e,Pp,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Dp(e,t,n,i,s,r,a){Rp.set(s,r,a).unproject(i);const o=t[e];if(void 0!==o){const e=n.getAttribute("position");for(let t=0,n=o.length;t<n;t++)e.setXYZ(o[t],Rp.x,Rp.y,Rp.z)}}const Op=new Ei;class zp extends yc{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),s=new ar;s.setIndex(new Gs(n,1)),s.setAttribute("position",new Gs(i,3)),super(s,new hc({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Op.setFromObject(this.object),Op.isEmpty())return;const t=Op.min,n=Op.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Fp extends yc{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new ar;i.setIndex(new Gs(n,1)),i.setAttribute("position",new Js([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new hc({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Up extends gc{constructor(e,t=1,n=16776960){const i=n,s=new ar;s.setAttribute("position",new Js([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),s.computeBoundingSphere(),super(s,new hc({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const r=new ar;r.setAttribute("position",new Js([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new Sr(r,new Bs({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Bp=new wi;let Vp,kp;class Gp extends Ts{constructor(e=new wi(0,0,1),t=new wi(0,0,0),n=1,i=16776960,s=.2*n,r=.2*s){super(),this.type="ArrowHelper",void 0===Vp&&(Vp=new ar,Vp.setAttribute("position",new Js([0,0,0,0,1,0],3)),kp=new ih(0,.5,1,5,1),kp.translate(0,-.5,0)),this.position.copy(t),this.line=new gc(Vp,new hc({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Sr(kp,new Bs({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,r)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Bp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Bp,t)}}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Hp extends yc{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new ar;n.setAttribute("position",new Js(t,3)),n.setAttribute("color",new Js([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(n,new hc({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,n){const i=new li,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Wp{constructor(){this.type="ShapePath",this.color=new li,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Qc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,r){return this.currentPath.bezierCurveTo(e,t,n,i,s,r),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){const n=t.length;let i=!1;for(let s=n-1,r=0;r<n;s=r++){let n=t[s],a=t[r],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=t[r],o=-o,a=t[s],l=-l),e.y<n.y||e.y>a.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{const t=l*(e.x-n.x)-o*(e.y-n.y);if(0===t)return!0;if(t<0)continue;i=!i}}else{if(e.y!==n.y)continue;if(a.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=a.x)return!0}}return i}const n=Fh.isClockWise,i=this.subPaths;if(0===i.length)return[];let s,r,a;const o=[];if(1===i.length)return r=i[0],a=new dh,a.curves=r.curves,o.push(a),o;let l=!n(i[0].getPoints());l=e?!l:l;const c=[],h=[];let u,d,p=[],m=0;h[m]=void 0,p[m]=[];for(let t=0,a=i.length;t<a;t++)r=i[t],u=r.getPoints(),s=n(u),s=e?!s:s,s?(!l&&h[m]&&m++,h[m]={s:new dh,p:u},h[m].s.curves=r.curves,l&&m++,p[m]=[]):p[m].push({h:r,p:u[0]});if(!h[0])return function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n],s=new dh;s.curves=i.curves,t.push(s)}return t}(i);if(h.length>1){let e=!1,n=0;for(let e=0,t=h.length;e<t;e++)c[e]=[];for(let i=0,s=h.length;i<s;i++){const s=p[i];for(let r=0;r<s.length;r++){const a=s[r];let o=!0;for(let s=0;s<h.length;s++)t(a.p,h[s].p)&&(i!==s&&n++,o?(o=!1,c[s].push(a)):e=!0);o&&c[i].push(a)}}n>0&&!1===e&&(p=c)}for(let e=0,t=h.length;e<t;e++){a=h[e].s,o.push(a),d=p[e];for(let e=0,t=d.length;e<t;e++)a.holes.push(d[e].h)}return o}}const jp=Xp();function Xp(){const e=new ArrayBuffer(4),t=new Float32Array(e),n=new Uint32Array(e),i=new Uint32Array(512),s=new Uint32Array(512);for(let e=0;e<256;++e){const t=e-127;t<-27?(i[e]=0,i[256|e]=32768,s[e]=24,s[256|e]=24):t<-14?(i[e]=1024>>-t-14,i[256|e]=1024>>-t-14|32768,s[e]=-t-1,s[256|e]=-t-1):t<=15?(i[e]=t+15<<10,i[256|e]=t+15<<10|32768,s[e]=13,s[256|e]=13):t<128?(i[e]=31744,i[256|e]=64512,s[e]=24,s[256|e]=24):(i[e]=31744,i[256|e]=64512,s[e]=13,s[256|e]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let e=1;e<1024;++e){let t=e<<13,n=0;for(;0==(8388608&t);)t<<=1,n-=8388608;t&=-8388609,n+=947912704,r[e]=t|n}for(let e=1024;e<2048;++e)r[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)a[e]=e<<23;a[31]=1199570944,a[32]=2147483648;for(let e=33;e<63;++e)a[e]=2147483648+(e-32<<23);a[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(o[e]=1024);return{floatView:t,uint32View:n,baseTable:i,shiftTable:s,mantissaTable:r,exponentTable:a,offsetTable:o}}var qp=Object.freeze({__proto__:null,toHalfFloat:function(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=Fn(e,-65504,65504),jp.floatView[0]=e;const t=jp.uint32View[0],n=t>>23&511;return jp.baseTable[n]+((8388607&t)>>jp.shiftTable[n])},fromHalfFloat:function(e){const t=e>>10;return jp.uint32View[0]=jp.mantissaTable[jp.offsetTable[t]+(1023&e)]+jp.exponentTable[t],jp.floatView[0]}});function Yp(){console.error("THREE.ImmediateRenderObject has been removed.")}class Zp extends gi{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class $p extends xi{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class Jp extends yi{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}class Kp extends Er{constructor(e,t,n,i,s,r){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,r)}}class Qp extends th{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class em extends nh{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class tm extends sh{constructor(e,t,n,i,s,r,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,r,a)}}class nm extends ih{constructor(e,t,n,i,s,r,a,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,r,a,o)}}class im extends ah{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class sm extends Vh{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class rm extends Gh{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class am extends eh{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class om extends Hh{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class lm extends Xr{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class cm extends rh{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class hm extends Wh{constructor(e,t,n,i,s,r){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,r)}}class um extends jh{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class dm extends Xh{constructor(e,t,n,i,s,r,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,r,a)}}class pm extends qh{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class mm extends Yh{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class fm extends Zh{constructor(e,t,n,i,s,r){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,r)}}class gm extends $h{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:_}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=_);class xm{constructor(e){this.Engine=e.Engine,this.Proxy=e,xm.prototype.$num++}async onBuild(){}async onRemoval(){}onUpdate(e,t){}onAnimUpdate(e,t){}addToProxy(e){this.Proxy[e]=this[e]}update(e,t,n){this.onUpdate(e,t),n&&this.onAnimUpdate(e,t)}}xm.prototype.$name="ECSComponent",xm.prototype.$num=0,xm.prototype.$requires=[],xm.prototype.$isECSComponent=!0;class vm extends xm{constructor(e){super(e),this.objVar="Object3D"}addPosition(e){this[this.objVar].position.add(e)}addRotation(e){this[this.objVar].rotation.x+=e.x,this[this.objVar].rotation.y+=e.y,this[this.objVar].rotation.z+=e.z}addScale(e){e instanceof wi?this[this.objVar].scale.add(e):this[this.objVar].scale.addScalar(e)}addTo(e){e.add(this[this.objVar])}get(){return this[this.objVar]}async onRemoval(){this.removeFromParent()}removeFromParent(){this[this.objVar].parent&&this[this.objVar].parent.remove(this[this.objVar])}set(e){this[this.objVar]=e}setParent(e){this.removeFromParent(),this.addTo(e)}setPosition(e){this[this.objVar].position.copy(e)}setRotation(e){this[this.objVar].rotation.x=e.x,this[this.objVar].rotation.y=e.y,this[this.objVar].rotation.z=e.z}setScale(e){e instanceof wi?this[this.objVar].scale.copy(e):this[this.objVar].scale.setScalar(e)}}vm.prototype.$name="ThreeObject";class ym extends vm{constructor(e,t={}){super(e),this.aspect=v(t,"aspect",1),this.displayHelper=v(t,"displayHelper",!0),this.far=v(t,"far",2e3),this.fov=v(t,"fov",25),this.name=v(t,"name",`Camera#${ym.prototype.$num}`),this.near=v(t,"near",.01),this.objVar="Camera",this.Parent=v(t,"parent",null),this.Position=v(t,"position",new wi),this.Target=v(t,"target",null),this.Type=v(t,"type",Pr)}get(){return this.Camera}async onBuild(){const e=this.Target?[this.Target.x,this.Target.y,this.Target.z]:[0,0,0];this.Camera=await this.Engine.Managers.Camera.buildCamera(this.name,this.Type,this.fov,this.aspect,this.near,this.far),this.Camera.position.copy(this.Position),this.Camera.lookAt(...e),this.Camera.helper=new Ip(this.Camera),this.Parent&&this.setParent(this.Parent)}update(e,t){this.Target&&this.Camera.lookAt(this.Target.x,this.Target.y,this.Target.z)}}ym.prototype.$name="Camera";class _m{constructor(e,t,n={}){this.name=t||`State#${_m.prototype.$num}`,this.Manager=e,this.displayed=v(n,"displayed",!0),this.uuid=Sm(),this.Element=document.createElement("state"),this.Element.id=this.uuid,this.Element.style.position="absolute",this.Element.style.left="0px",this.Element.style.top="0px",this.Element.style.width="100vw",this.Element.style.height="100vh",this.Element.style.display="inline-block",this.Element.style.pointerEvents="none",this.Element.setAttribute("name",this.name),this.Manager.Elements.Main.appendChild(this.Element),this.displayed||this.hide(),_m.prototype.$num++}appendChild(e){this.Element.appendChild(e)}getElement(){return this.Element}getName(){return this.name}getUUID(){return this.uuid}async hide(e=0){setTimeout((()=>{this.Element.style.display="none",this.displayed=!1}),1e3*e)}async show(e=0){setTimeout((()=>{this.Element.style.display="inline-block",this.displayed=!0}),1e3*e)}}function bm(e,t,n={}){return new _m(e,t,n)}_m.prototype.$num=0;const Mm=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function wm(e,t,n){return Math.sin(e)*t+n}function Sm(){const e=Mm,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0,s=4294967295*Math.random()|0;return(e[255&t]+e[t>>8&255]+e[t>>16&255]+e[t>>24&255]+"-"+e[255&n]+e[n>>8&255]+"-"+e[n>>16&15|64]+e[n>>24&255]+"-"+e[63&i|128]+e[i>>8&255]+"-"+e[i>>16&255]+e[i>>24&255]+e[255&s]+e[s>>8&255]+e[s>>16&255]+e[s>>24&255]).toLowerCase()}function Tm(e,t){return e&&!t?Math.random()*(e-0+1)+0:e&&t?Math.random()*(t-e+1)+e:Math.random()}function Em(){return 16777215*Math.random()}function Am(){return new li(Em())}class Cm{constructor(){this.active=[],this.Collection={}}activate(e,t=0){setTimeout((()=>{this.active.includes(e)||(this.active.push(e),this.Collection[e].active=!0)}),1e3*t)}add(e,t){this.Collection[e]=t,this.Collection[e].active&&this.activate(e)}check(e){return!!this.Collection[e]}deactivate(e,t=0){setTimeout((()=>{this.active.includes(e)&&(m(this.active,e),this.Collection[e].active=!1)}),1e3*t)}get(e){return this.Collection[e]}remove(e){this.check(e)&&(this.deactivate(e),delete this.Collection[e])}}class Nm extends xm{constructor(e,t={}){super(e),this.color=v(t,"color",16777215),this.intensity=v(t,"intensity",1),this.Parent=v(t,"parent",null),this.Position=v(t,"position",new wi(0,100,0)),this.Light=new sd(this.color,this.intensity),this.Parent&&this.addTo(this.Parent)}addTo(e){this.Parent=e,this.Parent.add(this.Light)}getLight(){return this.Light}async onRemoval(){this.removeFromParent()}removeFromParent(){this.Parent&&this.Parent.remove(this.Light)}setColor(e=16777215){this.color=e instanceof li?e:new li(e)}setIntensity(e){this.intensity=e}setParent(e){this.Parent&&this.Parent.remove(this.Light),this.addTo(e)}}Nm.prototype.$name="DirectionalLight";class Lm extends vm{constructor(e,t,n,i){super(e),this.count=i,this.dummies=[],this.objVar="Mesh",this.Geometry=t,this.Material=n,this.Mesh=new cc(this.Geometry,this.Material,this.count);for(let e=0;e<this.count;e++)this.dummies.push(new Ts)}addInstancePosition(e,t){this.dummies[e].position.add(t),this.dummies[e].updateMatrix(),this.Mesh.setMatrixAt(e,this.dummies[e].matrix),this.updateMatrix()}addInstanceRotation(e,t){this.dummies[e].rotation.x+=t.x,this.dummies[e].rotation.y+=t.y,this.dummies[e].rotation.z+=t.z,this.dummies[e].updateMatrix(),this.Mesh.setMatrixAt(e,this.dummies[e].matrix),this.updateMatrix()}addInstanceScale(e,t){t instanceof wi?this.dummies[e].scale.add(t):this.dummies[e].scale.addScalar(t),this.dummies[e].updateMatrix(),this.Mesh.setMatrixAt(e,this.dummies[e].matrix),this.updateMatrix()}getGeometry(){return this.Mesh.geometry}getMaterial(){return this.Mesh.material}setGeometry(e){this.Mesh.geometry=e}setInstancePosition(e,t){this.dummies[e].position.copy(t),this.dummies[e].updateMatrix(),this.Mesh.setMatrixAt(e,this.dummies[e].matrix),this.updateMatrix()}setInstanceRotation(e,t){this.dummies[e].rotation.x=t.x,this.dummies[e].rotation.y=t.y,this.dummies[e].rotation.z=t.z,this.dummies[e].updateMatrix(),this.Mesh.setMatrixAt(e,this.dummies[e].matrix),this.updateMatrix()}setInstanceScale(e,t){t instanceof wi?this.dummies[e].scale.copy(t):this.dummies[e].scale.setScalar(t),this.dummies[e].updateMatrix(),this.Mesh.setMatrixAt(e,this.dummies[e].matrix),this.updateMatrix()}setMaterial(e){this.Mesh.material=e}updateMatrix(){this.Mesh.instanceMatrix.needsUpdate=!0}}Lm.prototype.$name="InstancedMesh";class Rm extends xm{constructor(e,t){super(e),this.Mesh=this.Proxy.getComponent("InstancedMesh"),this.countCubeRoot=Math.cbrt(this.Mesh.count);const n=new wi;let i=0,s=-this.countCubeRoot*t.x,r=-this.countCubeRoot*t.y,a=-this.countCubeRoot*t.z;for(let e=0;e<this.countCubeRoot;e++){r=-this.countCubeRoot*t.y;for(let e=0;e<this.countCubeRoot;e++){s=-this.countCubeRoot*t.x;for(let e=0;e<this.countCubeRoot;e++)n.set(s,r,a),this.Mesh.setInstancePosition(i,n),i++,s+=2*t.x;r+=2*t.y}a+=2*t.z}}}Rm.prototype.$name="InstancedMeshBox";class Pm extends vm{constructor(e,t,n){super(e),this.objVar="Mesh",this.Mesh=new Sr(t,n)}getGeometry(){return this.Mesh.geometry}getMaterial(){return this.Mesh.material}setGeometry(e){this.Mesh.geometry=e}setMaterial(e){this.Mesh.material=e}}Pm.prototype.$name="Mesh";const Im={type:"change"},Dm={type:"start"},Om={type:"end"};class zm extends Rn{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new wi,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:b.ROTATE,MIDDLE:b.DOLLY,RIGHT:b.PAN},this.touches={ONE:M.ROTATE,TWO:M.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",j),this._domElementKeyEvents=e},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Im),n.update(),s=i.NONE},this.update=function(){const t=new wi,u=(new Mi).setFromUnitVectors(e.up,new wi(0,1,0)),d=u.clone().invert(),p=new wi,m=new Mi,f=2*Math.PI;return function(){const e=n.object.position;t.copy(e).sub(n.target),t.applyQuaternion(u),a.setFromVector3(t),n.autoRotate&&s===i.NONE&&T(2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(a.theta+=o.theta*n.dampingFactor,a.phi+=o.phi*n.dampingFactor):(a.theta+=o.theta,a.phi+=o.phi);let g=n.minAzimuthAngle,x=n.maxAzimuthAngle;return isFinite(g)&&isFinite(x)&&(g<-Math.PI?g+=f:g>Math.PI&&(g-=f),x<-Math.PI?x+=f:x>Math.PI&&(x-=f),a.theta=g<=x?Math.max(g,Math.min(x,a.theta)):a.theta>(g+x)/2?Math.max(g,a.theta):Math.min(x,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=l,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),!0===n.enableDamping?n.target.addScaledVector(c,n.dampingFactor):n.target.add(c),t.setFromSpherical(a),t.applyQuaternion(d),e.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(o.theta*=1-n.dampingFactor,o.phi*=1-n.dampingFactor,c.multiplyScalar(1-n.dampingFactor)):(o.set(0,0,0),c.set(0,0,0)),l=1,!!(h||p.distanceToSquared(n.object.position)>r||8*(1-m.dot(n.object.quaternion))>r)&&(n.dispatchEvent(Im),p.copy(n.object.position),m.copy(n.object.quaternion),h=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",X),n.domElement.removeEventListener("pointerdown",V),n.domElement.removeEventListener("pointercancel",H),n.domElement.removeEventListener("wheel",W),n.domElement.removeEventListener("pointermove",k),n.domElement.removeEventListener("pointerup",G),null!==n._domElementKeyEvents&&n._domElementKeyEvents.removeEventListener("keydown",j)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const r=1e-6,a=new ap,o=new ap;let l=1;const c=new wi;let h=!1;const u=new Xn,d=new Xn,p=new Xn,m=new Xn,f=new Xn,g=new Xn,x=new Xn,v=new Xn,y=new Xn,_=[],w={};function S(){return Math.pow(.95,n.zoomSpeed)}function T(e){o.theta-=e}function E(e){o.phi-=e}const A=function(){const e=new wi;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),c.add(e)}}(),C=function(){const e=new wi;return function(t,i){!0===n.screenSpacePanning?e.setFromMatrixColumn(i,1):(e.setFromMatrixColumn(i,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),c.add(e)}}(),N=function(){const e=new wi;return function(t,i){const s=n.domElement;if(n.object.isPerspectiveCamera){const r=n.object.position;e.copy(r).sub(n.target);let a=e.length();a*=Math.tan(n.object.fov/2*Math.PI/180),A(2*t*a/s.clientHeight,n.object.matrix),C(2*i*a/s.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(A(t*(n.object.right-n.object.left)/n.object.zoom/s.clientWidth,n.object.matrix),C(i*(n.object.top-n.object.bottom)/n.object.zoom/s.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function L(e){n.object.isPerspectiveCamera?l/=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*e)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(e){n.object.isPerspectiveCamera?l*=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/e)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function P(e){u.set(e.clientX,e.clientY)}function I(e){m.set(e.clientX,e.clientY)}function D(){if(1===_.length)u.set(_[0].pageX,_[0].pageY);else{const e=.5*(_[0].pageX+_[1].pageX),t=.5*(_[0].pageY+_[1].pageY);u.set(e,t)}}function O(){if(1===_.length)m.set(_[0].pageX,_[0].pageY);else{const e=.5*(_[0].pageX+_[1].pageX),t=.5*(_[0].pageY+_[1].pageY);m.set(e,t)}}function z(){const e=_[0].pageX-_[1].pageX,t=_[0].pageY-_[1].pageY,n=Math.sqrt(e*e+t*t);x.set(0,n)}function F(e){if(1==_.length)d.set(e.pageX,e.pageY);else{const t=Z(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);d.set(n,i)}p.subVectors(d,u).multiplyScalar(n.rotateSpeed);const t=n.domElement;T(2*Math.PI*p.x/t.clientHeight),E(2*Math.PI*p.y/t.clientHeight),u.copy(d)}function U(e){if(1===_.length)f.set(e.pageX,e.pageY);else{const t=Z(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);f.set(n,i)}g.subVectors(f,m).multiplyScalar(n.panSpeed),N(g.x,g.y),m.copy(f)}function B(e){const t=Z(e),i=e.pageX-t.x,s=e.pageY-t.y,r=Math.sqrt(i*i+s*s);v.set(0,r),y.set(0,Math.pow(v.y/x.y,n.zoomSpeed)),L(y.y),x.copy(v)}function V(e){!1!==n.enabled&&(0===_.length&&(n.domElement.setPointerCapture(e.pointerId),n.domElement.addEventListener("pointermove",k),n.domElement.addEventListener("pointerup",G)),function(e){_.push(e)}(e),"touch"===e.pointerType?function(e){switch(Y(e),_.length){case 1:switch(n.touches.ONE){case M.ROTATE:if(!1===n.enableRotate)return;D(),s=i.TOUCH_ROTATE;break;case M.PAN:if(!1===n.enablePan)return;O(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case M.DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&z(),n.enablePan&&O(),s=i.TOUCH_DOLLY_PAN;break;case M.DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&z(),n.enableRotate&&D(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Dm)}(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1}switch(t){case b.DOLLY:if(!1===n.enableZoom)return;!function(e){x.set(e.clientX,e.clientY)}(e),s=i.DOLLY;break;case b.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;I(e),s=i.PAN}else{if(!1===n.enableRotate)return;P(e),s=i.ROTATE}break;case b.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;P(e),s=i.ROTATE}else{if(!1===n.enablePan)return;I(e),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Dm)}(e))}function k(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(Y(e),s){case i.TOUCH_ROTATE:if(!1===n.enableRotate)return;F(e),n.update();break;case i.TOUCH_PAN:if(!1===n.enablePan)return;U(e),n.update();break;case i.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&B(e),n.enablePan&&U(e)}(e),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&B(e),n.enableRotate&&F(e)}(e),n.update();break;default:s=i.NONE}}(e):function(e){switch(s){case i.ROTATE:if(!1===n.enableRotate)return;!function(e){d.set(e.clientX,e.clientY),p.subVectors(d,u).multiplyScalar(n.rotateSpeed);const t=n.domElement;T(2*Math.PI*p.x/t.clientHeight),E(2*Math.PI*p.y/t.clientHeight),u.copy(d),n.update()}(e);break;case i.DOLLY:if(!1===n.enableZoom)return;!function(e){v.set(e.clientX,e.clientY),y.subVectors(v,x),y.y>0?L(S()):y.y<0&&R(S()),x.copy(v),n.update()}(e);break;case i.PAN:if(!1===n.enablePan)return;!function(e){f.set(e.clientX,e.clientY),g.subVectors(f,m).multiplyScalar(n.panSpeed),N(g.x,g.y),m.copy(f),n.update()}(e)}}(e))}function G(e){q(e),0===_.length&&(n.domElement.releasePointerCapture(e.pointerId),n.domElement.removeEventListener("pointermove",k),n.domElement.removeEventListener("pointerup",G)),n.dispatchEvent(Om),s=i.NONE}function H(e){q(e)}function W(e){!1!==n.enabled&&!1!==n.enableZoom&&s===i.NONE&&(e.preventDefault(),n.dispatchEvent(Dm),function(e){e.deltaY<0?R(S()):e.deltaY>0&&L(S()),n.update()}(e),n.dispatchEvent(Om))}function j(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:N(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:N(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:N(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:N(-n.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),n.update())}(e)}function X(e){!1!==n.enabled&&e.preventDefault()}function q(e){delete w[e.pointerId];for(let t=0;t<_.length;t++)if(_[t].pointerId==e.pointerId)return void _.splice(t,1)}function Y(e){let t=w[e.pointerId];void 0===t&&(t=new Xn,w[e.pointerId]=t),t.set(e.pageX,e.pageY)}function Z(e){const t=e.pointerId===_[0].pointerId?_[1]:_[0];return w[t.pointerId]}n.domElement.addEventListener("contextmenu",X),n.domElement.addEventListener("pointerdown",V),n.domElement.addEventListener("pointercancel",H),n.domElement.addEventListener("wheel",W,{passive:!1}),this.update()}}class Fm extends xm{constructor(e,t={}){super(e),this.Camera=this.Proxy.getComponent("Camera"),this.Element=this.Engine.Managers.Interface.getState("Rendering").byName().getElement(),this.Controls=new zm(this.Camera.get(),this.Element);for(const e in t)this.Controls[e]=t[e];this.Element.style.pointerEvents="all"}update(){this.Controls.update()}}Fm.prototype.$name="OrbitCameraControls";class Um extends xm{constructor(e,t){super(e),this.range=t,this.ranges=[],this.Mesh=this.Proxy.getComponent("InstancedMesh"),this.Rotation=new wi;for(let e=0;e<this.Mesh.count;e++)this.ranges.push(new wi(Tm(-this.range,this.range),Tm(-this.range,this.range),Tm(-this.range,this.range)))}update(e){for(let t=0;t<this.Mesh.count;t++)this.Rotation.set(e*this.ranges[t].x,e*this.ranges[t].y,e*this.ranges[t].z),this.Mesh.addInstanceRotation(t,this.Rotation)}}Um.prototype.$name="RandomRotateInstancedMesh";class Bm extends xm{constructor(e,t){super(e),this.range=t,this.Mesh=this.Proxy.getComponent("Mesh").get(),this.Range=new wi(Tm(-this.range,this.range),Tm(-this.range,this.range),Tm(-this.range,this.range))}update(e){this.Mesh.rotation.x+=e*this.Range.x,this.Mesh.rotation.y+=e*this.Range.y,this.Mesh.rotation.z+=e*this.Range.z}}Bm.prototype.$name="RandomRotateMesh";class Vm extends x{async add(e,t,...n){return this.array.push(new e(t,...n)),this.nameToIndex.push(e.prototype.$name),await this.array[this.array.length-1].onBuild(),this.array[this.array.length-1]}check(e){return!!this.nameToIndex.includes(e)}get(e){const t=d(this.nameToIndex,e);return this.array[t]}async remove(e){const t=d(this.nameToIndex,e);await this.array[t].onRemoval(),p(this.nameToIndex,t),p(this.array,t)}}Vm.prototype.isComponentStorageTable=!0;class km{constructor(e){this.Engine=e.Engine,this.Manager=e,this.uuid=Sm(),this.name=`ecs-entity#${km.prototype.$num}`,this.Components=new Vm,km.prototype.$num++}async onBuild(){}async onRemoval(){}async addComponent(e,...t){if(e.prototype.$isECSComponent)return await this.Components.add(e,this,...t)}call(e,t,...n){return this.getComponent(e)[t](...n)}getComponent(e){return this.Components.get(e)}getId(){return this.id}async remove(){for(let e of this.Components.nameToIndex)await this.removeComponent(e);await this.onRemoval()}async removeComponent(e){this.Components.check(e)&&await this.Components.remove(e)}setName(e){this.name=e}update(e,t,n){for(let i=0;i<this.Components.array.length;i++)this.Components.array[i].update(e,t,n)}}km.prototype.$num=0,km.prototype.isECSEntity=!0;class Gm{constructor(e,t,n){this.indexes=[],this.x=t,this.y=n,this.Parent=e}addIndex(){this.indexes.push(...arguments)}getCoords(){return new Vector3(this.x,this.y,this.getHeight())}getHeight(){return this.Parent.attributes.position.array[3*this.indexes[0]+2]}lower(e){const t=this.getHeight();this.setHeight(t-e)}raise(e){const t=this.getHeight();this.setHeight(t+e)}setHeight(e){for(let t=0;t<this.indexes.length;t++)this.Parent.attributes.position.array[3*this.indexes[t]+2]=e}}class Hm extends ar{constructor(e=1,t=1,n=1,i=1){super(),this.type="TerrainPlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},this.Vertices={indexed:[],XY:{}};let s=[],r=[];const a={},o=e/2,l=t/2,c=Math.floor(n),h=Math.floor(i),u=c+1,d=h+1,p=e/c,m=t/h,f=[],x=[],v=[],y=[];for(let e=0;e<d;e++){const t=e*m-l;for(let n=0;n<u;n++){const i=n*p-o,l=-t;x.push(i,-t,0);const d=Number(i.toFixed(4)),m=Number(l.toFixed(4)),f=`${d},${m}`;s.includes(d)||s.push(d),r.includes(m)||r.push(m),a[f]||(a[f]=[]),a[f].push(e*u+n),v.push(0,0,1),y.push(n/c),y.push(1-e/h)}}for(let e=0;e<h;e++)for(let t=0;t<c;t++){const n=t+u*e,i=t+u*(e+1),s=t+1+u*(e+1),r=t+1+u*e;e%2==0?t%2==0?(f.push(n,i,r),f.push(i,s,r)):(f.push(n,i,s),f.push(n,s,r)):t%2!=0?(f.push(n,i,r),f.push(i,s,r)):(f.push(n,i,s),f.push(n,s,r))}s=g(s),r=g(r);for(let e=0;e<r.length;e++)for(let t=0;t<s.length;t++){const n=`${s[t]},${r[e]}`,i=e*s.length+t,o=new Gm(this,s[t],r[e]);o.addIndex(...a[n]),this.Vertices.indexed.push(o),this.Vertices.XY[n]=i}this.setIndex(f),this.setAttribute("position",new Js(x,3)),this.setAttribute("normal",new Js(v,3)),this.setAttribute("uv",new Js(y,2))}static fromJSON(e){return new Hm(e.width,e.height,e.widthSegments,e.heightSegments)}lowerVertex(e,t,n){const i=this.Vertices.XY[`${e},${t}`];this.Vertices.indexed[i].lower(n),this.attributes.position.needsUpdate=!0,this.computeVertexNormals(),this.computeFaceNormals()}raiseVertex(e,t,n){const i=this.Vertices.XY[`${e},${t}`];this.Vertices.indexed[i].raise(n),this.attributes.position.needsUpdate=!0,this.computeVertexNormals(),this.computeFaceNormals()}setVertexHeight(e,t,n){const i=this.Vertices.XY[`${e},${t}`];this.Vertices.indexed[i].setHeight(n),this.attributes.position.needsUpdate=!0,this.computeVertexNormals(),this.computeFaceNormals()}setVertexHeightIX(e,t){this.Vertices.indexed[e].setHeight(t),this.attributes.position.needsUpdate=!0,this.computeVertexNormals(),this.computeFaceNormals()}}Hm.prototype.isTerrainPlaneGeometry=!0;const Wm={Vertex:"vertex",Fragment:"fragment"},jm={None:"none",Frame:"frame",Object:"object"},Xm={Boolean:"bool",Integer:"int",Float:"float",Vector2:"vec2",Vector3:"vec3",Vector4:"vec4",Matrix3:"mat3",Matrix4:"mat4"},qm=e=>{let t="{";!0===e.isNode&&(t+=`uuid:"${e.uuid}",`);for(const n of Ym(e))t+=`${n}:${e[n].getCacheKey()},`;return t+="}",t},Ym=e=>{const t=[];for(const n in e){const i=e[n];i&&!0===i.isNode&&t.push(n)}return t},Zm=e=>"number"==typeof e?"float":"boolean"==typeof e?"bool":!0===e?.isVector2?"vec2":!0===e?.isVector3?"vec3":!0===e?.isVector4?"vec4":!0===e?.isMatrix3?"mat3":!0===e?.isMatrix4?"mat4":!0===e?.isColor?"color":null,$m=(e,...t)=>{const n=e?.slice(-4);return"color"===e?new li(...t):"vec2"===n?new Xn(...t):"vec3"===n?new wi(...t):"vec4"===n?new fi(...t):"mat3"===n?new qn(...t):"mat4"===n?new es(...t):"bool"!==e&&("float"===e||"int"===e||"uint"===e?0:null)};let Jm=0;const Km=class{constructor(e=null){this.isNode=!0,this.nodeType=e,this.updateType=jm.None,this.uuid=jn.generateUUID(),Object.defineProperty(this,"id",{value:Jm++})}get type(){return this.constructor.name}getChildren(){const e=[];for(const t in this){const n=this[t];if(!0===Array.isArray(n))for(const t of n)!0===t?.isNode&&e.push(t);else!0===n?.isNode&&e.push(n)}return e}getCacheKey(){return qm(this)}getHash(){return this.uuid}getUpdateType(){return this.updateType}getNodeType(){return this.nodeType}getConstructHash(){return this.uuid}getReference(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}construct(e){const t=e.getNodeProperties(this);for(const e of this.getChildren())t["_node"+e.id]=e;return null}analyze(e){const t=e.getDataFromNode(this);if(t.dependenciesCount=void 0===t.dependenciesCount?1:t.dependenciesCount+1,1===t.dependenciesCount){const t=e.getNodeProperties(this);for(const n of Object.values(t))!0===n?.isNode&&n.build(e)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(!0===n?.isNode)return n.build(e,t)}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getReference(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addStack(this);let i=null;const s=e.getBuildStage();if("construct"===s){const t=e.getNodeProperties(this);if(!0!==t.initialized||!1===e.context.tempRead){t.initialized=!0,t.outputNode=this.construct(e);for(const n of Object.values(t))!0===n?.isNode&&n.build(e)}}else if("analyze"===s)this.analyze(e);else if("generate"===s)if(1===this.generate.length){const n=this.getNodeType(e),s=e.getDataFromNode(this);i=s.snippet,void 0===i&&(i=this.generate(e)||"",s.snippet=i),i=e.format(i,n,t)}else i=this.generate(e,t)||"";return e.removeStack(this),i}serialize(e){const t=Ym(this);if(t.length>0){const n={};for(const i of t)n[i]=this[i].toJSON(e.meta).uuid;e.inputNodes=n}}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const n in e.inputNodes){const i=e.inputNodes[n];this[n]=t[i]}}}toJSON(e){const{uuid:t,type:n}=this,i=void 0===e||"string"==typeof e;i&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];function r(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(void 0===s&&(s={uuid:t,type:n,meta:e,metadata:{version:4.5,type:"Node",generator:"Node.toJSON"}},e.nodes[s.uuid]=s,this.serialize(s),delete s.meta),i){const t=r(e.textures),n=r(e.images),i=r(e.nodes);t.length>0&&(s.textures=t),n.length>0&&(s.images=n),i.length>0&&(s.nodes=i)}return s}},Qm=class extends Km{constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e}getNodeType(){return null===this.nodeType?Zm(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}serialize(e){super.serialize(e),e.value=this.value?.toArray?.()||this.value,e.valueType=Zm(this.value),e.nodeType=this.nodeType}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=$m(e.valueType),this.value=this.value?.fromArray?.(e.value)||e.value}generate(){console.warn("Abstract function.")}},ef=class extends Qm{constructor(e,t=null){super(e,t),this.isUniformNode=!0}getUniformHash(e){return this.getHash(e)}generate(e,t){const n=this.getNodeType(e),i=this.getUniformHash(e);let s=e.getNodeFromHash(i);void 0===s&&(e.setHashNode(this,i),s=this);const r=s.getInputType(e),a=e.getUniformFromNode(s,e.shaderStage,r),o=e.getPropertyName(a);return e.format(o,n,t)}},tf=class extends ef{constructor(e=[]){super(),this.isArrayUniformNode=!0,this.nodes=e}getNodeType(e){return this.nodes[0].getNodeType(e)}},nf=class extends Km{constructor(e,t=null){super(),this.node=e,this.name=t}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const t=this.getNodeType(e),n=this.node,i=this.name,s=e.getVaryingFromNode(this,t);null!==i&&(s.name=i);const r=e.getPropertyName(s,Wm.Vertex);return e.flowNodeFromShaderStage(Wm.Vertex,n,t,r),e.getPropertyName(s)}},sf=class extends Km{constructor(e,t=null){super(t),this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){const t=this.getAttributeName(e);let n=super.getNodeType(e);if(null===n)if(e.hasGeometryAttribute(t)){const i=e.geometry.getAttribute(t);n=e.getTypeFromLength(i.itemSize)}else n="float";return n}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const i=e.getAttribute(t,n);return e.isShaderStage("vertex")?i.name:new nf(this).build(e,i.type)}return console.warn(`Attribute "${t}" not found.`),e.getConst(n)}},rf=class extends Km{constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e,t){const n=this.callNode.build(e,"void");return""!==n&&e.addFlowCode(n),this.outputNode.build(e,t)}},af=class extends Km{constructor(e="",t=[]){super("code"),this.isCodeNode=!0,this.code=e,this._includes=t}setIncludes(e){return this._includes=e,this}getIncludes(){return this._includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}},of=class extends Qm{constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.getConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return e.format(this.generateConst(e),n,t)}},lf=class extends Km{constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.context=t}getNodeType(e){return this.node.getNodeType(e)}construct(e){const t=e.getContext();e.setContext({...e.context,...this.context});const n=this.node.build(e);return e.setContext(t),n}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.context});const i=this.node.build(e,t);return e.setContext(n),i}},cf=class extends Km{constructor(e){super(e),this.isTempNode=!0}build(e,t){if("generate"===e.getBuildStage()){const n=e.getVectorType(this.getNodeType(e,t)),i=e.getDataFromNode(this);if(!1!==e.context.tempRead&&void 0!==i.propertyName)return e.format(i.propertyName,n,t);if(!1!==e.context.tempWrite&&"void "!==n&&"void"!==t&&i.dependenciesCount>1){const s=super.build(e,n),r=e.getVarFromNode(this,n),a=e.getPropertyName(r);return e.addFlowCode(`${a} = ${s}`),i.snippet=s,i.propertyName=a,e.format(i.propertyName,n,t)}}return super.build(e,t)}},hf=class extends cf{constructor(e="",t="void"){super(t),this.snipped=e}generate(e){const t=this.getNodeType(e),n=this.snipped;if("void"!==t)return`( ${n} )`;e.addFlowCode(n)}},uf=class extends cf{constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],n=this.functionNode,i=n.getInputs(e),s=this.parameters;if(Array.isArray(s))for(let n=0;n<s.length;n++){const r=i[n],a=s[n];t.push(a.build(e,r.type))}else for(const n of i){const i=s[n.name];if(void 0===i)throw new Error(`FunctionCallNode: Input '${n.name}' not found in FunctionNode.`);t.push(i.build(e,n.type))}return`${n.build(e,"property")}( ${t.join(", ")} )`}},df=class extends af{constructor(e="",t=[]){super(e,t),this.keywords={}}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return void 0===n&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}call(e={}){return new uf(this,e)}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),i=n.name,s=n.type,r=e.getCodeFromNode(this,s);""!==i&&(r.name=i);const a=e.getPropertyName(r);let o=this.getNodeFunction(e).getCode(a);const l=this.keywords,c=Object.keys(l);if(c.length>0)for(const t of c){const n=new RegExp(`\\b${t}\\b`,"g"),i=l[t].build(e,"property");o=o.replace(n,i)}return r.code=o,"property"===t?a:e.format(`${a}()`,s,t)}},pf=class extends Km{constructor(){super("uint"),this.isInstanceIndexNode=!0}generate(e){return e.getInstanceIndex()}},mf=class{constructor(e,t){this.isNodeAttribute=!0,this.name=e,this.type=t}},ff=class{constructor(e,t,n,i){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n,this.needsUpdate=i}get value(){return this.node.value}set value(e){this.node.value=e}},gf=class{constructor(e,t){this.isNodeVarying=!0,this.name=e,this.type=t}},xf=class{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}},vf=class{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}},yf=class{constructor(){this.keywords=[],this.nodes=[],this.keywordsCallback={}}getNode(e){let t=this.nodes[e];return void 0===t&&void 0!==this.keywordsCallback[e]&&(t=this.keywordsCallback[e](e),this.nodes[e]=t),t}addKeyword(e,t){return this.keywords.push(e),this.keywordsCallback[e]=t,this}parse(e){const t=this.keywords,n=new RegExp(`\\b${t.join("\\b|\\b")}\\b`,"g"),i=e.match(n),s=[];if(null!==i)for(const e of i){const t=this.getNode(e);void 0!==t&&-1===s.indexOf(t)&&s.push(t)}return s}include(e,t){const n=this.parse(t);for(const t of n)t.build(e)}},_f=["fragment","vertex"],bf=[..._f,"compute"],Mf=["x","y","z","w"],wf=new Map;wf.set(1,"float"),wf.set(2,"vec2"),wf.set(3,"vec3"),wf.set(4,"vec4"),wf.set(9,"mat3"),wf.set(16,"mat4");const Sf=e=>(e=Number(e))+(e%1?"":".0"),Tf=class{constructor(e,t,n){this.object=e,this.material=e.material||null,this.geometry=e.geometry||null,this.renderer=t,this.parser=n,this.nodes=[],this.updateNodes=[],this.hashNodes={},this.scene=null,this.lightsNode=null,this.fogNode=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:[]},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.codes={vertex:[],fragment:[],compute:[]},this.attributes=[],this.varyings=[],this.vars={vertex:[],fragment:[],compute:[]},this.flow={code:""},this.stack=[],this.context={keywords:new yf,material:e.material},this.nodesData=new WeakMap,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}get node(){return this.stack[this.stack.length-1]}addStack(e){this.stack.push(e)}removeStack(e){if(this.stack.pop()!==e)throw new Error("NodeBuilder: Invalid node stack!")}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){-1===this.nodes.indexOf(e)&&(e.getUpdateType(this)!==jm.None&&this.updateNodes.push(e),this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}isAvailable(){return!1}getInstanceIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getTexture(){console.warn("Abstract function.")}getTextureLevel(){console.warn("Abstract function.")}getCubeTexture(){console.warn("Abstract function.")}getCubeTextureLevel(){console.warn("Abstract function.")}getConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new li:"vec2"===e?t=new Xn:"vec3"===e?t=new wi:"vec4"===e&&(t=new fi)),"float"===e)return Sf(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${Sf(t.r)}, ${Sf(t.g)}, ${Sf(t.b)} )`;const n=this.getTypeLength(e),i=this.getComponentType(e),s=e=>this.getConst(i,e);if(2===n)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(3===n)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(4===n)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e}generateMethod(e){return e}hasGeometryAttribute(e){return void 0!==this.geometry?.getAttribute(e)}getAttribute(e,t){const n=this.attributes;for(const t of n)if(t.name===e)return t;const i=new mf(e,t);return n.push(i),i}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e}isShaderStage(e){return this.shaderStage===e}getTextureEncodingFromMap(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?e.texture.encoding:qt,t}getComponentType(e){e=this.getVectorType(e);const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e?"vec4":e}getTypeFromLength(e){return wf.get(e)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return null!==n?Number(n[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}getDataFromNode(e,t=this.shaderStage){let n=this.nodesData.get(e);return void 0===n&&(n={vertex:{},fragment:{},compute:{}},this.nodesData.set(e,n)),null!==t?n[t]:n}getNodeProperties(e,t=this.shaderStage){const n=this.getDataFromNode(this,t),i=e.getConstructHash(this);return n.properties=n.properties||{},n.properties[i]=n.properties[i]||{outputNode:null},n.properties[i]}getUniformFromNode(e,t,n){const i=this.getDataFromNode(e,t);let s=i.uniform;if(void 0===s){const r=this.uniforms.index++;s=new ff("nodeUniform"+r,n,e),this.uniforms[t].push(s),i.uniform=s}return s}getVarFromNode(e,t,n=this.shaderStage){const i=this.getDataFromNode(e,n);let s=i.variable;if(void 0===s){const e=this.vars[n],r=e.length;s=new xf("nodeVar"+r,t),e.push(s),i.variable=s}return s}getVaryingFromNode(e,t){const n=this.getDataFromNode(e,null);let i=n.varying;if(void 0===i){const e=this.varyings,s=e.length;i=new gf("nodeVarying"+s,t),e.push(i),n.varying=i}return i}getCodeFromNode(e,t,n=this.shaderStage){const i=this.getDataFromNode(e);let s=i.code;if(void 0===s){const e=this.codes[n],r=e.length;s=new vf("nodeCode"+r,t),e.push(s),i.code=s}return s}addFlowCode(e){this.flow.code+=e}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}flowChildNode(e,t=null){const n=this.flow,i={code:""};return this.flow=i,i.result=e.build(this,t),this.flow=n,i}flowNodeFromShaderStage(e,t,n=null,i=null){const s=this.shaderStage;this.setShaderStage(e);const r=this.flowChildNode(t,n);return null!==i&&(r.code+=`${i} = ${r.result};\n\t`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(s),r}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVars(e){let t="";const n=this.vars[e];for(const e of n)t+=`${e.type} ${e.name}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";for(const e of t)n+=e.code+"\n";return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){this.setBuildStage("construct");for(const e of bf){this.setShaderStage(e);const t=this.flowNodes[e];for(const e of t)e.build(this)}this.setBuildStage("analyze");for(const e of bf){this.setShaderStage(e);const t=this.flowNodes[e];for(const e of t)e.build(this)}this.setBuildStage("generate"),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex),this.setBuildStage("generate");for(const e of bf){this.setShaderStage(e);const t=this.flowNodes[e];for(const e of t)this.flowNode(e)}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this}format(e,t,n){if((t=this.getVectorType(t))===(n=this.getVectorType(n))||null===n||this.isReference(n))return e;const i=this.getTypeLength(t),s=this.getTypeLength(n);return i>4||s>4||0===s?e:i===s?`${this.getType(n)}( ${e} )`:i>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s),n):4===s?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===i?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:`${this.getType(n)}( ${e} )`}getSignature(){return`// Three.js r${_} - NodeMaterial System\n`}},Ef=class{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.startTime=null,this.updateMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null}updateNode(e){e.updateType===jm.Frame?this.updateMap.get(e)!==this.frameId&&(this.updateMap.set(e,this.frameId),e.update(this)):e.updateType===jm.Object&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}};class Af{constructor(e,t,n=null,i="",s=!1){this.type=e,this.name=t,this.count=n,this.qualifier=i,this.isConst=s}}Af.isNodeFunctionInput=!0;const Cf=Af,Nf=class extends Km{constructor(e=null,t="vec4"){super(t),this.name=e}getHash(e){return this.name||super.getHash(e)}generate(e){const t=e.getVarFromNode(this,this.getNodeType(e)),n=this.name;return null!==n&&(t.name=n),e.getPropertyName(t)}};class Lf extends cf{constructor(e,t,n,...i){if(super(),this.op=e,i.length>0){let t=n;for(let n=0;n<i.length;n++)t=new Lf(e,t,i[n]);n=t}this.aNode=t,this.bNode=n}getNodeType(e,t){const n=this.op,i=this.aNode,s=this.bNode,r=i.getNodeType(e),a=s.getNodeType(e);if("void"===r||"void"===a)return"void";if("="===n||"%"===n)return r;if("&"===n||"|"===n||"^"===n||">>"===n||"<<"===n)return"int";if("=="===n||"&&"===n||"||"===n||"^^"===n)return"bool";if("<"===n||">"===n||"<="===n||">="===n){const n=e.getTypeLength(t);return n>1?`bvec${n}`:"bool"}return"float"===r&&e.isMatrix(a)?a:e.isMatrix(r)&&e.isVector(a)?e.getVectorFromMatrix(r):e.isVector(r)&&e.isMatrix(a)?e.getVectorFromMatrix(a):e.getTypeLength(a)>e.getTypeLength(r)?a:r}generate(e,t){const n=this.op,i=this.aNode,s=this.bNode,r=this.getNodeType(e,t);let a=null,o=null;"void"!==r?(a=i.getNodeType(e),o=s.getNodeType(e),"="===n?o=a:"<"===n||">"===n||"<="===n||">="===n?e.isVector(a)?o=a:a=o="float":e.isMatrix(a)&&e.isVector(o)?o=e.getVectorFromMatrix(a):a=e.isVector(a)&&e.isMatrix(o)?e.getVectorFromMatrix(o):o=r):a=o=r;const l=i.build(e,a),c=s.build(e,o),h=e.getTypeLength(t);return"void"!==t?"="===n?(e.addFlowCode(`${l} ${this.op} ${c}`),l):"<"===n&&h>1?e.format(`${e.getMethod("lessThan")}( ${l}, ${c} )`,r,t):"<="===n&&h>1?e.format(`${e.getMethod("lessThanEqual")}( ${l}, ${c} )`,r,t):">"===n&&h>1?e.format(`${e.getMethod("greaterThan")}( ${l}, ${c} )`,r,t):">="===n&&h>1?e.format(`${e.getMethod("greaterThanEqual")}( ${l}, ${c} )`,r,t):e.format(`( ${l} ${this.op} ${c} )`,r,t):"void"!==a?e.format(`${l} ${this.op} ${c}`,r,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Rf=Lf,Pf=class extends Km{constructor(e,t=null){super(),this.node=e,this.name=t}op(e,...t){return this.node=new Rf(e,this.node,...t),this}assign(...e){return this.op("=",...e)}add(...e){return this.op("+",...e)}sub(...e){return this.op("-",...e)}mul(...e){return this.op("*",...e)}div(...e){return this.op("/",...e)}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const t=this.node,n=this.name;if(null===n&&!0===t.isTempNode)return t.build(e);const i=e.getVectorType(this.getNodeType(e)),s=t.build(e,i),r=e.getVarFromNode(this,i);null!==n&&(r.name=n);const a=e.getPropertyName(r);return e.addFlowCode(`${a} = ${s}`),a}},If=class extends Km{constructor(e,t="x"){super(),this.node=e,this.components=t}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Mf.indexOf(t)+1,e);return e}getNodeType(e){return e.getTypeFromLength(this.components.length)}generate(e,t){const n=this.node,i=e.getTypeLength(n.getNodeType(e));let s=null;if(i>1){let r=null;this.getVectorLength()>=i&&(r=e.getTypeFromLength(this.getVectorLength()));const a=n.build(e,r);s=this.components.length===i&&this.components==="xyzw".slice(0,this.components.length)?e.format(a,r,t):e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else s=n.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}};class Df extends cf{static RADIANS="radians";static DEGREES="degrees";static EXP="exp";static EXP2="exp2";static LOG="log";static LOG2="log2";static SQRT="sqrt";static INVERSE_SQRT="inversesqrt";static FLOOR="floor";static CEIL="ceil";static NORMALIZE="normalize";static FRACT="fract";static SIN="sin";static COS="cos";static TAN="tan";static ASIN="asin";static ACOS="acos";static ATAN="atan";static ABS="abs";static SIGN="sign";static LENGTH="length";static NEGATE="negate";static INVERT="invert";static DFDX="dFdx";static DFDY="dFdy";static ROUND="round";static ATAN2="atan2";static MIN="min";static MAX="max";static MOD="mod";static STEP="step";static REFLECT="reflect";static DISTANCE="distance";static DOT="dot";static CROSS="cross";static POW="pow";static TRANSFORM_DIRECTION="transformDirection";static MIX="mix";static CLAMP="clamp";static REFRACT="refract";static SMOOTHSTEP="smoothstep";static FACEFORWARD="faceforward";constructor(e,t,n=null,i=null){super(),this.method=e,this.aNode=t,this.bNode=n,this.cNode=i}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,i=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(i)?0:e.getTypeLength(i);return s>r&&s>a?t:r>a?n:a>s?i:t}getNodeType(e){const t=this.method;return t===Df.LENGTH||t===Df.DISTANCE||t===Df.DOT?"float":t===Df.CROSS?"vec3":this.getInputType(e)}generate(e,t){const n=this.method,i=this.getNodeType(e),s=this.getInputType(e),r=this.aNode,a=this.bNode,o=this.cNode,l=!0===e.renderer.isWebGLRenderer;if(n===Df.TRANSFORM_DIRECTION){let t=r,n=a;e.isMatrix(t.getNodeType(e))?n=new hf(`${e.getType("vec4")}( ${n.build(e,"vec3")}, 0.0 )`,"vec4"):t=new hf(`${e.getType("vec4")}( ${t.build(e,"vec3")}, 0.0 )`,"vec4");const i=new If(new Rf("*",t,n),"xyz");return new Df(Df.NORMALIZE,i).build(e)}if(n===Df.NEGATE)return e.format("( -"+r.build(e,s)+" )",i,t);if(n===Df.INVERT)return e.format("( 1.0 - "+r.build(e,s)+" )",i,t);{const c=[];return n===Df.CROSS?c.push(r.build(e,i),a.build(e,i)):n===Df.STEP?c.push(r.build(e,1===e.getTypeLength(r.getNodeType(e))?"float":s),a.build(e,s)):l&&(n===Df.MIN||n===Df.MAX)||n===Df.MOD?c.push(r.build(e,s),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":s)):n===Df.REFRACT?c.push(r.build(e,s),a.build(e,s),o.build(e,"float")):n===Df.MIX?c.push(r.build(e,s),a.build(e,s),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":s)):(c.push(r.build(e,s)),null!==o?c.push(a.build(e,s),o.build(e,s)):null!==a&&c.push(a.build(e,s))),e.format(`${e.getMethod(n)}( ${c.join(", ")} )`,i,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}const Of=Df;class zf extends Km{static VIEW_MATRIX="viewMatrix";static NORMAL_MATRIX="normalMatrix";static WORLD_MATRIX="worldMatrix";static POSITION="position";static VIEW_POSITION="viewPosition";constructor(e=zf.VIEW_MATRIX,t=null){super(),this.scope=e,this.object3d=t,this.updateType=jm.Object,this._uniformNode=new ef(null)}getNodeType(){const e=this.scope;return e===zf.WORLD_MATRIX||e===zf.VIEW_MATRIX?"mat4":e===zf.NORMAL_MATRIX?"mat3":e===zf.POSITION||e===zf.VIEW_POSITION?"vec3":void 0}update(e){const t=this.object3d,n=this._uniformNode,i=this.scope;if(i===zf.VIEW_MATRIX)n.value=t.modelViewMatrix;else if(i===zf.NORMAL_MATRIX)n.value=t.normalMatrix;else if(i===zf.WORLD_MATRIX)n.value=t.matrixWorld;else if(i===zf.POSITION)n.value.setFromMatrixPosition(t.matrixWorld);else if(i===zf.VIEW_POSITION){const i=e.camera;n.value=n.value||new wi,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(i.matrixWorldInverse)}}generate(e){const t=this.scope;return t===zf.WORLD_MATRIX||t===zf.VIEW_MATRIX?this._uniformNode.nodeType="mat4":t===zf.NORMAL_MATRIX?this._uniformNode.nodeType="mat3":t!==zf.POSITION&&t!==zf.VIEW_POSITION||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}const Ff=zf;class Uf extends Ff{constructor(e=Uf.VIEW_MATRIX){super(e)}update(e){this.object3d=e.object,super.update(e)}}const Bf=Uf;class Vf extends Ff{static PROJECTION_MATRIX="projectionMatrix";constructor(e=Vf.POSITION){super(e)}getNodeType(e){return this.scope===Vf.PROJECTION_MATRIX?"mat4":super.getNodeType(e)}update(e){const t=e.camera,n=this._uniformNode,i=this.scope;i===Vf.PROJECTION_MATRIX?n.value=t.projectionMatrix:i===Vf.VIEW_MATRIX?n.value=t.matrixWorldInverse:(this.object3d=t,super.update(e))}generate(e){return this.scope===Vf.PROJECTION_MATRIX&&(this._uniformNode.nodeType="mat4"),super.generate(e)}}const kf=Vf;class Gf extends Km{static GEOMETRY="geometry";static LOCAL="local";static VIEW="view";static WORLD="world";constructor(e=Gf.LOCAL){super("vec3"),this.scope=e}getHash(){return`normal-${this.scope}`}generate(e){const t=this.scope;let n=null;if(t===Gf.GEOMETRY)n=new sf("normal","vec3");else if(t===Gf.LOCAL)n=new nf(new Gf(Gf.GEOMETRY));else if(t===Gf.VIEW){const e=new Rf("*",new Bf(Bf.NORMAL_MATRIX),new Gf(Gf.LOCAL));n=new Of(Of.NORMALIZE,new nf(e))}else if(t===Gf.WORLD){const e=new Of(Of.TRANSFORM_DIRECTION,new Gf(Gf.VIEW),new kf(kf.VIEW_MATRIX));n=new Of(Of.NORMALIZE,new nf(e))}return n.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}const Hf=Gf;class Wf extends Km{static GEOMETRY="geometry";static LOCAL="local";static VIEW="view";static WORLD="world";constructor(e=Wf.LOCAL){super(),this.scope=e}getHash(){return`tangent-${this.scope}`}getNodeType(){return this.scope===Wf.GEOMETRY?"vec4":"vec3"}generate(e){const t=this.scope;let n=null;if(t===Wf.GEOMETRY)n=new sf("tangent","vec4");else if(t===Wf.LOCAL)n=new nf(new If(new Wf(Wf.GEOMETRY),"xyz"));else if(t===Wf.VIEW){const e=new If(new Rf("*",new Bf(Bf.VIEW_MATRIX),new Wf(Wf.LOCAL)),"xyz");n=new Of(Of.NORMALIZE,new nf(e))}else if(t===Wf.WORLD){const e=new Of(Of.TRANSFORM_DIRECTION,new Wf(Wf.VIEW),new kf(kf.VIEW_MATRIX));n=new Of(Of.NORMALIZE,new nf(e))}return n.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}const jf=Wf;class Xf extends Km{static GEOMETRY="geometry";static LOCAL="local";static VIEW="view";static WORLD="world";constructor(e=Xf.LOCAL){super("vec3"),this.scope=e}getHash(){return`bitangent-${this.scope}`}generate(e){const t=this.scope,n=new Of(Of.CROSS,new Hf(t),new jf(t)),i=new If(new jf(jf.GEOMETRY),"w"),s=new If(new Rf("*",n,i),"xyz");return new Of(Of.NORMALIZE,new nf(s)).build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}const qf=Xf,Yf=class extends ef{constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getInputType(){return"buffer"}},Zf=class extends sf{constructor(e=0){super(null,"vec2"),this.isUVNode=!0,this.index=e}getAttributeName(){const e=this.index;return"uv"+(e>0?e+1:"")}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}},$f=class extends ef{constructor(e,t=new Zf,n=null){super(e,"vec4"),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n}getUniformHash(){return this.value.uuid}getInputType(){return"texture"}generate(e,t){const n=this.value;if(!n||!0!==n.isTexture)throw new Error("TextureNode: Need a three.js texture.");const i=super.generate(e,"texture");if("sampler"===t)return i+"_sampler";if(e.isReference(t))return i;{const n=e.getDataFromNode(this);let s=n.snippet;if(void 0===s){const t=this.uvNode.build(e,"vec2"),r=this.levelNode;if(null!==r){const n=r.build(e,"float");s=e.getTextureLevel(i,t,n)}else s=e.getTexture(i,t);n.snippet=s}return e.format(s,"vec4",t)}}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}},Jf=class extends Km{constructor(e,t,n=null){super(),this.property=e,this.uniformType=t,this.object=n,this.node=null,this.updateType=jm.Object,this.setNodeType(t)}setNodeType(e){this.node=new ef(null,e),this.nodeType=e,"color"===e?this.nodeType="vec3":"texture"===e&&(this.nodeType="vec4")}getNodeType(){return this.uniformType}update(e){const t=(null!==this.object?this.object:e.object)[this.property];this.node.value=t}generate(e){return this.node.build(e,this.getNodeType(e))}},Kf=class extends Jf{constructor(e,t,n=null){super(e,t,n),this.material=n}update(e){this.object=null!==this.material?this.material:e.material,super.update(e)}};class Qf extends Km{static ALPHA_TEST="alphaTest";static COLOR="color";static OPACITY="opacity";static ROUGHNESS="roughness";static METALNESS="metalness";static EMISSIVE="emissive";static ROTATION="rotation";constructor(e=Qf.COLOR){super(),this.scope=e}getNodeType(e){const t=this.scope,n=e.context.material;return t===Qf.COLOR?null!==n.map?"vec4":"vec3":t===Qf.OPACITY||t===Qf.ROTATION?"float":t===Qf.EMISSIVE?"vec3":t===Qf.ROUGHNESS||t===Qf.METALNESS?"float":void 0}generate(e,t){const n=e.context.material,i=this.scope;let s=null;if(i===Qf.ALPHA_TEST)s=new Kf("alphaTest","float");else if(i===Qf.COLOR){const e=new Kf("color","color");if(!0===n.map?.isTexture){const t=new $f(n.map);s=new Rf("*",e,t)}else s=e}else if(i===Qf.OPACITY){const e=new Kf("opacity","float");s=!0===n.alphaMap?.isTexture?new Rf("*",e,new Kf("alphaMap","texture")):e}else if(i===Qf.ROUGHNESS){const e=new Kf("roughness","float");s=!0===n.roughnessMap?.isTexture?new Rf("*",e,new If(new $f(n.roughnessMap),"g")):e}else if(i===Qf.METALNESS){const e=new Kf("metalness","float");s=!0===n.metalnessMap?.isTexture?new Rf("*",e,new If(new $f(n.metalnessMap),"b")):e}else if(i===Qf.EMISSIVE){const e=new Kf("emissive","color");s=!0===n.emissiveMap?.isTexture?new Rf("*",e,new $f(n.emissiveMap)):e}else if(i===Qf.ROTATION)s=new Kf("rotation","float");else{const t=this.getNodeType(e);s=new Kf(i,t)}return s.build(e,t)}}const eg=Qf;class tg extends Km{static GEOMETRY="geometry";static LOCAL="local";static WORLD="world";static VIEW="view";static VIEW_DIRECTION="viewDirection";constructor(e=tg.LOCAL){super("vec3"),this.scope=e}getHash(){return`position-${this.scope}`}generate(e){const t=this.scope;let n=null;if(t===tg.GEOMETRY)n=new sf("position","vec3");else if(t===tg.LOCAL)n=new nf(new tg(tg.GEOMETRY));else if(t===tg.WORLD){const e=new Of(Of.TRANSFORM_DIRECTION,new Bf(Bf.WORLD_MATRIX),new tg(tg.LOCAL));n=new nf(e)}else if(t===tg.VIEW){const e=new Rf("*",new Bf(Bf.VIEW_MATRIX),new tg(tg.LOCAL));n=new nf(e)}else if(t===tg.VIEW_DIRECTION){const e=new Of(Of.NEGATE,new tg(tg.VIEW));n=new Of(Of.NORMALIZE,new nf(e))}return n.build(e,this.getNodeType(e))}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}const ng=tg,ig=class extends Km{constructor(e=new ng){super("vec4"),this.position=e}generate(e){const t=this.position,n=new Rf("*",new kf(kf.PROJECTION_MATRIX),new Bf(Bf.VIEW_MATRIX));return new Rf("*",n,t).build(e)}},sg=class extends Km{constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}},rg=class extends Yf{constructor(e,t,n=0){super(e,t,n),this.isStorageBufferNode=!0}getInputType(){return"storageBuffer"}},ag=class extends Jf{constructor(e,t,n=null){super(e,t,n),this.userData=n}update(e){this.object=null!==this.userData?this.userData:e.object.userData,super.update(e)}},og=class extends Km{constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){return e.getFrontFacing()}},lg=class extends Km{constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.updateType=jm.Object,this.updateDispatchCount()}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let n=t[0];for(let e=1;e<t.length;e++)n*=t[e];this.dispatchCount=Math.ceil(e/n)}onInit(){}update({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addFlowCode(t)}}},cg=class extends Km{constructor(e,t,n){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const t=this.ifNode.getNodeType(e),n=this.elseNode.getNodeType(e);return e.getTypeLength(n)>e.getTypeLength(t)?n:t}generate(e){const t=this.getNodeType(e),n={tempWrite:!1},i=new Nf(null,t).build(e),s=new lf(this.condNode).build(e,"bool"),r=new lf(this.ifNode,n).build(e,t),a=new lf(this.elseNode,n).build(e,t);return e.addFlowCode(`if ( ${s} ) {\n\n\t\t${i} = ${r};\n\n\t} else {\n\n\t\t${i} = ${a};\n\n\t}`),i}},hg=class extends Km{constructor(e,t){super(),this.node=e,this.indexNode=t}getNodeType(e){return this.node.getNodeType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}},ug=class extends Km{constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const i of this.convertTo.split("|"))null!==n&&e.getTypeLength(t)!==e.getTypeLength(i)||(n=i);return n}generate(e,t){const n=this.node,i=this.getNodeType(e),s=n.build(e,i);return e.format(s,i,t)}},dg=class extends Km{constructor(e=[]){super(),this.nodes=e}getNodeType(e){return e.getTypeFromLength(this.nodes.reduce(((t,n)=>t+e.getTypeLength(n.getNodeType(e))),0))}generate(e,t){const n=this.getNodeType(e),i=this.nodes,s=[];for(const t of i){const n=t.build(e);s.push(n)}const r=`${e.getType(n)}( ${s.join(", ")} )`;return e.format(r,n,t)}},pg={construct(e,t){const n=t.shift();return e(bg(n),...t)},get:function(e,t){if("string"==typeof t&&void 0===e[t]){if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=t.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),_g(new If(e,t));if(!0===/^\d+$/.test(t))return _g(new hg(e,new of(Number(t),"uint")))}return e[t]}},mg=new WeakMap,fg=function(e){for(const t in e)e[t]=_g(e[t]);return e},gg=function(e){const t=e.length;for(let n=0;n<t;n++)e[n]=_g(e[n]);return e},xg=function(e,t=null,n=null,i=null){const s=e=>_g(null!==i?Object.assign(e,i):e);return null===t?(...t)=>s(new e(...Mg(t))):null!==n?(n=_g(n),(...i)=>s(new e(t,...Mg(i),n))):(...n)=>s(new e(t,...Mg(n)))},vg=function(e,...t){return _g(new e(...Mg(t)))},yg=new Proxy((function(e){const t={build:e=>(t.call({},e),""),call:(t,n)=>(t=bg(t),_g(e(t,n)))};return t}),pg),_g=e=>function(e){const t=typeof e;if("number"===t||"boolean"===t)return _g(Og(e));if("object"===t&&!0===e?.isNode){let t=mg.get(e);return void 0===t&&(t=new Proxy(e,pg),mg.set(e,t),mg.set(t,t)),t}return e}(e),bg=e=>new fg(e),Mg=e=>new gg(e),wg=(...e)=>new xg(...e),Sg=(...e)=>new vg(...e),Tg=[!1,!0],Eg=[0,1,2,3],Ag=[-1,-2],Cg=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Ng=new Map;for(const e of Tg)Ng.set(e,new of(e));const Lg=new Map;for(const e of Eg)Lg.set(e,new of(e,"uint"));const Rg=new Map([...Lg].map((e=>new of(e.value,"int"))));for(const e of Ag)Rg.set(e,new of(e,"int"));const Pg=new Map([...Rg].map((e=>new of(e.value))));for(const e of Cg)Pg.set(e,new of(e));for(const e of Cg)Pg.set(-e,new of(-e));const Ig={bool:Ng,uint:Lg,ints:Rg,float:Pg},Dg=new Map([...Ng,...Pg]),Og=e=>Dg.has(e)?Dg.get(e):!0===e.isNode?e:new of(e),zg=function(e,t=null){return(...n)=>{if(0===n.length)return _g(new of($m(e),e));{if("color"===e&&!0!==n[0].isNode&&(n=[$m(e,...n)]),1===n.length&&null!==t&&t.has(n[0]))return t.get(n[0]);const i=n.map(Og);return 1===i.length?_g(i[0].nodeType===e?i[0]:new ug(i[0],e)):_g(new ug(new dg(i),e))}}},Fg=e=>e.nodeType||e.convertTo||("string"==typeof e?e:null),Ug=new zg("color"),Bg=new zg("float",Ig.float),Vg=new zg("int",Ig.int),kg=new zg("uint",Ig.uint),Gg=new zg("bool",Ig.bool),Hg=new zg("vec2"),Wg=new zg("ivec2"),jg=new zg("uvec2"),Xg=new zg("bvec2"),qg=new zg("vec3"),Yg=new zg("ivec3"),Zg=new zg("uvec3"),$g=new zg("bvec3"),Jg=new zg("vec4"),Kg=new zg("ivec4"),Qg=new zg("uvec4"),ex=new zg("bvec4"),tx=new zg("mat3"),nx=new zg("imat3"),ix=new zg("umat3"),sx=new zg("bmat3"),rx=new zg("mat4"),ax=new zg("imat4"),ox=new zg("umat4"),lx=new zg("bmat4"),cx=(e,t)=>{const n=_g(new df(e,t)),i=n.call.bind(n);return n.call=(...e)=>_g(i(e.length>1||!0===e[0]?.isNode?Mg(e):bg(e[0]))),n},hx=e=>{const t=Fg(e),n=!0===e.isNode?e.node?.value||e.value:e;return _g(new ef(n,t))},ux=(e,t)=>cx(e,t).call,dx=(e,t)=>_g(new sf(e,t)),px=(e,t)=>_g(new Nf(e,Fg(t))),mx=(e,t)=>_g(new ug(_g(e),t)),fx=wg(rf),gx=wg(af),xx=wg(lf),vx=wg(hf),yx=wg(uf),_x=Sg(pf),bx=wg(Pf),Mx=bx,wx=wg(nf),Sx=Bg(1e-6),Tx=Bg(1e6),Ex=wg(cg),Ax=wg(Rf,"+"),Cx=wg(Rf,"-"),Nx=wg(Rf,"*"),Lx=wg(Rf,"/"),Rx=wg(Rf,"%"),Px=wg(Rf,"=="),Ix=wg(Rf,"="),Dx=wg(Rf,"<"),Ox=wg(Rf,">"),zx=wg(Rf,"<="),Fx=wg(Rf,">="),Ux=wg(Rf,"&&"),Bx=wg(Rf,"||"),Vx=wg(Rf,"^^"),kx=wg(Rf,"&"),Gx=wg(Rf,"|"),Hx=wg(Rf,"^"),Wx=wg(Rf,"<<"),jx=wg(Rf,">>"),Xx=wg(Of,Of.RADIANS),qx=wg(Of,Of.DEGREES),Yx=wg(Of,Of.EXP),Zx=wg(Of,Of.EXP2),$x=wg(Of,Of.LOG),Jx=wg(Of,Of.LOG2),Kx=wg(Of,Of.SQRT),Qx=wg(Of,Of.INVERSE_SQRT),ev=wg(Of,Of.FLOOR),tv=wg(Of,Of.CEIL),nv=wg(Of,Of.NORMALIZE),iv=wg(Of,Of.FRACT),sv=wg(Of,Of.SIN),rv=wg(Of,Of.COS),av=wg(Of,Of.TAN),ov=wg(Of,Of.ASIN),lv=wg(Of,Of.ACOS),cv=wg(Of,Of.ATAN),hv=wg(Of,Of.ABS),uv=wg(Of,Of.SIGN),dv=wg(Of,Of.LENGTH),pv=wg(Of,Of.NEGATE),mv=wg(Of,Of.INVERT),fv=wg(Of,Of.DFDX),gv=wg(Of,Of.DFDY),xv=wg(Of,Of.ROUND),vv=wg(Of,Of.ATAN2),yv=wg(Of,Of.MIN),_v=wg(Of,Of.MAX),bv=wg(Of,Of.MOD),Mv=wg(Of,Of.STEP),wv=wg(Of,Of.REFLECT),Sv=wg(Of,Of.DISTANCE),Tv=wg(Of,Of.DOT),Ev=wg(Of,Of.CROSS),Av=wg(Of,Of.POW),Cv=wg(Of,Of.POW,2),Nv=wg(Of,Of.POW,3),Lv=wg(Of,Of.POW,4),Rv=wg(Of,Of.TRANSFORM_DIRECTION),Pv=wg(Of,Of.MIX),Iv=(e,t=0,n=1)=>_g(new Of(Of.CLAMP,_g(e),_g(t),_g(n))),Dv=wg(Of,Of.REFRACT),Ov=wg(Of,Of.SMOOTHSTEP),zv=wg(Of,Of.FACEFORWARD),Fv=(e,t,n)=>_g(new Yf(e,Fg(t),n)),Uv=(e,t,n)=>_g(new rg(e,Fg(t),n)),Bv=Sg(kf,kf.PROJECTION_MATRIX),Vv=Sg(kf,kf.VIEW_MATRIX),kv=Sg(kf,kf.NORMAL_MATRIX),Gv=Sg(kf,kf.WORLD_MATRIX),Hv=Sg(kf,kf.POSITION),Wv=Sg(eg,eg.ALPHA_TEST),jv=Sg(eg,eg.COLOR),Xv=Sg(eg,eg.EMISSIVE),qv=Sg(eg,eg.OPACITY),Yv=Sg(eg,eg.ROUGHNESS),Zv=Sg(eg,eg.METALNESS),$v=Sg(eg,eg.ROTATION),Jv=Sg(Nf,"DiffuseColor","vec4"),Kv=Sg(Nf,"Roughness","float"),Qv=Sg(Nf,"Metalness","float"),ey=Sg(Nf,"AlphaTest","float"),ty=Sg(Nf,"SpecularColor","color"),ny=(e,t,n)=>_g(new Jf(e,Fg(t),n)),iy=(e,t,n)=>_g(new Kf(e,Fg(t),n)),sy=(e,t,n)=>_g(new ag(e,t,n)),ry=wg(ig),ay=Sg(Hf,Hf.GEOMETRY),oy=Sg(Hf,Hf.LOCAL),ly=Sg(Hf,Hf.VIEW),cy=Sg(Hf,Hf.WORLD),hy=Sg(Pf,ly,"TransformedNormalView"),uy=nv(Rv(hy,Vv)),dy=Sg(jf,jf.GEOMETRY),py=Sg(jf,jf.LOCAL),my=Sg(jf,jf.VIEW),fy=Sg(jf,jf.WORLD),gy=Sg(Pf,my,"TransformedTangentView"),xy=nv(Rv(gy,Vv)),vy=Sg(qf,qf.GEOMETRY),yy=Sg(qf,qf.LOCAL),_y=Sg(qf,qf.VIEW),by=Sg(qf,qf.WORLD),My=nv(Nx(Ev(hy,gy),dy.w)),wy=nv(Rv(My,Vv)),Sy=Sg(Bf,Bf.VIEW_MATRIX),Ty=Sg(Bf,Bf.NORMAL_MATRIX),Ey=Sg(Bf,Bf.WORLD_MATRIX),Ay=Sg(Bf,Bf.POSITION),Cy=Sg(Bf,Bf.VIEW_POSITION),Ny=Sg(ng,ng.GEOMETRY),Ly=Sg(ng,ng.LOCAL),Ry=Sg(ng,ng.WORLD),Py=Sg(ng,ng.VIEW),Iy=Sg(ng,ng.VIEW_DIRECTION),Dy=wg($f),Oy=e=>_g(new ug(!0===e.isNode?e:new $f(e),"sampler")),zy=(...e)=>_g(new Zf(...e)),Fy=Sg(sg),Uy=(e,t,n)=>_g(new lg(_g(e),t,n)),By=Sg(og),Vy=Cx(Nx(Bg(By),2),1),ky=wg(hg),Gy=qg(.2125,.7154,.0721),Hy=(e,t=Gy)=>Tv(e,t),Wy=(e,t)=>hv(Cx(e,t)),jy=Iv(Tv(hy,Iy)),Xy=tx(my,_y,ly),qy=class extends Km{constructor(){super("vec3")}getHash(){return"reflectVector"}construct(){const e=wv(pv(Iy),hy);return Rv(e,Vv)}},Yy=class extends $f{constructor(e,t=null,n=null){super(e,t,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getConstructHash(e){return`${this.uuid} / ${e.context.environmentContext?.uuid||""}`}construct(e){const t=e.getNodeProperties(this),n=this.uvNode||e.context.uvNode||new qy;let i=this.levelNode||e.context.levelNode;if(!0===i?.isNode){const t=this.value;i=e.context.levelShaderNode?e.context.levelShaderNode.call({texture:t,levelNode:i},e):i}t.uvNode=n,t.levelNode=i}generate(e,t){const{uvNode:n,levelNode:i}=e.getNodeProperties(this),s=this.value;if(!s||!0!==s.isCubeTexture)throw new Error("CubeTextureNode: Need a three.js cube texture.");const r=ef.prototype.generate.call(this,e,"cubeTexture");if("sampler"===t)return r+"_sampler";if(e.isReference(t))return r;{const s=e.getDataFromNode(this);let a=s.snippet;if(void 0===a||!1===e.context.tempRead){const t=_g(n),o=qg(pv(t.x),t.yz).build(e,"vec3");if(i){const t=i.build(e,"float");a=e.getCubeTextureLevel(r,o,t)}else a=e.getCubeTexture(r,o);s.snippet=a}return e.format(a,"vec4",t)}}},Zy=class extends Km{constructor(e){super("void"),this.instanceMesh=e;const t=Fv(e.instanceMatrix.array,"mat4",e.count);this.instanceMatrixNode=Mx(ky(t,_x))}generate(e){const{instanceMatrixNode:t}=this,n=Nx(t,Ly).xyz,i=tx(t[0].xyz,t[1].xyz,t[2].xyz),s=Lx(oy,qg(Tv(i[0],i[0]),Tv(i[1],i[1]),Tv(i[2],i[2]))),r=Nx(i,s).xyz;Ix(Ly,n).build(e),Ix(oy,r).build(e)}},$y=new yg(((e,t)=>{const{index:n,weight:i,bindMatrix:s,bindMatrixInverse:r,boneMatrices:a}=e,o=ky(a,n.x),l=ky(a,n.y),c=ky(a,n.z),h=ky(a,n.w),u=Nx(s,Ly),d=Ax(Nx(Nx(o,u),i.x),Nx(Nx(l,u),i.y),Nx(Nx(c,u),i.z),Nx(Nx(h,u),i.w)),p=Nx(r,d).xyz;let m=Ax(Nx(i.x,o),Nx(i.y,l),Nx(i.z,c),Nx(i.w,h));m=Nx(Nx(r,m),s);const f=Rv(m,oy).xyz;Ix(Ly,p).build(t),Ix(oy,f).build(t),t.hasGeometryAttribute("tangent")&&Ix(py,f).build(t)})),Jy=class extends Km{constructor(e){super("void"),this.skinnedMesh=e,this.updateType=jm.Object,this.skinIndexNode=dx("skinIndex","uvec4"),this.skinWeightNode=dx("skinWeight","vec4"),this.bindMatrixNode=hx(rx(e.bindMatrix)),this.bindMatrixInverseNode=hx(rx(e.bindMatrixInverse)),this.boneMatricesNode=Fv(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)}generate(e){$y.call({index:this.skinIndexNode,weight:this.skinWeightNode,bindMatrix:this.bindMatrixNode,bindMatrixInverse:this.bindMatrixInverseNode,boneMatrices:this.boneMatricesNode},e)}update(){this.skinnedMesh.skeleton.update()}},Ky=class extends Km{constructor(e,t){super(),this.min=e,this.max=t}getVectorLength(){const e=this.min;let t=1;return e.isVector2?t=2:e.isVector3?t=3:e.isVector4?t=4:e.isColor&&(t=3),t}getNodeType(e){return!0===e.object.isInstancedMesh?e.getTypeFromLength(this.getVectorLength()):"float"}construct(e){const{min:t,max:n}=this,{object:i,geometry:s}=e;let r=null;if(!0===i.isInstancedMesh){const a=this.getVectorLength(),o="node"+this.id,l=a*i.count,c=new Float32Array(l),h=s.getAttribute(o);if(void 0===h||h.array.length<l){if(1===a)for(let e=0;e<l;e++)c[e]=jn.lerp(t,n,Math.random());else if(t.isColor)for(let e=0;e<l;e+=3)c[e]=jn.lerp(t.r,n.r,Math.random()),c[e+1]=jn.lerp(t.g,n.g,Math.random()),c[e+2]=jn.lerp(t.b,n.b,Math.random());else for(let e=0;e<l;e++){const i=e%a,s=t.getComponent(i),r=n.getComponent(i);c[e]=jn.lerp(s,r,Math.random())}s.setAttribute(o,new sc(c,a)),s.dispose()}r=dx(o,e.getTypeFromLength(a))}else r=Bg(0);return r}},Qy=new yg((({base:e,blend:t})=>{const n=n=>Ex(Dx(t[n],Sx),t[n],_v(Cx(1,Lx(Cx(1,e[n]),t[n])),0));return qg(n("x"),n("y"),n("z"))})),e_=new yg((({base:e,blend:t})=>{const n=n=>Ex(Px(t[n],1),t[n],_v(Lx(e[n],Cx(1,t[n])),0));return qg(n("x"),n("y"),n("z"))})),t_=new yg((({base:e,blend:t})=>{const n=n=>Cx(1,Nx(Cx(1,e[n]),Cx(1,t[n])));return qg(n("x"),n("y"),n("z"))})),n_=new yg((({base:e,blend:t})=>{const n=n=>Ex(Dx(e[n],.5),Nx(2,e[n],t[n]),Cx(1,Nx(Cx(1,e[n]),Cx(1,t[n]))));return qg(n("x"),n("y"),n("z"))}));class i_ extends Km{static BURN="burn";static DODGE="dodge";static SCREEN="screen";static OVERLAY="overlay";constructor(e,t,n){super(),this.blendMode=e,this.baseNode=t,this.blendNode=n}construct(){const{blendMode:e,baseNode:t,blendNode:n}=this,i={base:t,blend:n};let s=null;return e===i_.BURN?s=Qy.call(i):e===i_.DODGE?s=e_.call(i):e===i_.SCREEN?s=t_.call(i):e===i_.OVERLAY&&(s=n_.call(i)),s}}const s_=i_,r_=new yg((({color:e,adjustment:t})=>Pv(Hy(e),e,t))),a_=new yg((({color:e,adjustment:t})=>{const n=Lx(Ax(e.r,e.g,e.b),3),i=_v(e.r,_v(e.g,e.b)),s=Nx(Cx(i,n),Nx(-3,t));return Pv(e.rgb,qg(i),s)})),o_=new yg((({color:e,adjustment:t})=>{const n=tx(.299,.587,.114,.595716,-.274453,-.321263,.211456,-.522591,.311135),i=tx(1,.9563,.621,1,-.2721,-.6474,1,-1.107,1.7046),s=Nx(n,e),r=Ax(vv(s.z,s.y),t),a=Kx(Ax(Nx(s.z,s.z),Nx(s.y,s.y)));return Nx(i,qg(s.x,Nx(a,rv(r)),Nx(a,sv(r))))}));class l_ extends cf{static SATURATION="saturation";static VIBRANCE="vibrance";static HUE="hue";constructor(e,t,n=Bg(1)){super("vec3"),this.method=e,this.colorNode=t,this.adjustmentNode=n}construct(){const{method:e,colorNode:t,adjustmentNode:n}=this,i={color:t,adjustment:n};let s=null;return e===l_.SATURATION?s=r_.call(i):e===l_.VIBRANCE?s=a_.call(i):e===l_.HUE?s=o_.call(i):console.error(`${this.type}: Method "${this.method}" not supported!`),s}}const c_=l_,h_={LinearToLinear:new yg((e=>e.value)),LinearTosRGB:new yg((e=>{const{value:t}=e,n=t.rgb,i=Cx(Nx(Av(t.rgb,qg(.41666)),1.055),qg(.055)),s=Nx(n,12.92),r=qg(zx(n,qg(.0031308))),a=Pv(i,s,r);return Jg(a,t.a)}))};class u_ extends Km{static LINEAR_TO_LINEAR="LinearToLinear";static LINEAR_TO_SRGB="LinearTosRGB";constructor(e,t){super("vec4"),this.method=e,this.node=t}fromEncoding(e){let t=null;return e===qt?t="Linear":e===Yt&&(t="sRGB"),this.method="LinearTo"+t,this}construct(){const e=this.method,t=this.node;let n=null;return n=e!==u_.LINEAR_TO_LINEAR?h_[e].call({value:t}):t,n}}const d_=u_,p_=new yg((e=>{const{eye_pos:t,surf_norm:n,mapN:i,uv:s}=e,r=fv(t.xyz),a=gv(t.xyz),o=fv(s.st),l=gv(s.st),c=n,h=Ev(a,c),u=Ev(c,r),d=Ax(Nx(h,o.x),Nx(u,l.x)),p=Ax(Nx(h,o.y),Nx(u,l.y)),m=_v(Tv(d,d),Tv(p,p)),f=Nx(Vy,Qx(m));return nv(Ax(Nx(d,Nx(i.x,f)),Nx(p,Nx(i.y,f)),Nx(c,i.z)))})),m_=class extends cf{constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Jt}construct(e){const{normalMapType:t,scaleNode:n}=this,i=Nx(this.node,2);let s=Cx(i,1);if(null!==n){const e=Nx(s.xy,n);s=qg(e,s.z)}let r=null;return t===Kt?r=nv(Nx(Ty,s)):t===Jt&&(r=!0===e.hasGeometryAttribute("tangent")?nv(Nx(Xy,s)):p_.call({eye_pos:Py,surf_norm:ly,mapN:s,uv:zy()})),r}},f_=new yg((({color:e,exposure:t})=>Nx(e,t))),g_=class extends Km{constructor(e,t=Bg(1),n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}construct(e){const t=this.color||e.context.color,n=this.toneMapping,i={exposure:this.exposureNode,color:t};let s=null;return s=n===me?f_.call(i):this.colorNode,s}},x_=class extends Km{constructor(){super("vec3")}generate(){console.warn("Abstract function.")}},v_=class extends x_{constructor(e=null){super(),this.updateType=jm.Object,this.light=e,this.colorNode=hx(new li)}getHash(){return this.light.uuid}update(){const{light:e}=this;this.colorNode.value.copy(e.color).multiplyScalar(e.intensity)}},y_=new WeakMap,__=class extends Km{constructor(e=[]){super("vec3"),this.lightNodes=e,this._hash=null}get hasLight(){return this.lightNodes.length>0}construct(e){const t=this.lightNodes;for(const n of t)n.build(e)}getHash(e){if(null===this._hash){let t="";const n=this.lightNodes;for(const i of n)t+=i.getHash(e)+" ";this._hash=t}return this._hash}getLightNodeByHash(e){const t=this.lightNodes;for(const n of t)if(n.light.uuid===e)return n;return null}fromLights(e){const t=[];e=(e=>e.sort(((e,t)=>e.id-t.id)))(e);for(const n of e){let e=this.getLightNodeByHash(n.uuid);if(null===e){const t=n.constructor;e=new(y_.has(t)?y_.get(t):x_)(n)}t.push(e)}return this.lightNodes=t,this._hash=null,this}static setReference(e,t){y_.set(e,t)}},b_=new yg((e=>{const{lightDistance:t,cutoffDistance:n,decayExponent:i}=e,s=Lx(1,_v(Av(t,i),.01));return Ex(Ox(n,0),Nx(s,Cv(Iv(Cx(1,Lv(Lx(t,n)))))),s)}));class M_ extends v_{constructor(e=null){super(e),this.cutoffDistanceNode=hx(0),this.decayExponentNode=hx(0)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}construct(e){const{colorNode:t,cutoffDistanceNode:n,decayExponentNode:i}=this,s=new Ff(Ff.VIEW_POSITION,this.light),r=Cx(s,Py),a=nv(r),o=dv(r),l=b_.call({lightDistance:o,cutoffDistance:n,decayExponent:i}),c=Nx(t,l),h=e.context.lightingModelNode,u=e.context.reflectedLight;h?.direct&&h.direct.call({lightDirection:a,lightColor:c,reflectedLight:u},e)}}__.setReference(nd,M_);const w_=M_,S_=class extends lf{constructor(e,t=null){super(e),this.lightingModelNode=t}getNodeType(){return"vec3"}construct(e){const{lightingModelNode:t}=this,n=this.context={},i=e.getNodeProperties(this),s=Mx(qg()),r=Mx(qg()),a=Mx(qg()),o=Mx(qg()),l={directDiffuse:s,directSpecular:r,indirectDiffuse:a,indirectSpecular:o,total:Ax(s,r,a,o)},c={radiance:Mx(qg()),irradiance:Mx(qg()),iblIrradiance:Mx(qg()),ambientOcclusion:Mx(Bg(1))};return Object.assign(i,l,c),Object.assign(n,c),n.reflectedLight=l,n.lightingModelNode=t||n.lightingModelNode,t?.indirectDiffuse&&t.indirectDiffuse.call(n),t?.indirectSpecular&&t.indirectSpecular.call(n),t?.ambientOcclusion&&t.ambientOcclusion.call(n),super.construct(e)}generate(e){const{context:t}=this,n=this.getNodeType(e);return super.generate(e,n),t.reflectedLight.total.build(e,n)}};class T_ extends v_{constructor(e=null){super(e),this.lightPositionNode=new Ff(Ff.POSITION),this.lightDirectionNode=nv(this.lightPositionNode),this.groundColorNode=hx(new li)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}generate(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:i}=this,s=Tv(ly,i),r=Ax(Nx(.5,s),.5),a=Pv(n,t,r);e.context.irradiance.add(a)}}__.setReference(ju,T_);const E_=T_,A_=class extends ef{constructor(e){super(0),this.texture=e,this.updateType=jm.Frame}update(){const e=this.texture.images,t=e&&e.length>0?e[0]?.image||e[0]:this.texture.image;if(void 0!==t?.width){const{width:e,height:n}=t;this.value=Math.log2(Math.max(e,n))}}},C_=new yg((({texture:e,levelNode:t})=>{const n=new A_(e),i=Lx(Nx(Math.PI,Nx(t,t)),Ax(1,t)),s=Ax(n,Jx(i));return Iv(s,0,n)})),N_=class extends x_{constructor(e=null){super(),this.envNode=e}construct(e){const t=this.envNode,n=e.getNodeProperties(this);let i=wv(pv(Iy),hy);i=nv(Pv(i,hy,Nx(Kv,Kv))),i=Rv(i,Vv);const s=new lf(t,{tempRead:!1,uvNode:i,levelNode:Kv,levelShaderNode:C_}),r=new lf(t,{tempRead:!1,uvNode:uy,levelNode:Bg(1),levelShaderNode:C_});s.context.environmentContext=s,r.context.environmentContext=r,e.context.radiance.add(s),e.context.iblIrradiance.add(Nx(Math.PI,r)),n.radianceContext=s,n.irradianceContext=r}},L_=class extends x_{constructor(e=null){super(),this.aoNode=e}construct(e){const t=Ax(Nx(Cx(Bg(this.aoNode),1),1),1);e.context.ambientOcclusion.mul(t)}},R_=class extends cf{constructor(){super("vec2")}generate(e){const t=nv(qg(Iy.z,0,pv(Iy.x))),n=Ev(Iy,t);return Ax(Nx(Hg(Tv(t,hy),Tv(n,hy)),.495),.5).build(e,this.getNodeType(e))}};class P_ extends ef{static LOCAL="local";static GLOBAL="global";static DELTA="delta";static FRAME="frame";constructor(e=P_.LOCAL,t=1,n=0){super(n),this.scope=e,this.scale=t,this.updateType=jm.Frame}update(e){const t=this.scope,n=this.scale;t===P_.LOCAL?this.value+=e.deltaTime*n:this.value=t===P_.DELTA?e.deltaTime*n:t===P_.FRAME?e.frameId:e.time*n}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}const I_=P_;class D_ extends Km{static SINE="sine";static SQUARE="square";static TRIANGLE="triangle";static SAWTOOTH="sawtooth";constructor(e=D_.SINE,t=new I_){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}construct(){const e=this.method,t=this.timeNode;let n=null;return e===D_.SINE?n=Ax(Nx(sv(Nx(Ax(t,.75),2*Math.PI)),.5),.5):e===D_.SQUARE?n=xv(iv(t)):e===D_.TRIANGLE?n=hv(Cx(1,Nx(iv(Ax(t,.5)),2))):e===D_.SAWTOOTH&&(n=iv(t)),n}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}const O_=D_,z_=class extends Km{constructor(e,t,n,i,s){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=i,this.outHighNode=s,this.doClamp=!0}construct(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:i,outHighNode:s,doClamp:r}=this;let a=Lx(Cx(e,t),Cx(n,t));return!0===r&&(a=Iv(a)),Ax(Nx(Cx(s,i),a),i)}},F_=class extends cf{constructor(e,t,n=Hg(.5)){super("vec2"),this.uvNode=e,this.rotationNode=t,this.centerNode=n}construct(){const{uvNode:e,rotationNode:t,centerNode:n}=this,i=rv(t),s=sv(t);return Hg(Ax(Ax(Nx(i,Cx(e.x,n.x)),Nx(s,Cx(e.y,n.y))),n.x),Ax(Cx(Nx(i,Cx(e.y,n.y)),Nx(s,Cx(e.x,n.x))),n.y))}},U_=class extends Km{constructor(e,t=new Zf,n=new of(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=n}generate(e){const t=this.countNode,n=this.uvNode,i=this.frameNode,s=new of(1),r=new If(t,"x"),a=new If(t,"y"),o=new Rf("*",r,a),l=new Of(Of.FLOOR,new Of(Of.MOD,i,o)),c=new Rf("+",l,s),h=new Of(Of.MOD,l,r),u=new Of(Of.CEIL,new Rf("/",c,r)),d=new Rf("-",a,u),p=new Rf("/",s,t),m=new dg([new Rf("*",h,new If(p,"x")),new Rf("*",d,new If(p,"y"))]),f=new Rf("*",n,p);return new Rf("+",f,m).build(e,this.getNodeType(e))}},B_=class extends Du{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=new Fu(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(n=>{try{t(this.parse(JSON.parse(n)))}catch(t){i?i(t):console.error(t),this.manager.itemError(e)}}),n,i)}parseNodes(e){const t={};if(void 0!==e){for(const n of e){const{uuid:e,type:i}=n;t[e]=ZM(i),t[e].uuid=e}const n={nodes:t,textures:this.textures};for(const i of e)i.meta=n,t[i.uuid].deserialize(i),delete i.meta}return t}parse(e){const t=ZM(e.type);t.uuid=e.uuid;const n={nodes:this.parseNodes(e.inputNodes),textures:this.textures};return e.meta=n,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}},V_=new yg((e=>{const t=Nx(e.uv,2),n=ev(t.x),i=ev(t.y),s=bv(Ax(n,i),2);return uv(s)})),k_=class extends cf{constructor(e=zy()){super("float"),this.uvNode=e}generate(e){return V_.call({uv:this.uvNode}).build(e)}},G_=class extends Km{constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}mix(e){return new Of(Of.MIX,e,this.colorNode,this)}generate(e){return this.factorNode.build(e,"float")}},H_=class extends G_{constructor(e,t,n){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=n}generate(e){return this.factorNode=Ov(this.nearNode,this.farNode,pv(Py.z)),super.generate(e)}},W_=new yg((e=>{const{f0:t,f90:n,dotVH:i}=e,s=Zx(Nx(Cx(Nx(-5.55473,i),6.98316),i));return Ax(Nx(t,Cx(1,s)),Nx(n,s))})),j_=new yg((e=>{const{alpha:t,dotNL:n,dotNV:i}=e,s=Cv(t),r=Nx(n,Kx(Ax(s,Nx(Cx(1,s),Cv(i))))),a=Nx(i,Kx(Ax(s,Nx(Cx(1,s),Cv(n)))));return Lx(.5,_v(Ax(r,a),Sx))})),X_=j_,q_=new yg((e=>{const{alpha:t,dotNH:n}=e,i=Cv(t),s=Ax(Nx(Cv(n),Cx(i,1)),1);return Nx(1/Math.PI,Lx(i,Cv(s)))})),Y_=new yg((e=>{const{lightDirection:t,f0:n,f90:i,roughness:s}=e,r=Cv(s),a=nv(Ax(t,Iy)),o=Iv(Tv(hy,t)),l=Iv(Tv(hy,a)),c=Iv(Tv(Iy,a)),h=W_.call({f0:n,f90:i,dotVH:c}),u=X_.call({alpha:r,dotNL:o,dotNV:jy}),d=q_.call({alpha:r,dotNH:l});return Nx(h,Nx(u,d))})),Z_=Y_,$_=new yg((e=>Nx(1/Math.PI,e.diffuseColor))),J_=new yg((e=>{const{roughness:t}=e,n=Jg(-1,-.0275,-.572,.022),i=Jg(1,.0425,1.04,-.04),s=Ax(Nx(t,n),i),r=Ax(Nx(yv(Nx(s.x,s.x),Zx(Nx(-9.28,jy))),s.x),s.y);return Ax(Nx(Hg(-1.04,1.04),r),s.zw)})),K_=J_,Q_=new yg((()=>{const e=_v(hv(fv(ay)),hv(gv(ay)));return _v(_v(e.x,e.y),e.z)})),eb=new yg((e=>{const{roughness:t}=e,n=Q_.call();let i=_v(t,.0525);return i=Ax(i,n),i=yv(i,1),i})),tb=eb,nb=new yg((e=>{const{radiance:t,iblIrradiance:n,reflectedLight:i}=e,s=Mx(qg()),r=Mx(qg()),a=Nx(n,1/Math.PI);((e,t,n=1)=>{const i=K_.call({roughness:Kv}),s=Ax(Nx(ty,i.x),Nx(n,i.y)),r=Ax(i.x,i.y),a=Cx(1,r),o=Ax(ty,Nx(Cx(1,ty),.047619)),l=Lx(Nx(s,o),Cx(1,Nx(a,o)));e.add(s),t.add(Nx(l,a))})(s,r);const o=Nx(Jv,Cx(1,Ax(s,r)));i.indirectSpecular.add(Nx(t,s)),i.indirectSpecular.add(Nx(r,a)),i.indirectDiffuse.add(Nx(o,a))})),ib=new yg((e=>{const{irradiance:t,reflectedLight:n}=e;n.indirectDiffuse.add(Nx(t,$_.call({diffuseColor:Jv})))})),sb={direct:new yg((e=>{const{lightDirection:t,lightColor:n,reflectedLight:i}=e,s=Iv(Tv(hy,t)),r=Nx(s,n);i.directDiffuse.add(Nx(r,$_.call({diffuseColor:Jv.rgb}))),i.directSpecular.add(Nx(r,Z_.call({lightDirection:t,f0:ty,f90:1,roughness:Kv})))})),indirectDiffuse:ib,indirectSpecular:nb,ambientOcclusion:new yg((({ambientOcclusion:e,reflectedLight:t})=>{const n=Ax(jy,e),i=Zx(Cx(Nx(-16,Kv),1)),s=Iv(Ax(Cx(Av(n,i),1),e));t.indirectDiffuse.mul(e),t.indirectSpecular.mul(s)}))},rb=wg(Yy),ab=wg(Zy),ob=Sg(qy),lb=wg(Jy),cb=wg(s_,s_.BURN),hb=wg(s_,s_.DODGE),ub=wg(s_,s_.OVERLAY),db=wg(s_,s_.SCREEN),pb=wg(c_,c_.SATURATION),mb=wg(c_,c_.VIBRANCE),fb=wg(c_,c_.HUE),gb=(e,t)=>_g(new d_(null,_g(e)).fromEncoding(t)),xb=wg(m_),vb=(e,t,n)=>_g(new g_(e,_g(t),_g(n))),yb=e=>_g((new __).fromLights(e)),_b=wg(S_),bb=Sg(R_),Mb=wg(A_),wb=wg(O_,O_.SINE),Sb=wg(O_,O_.SQUARE),Tb=wg(O_,O_.TRIANGLE),Eb=wg(O_,O_.SAWTOOTH),Ab=wg(z_,null,null,{doClamp:!1}),Cb=wg(z_),Nb=wg(F_),Lb=wg(U_),Rb=(e,t=0)=>_g(new I_(I_.LOCAL,e,t)),Pb=(e,t=0)=>_g(new I_(I_.GLOBAL,e,t)),Ib=(e,t=0)=>_g(new I_(I_.DELTA,e,t)),Db=Sg(I_,I_.FRAME),Ob=(e,t)=>_g(new Ky(e,t)),zb=wg(k_),Fb=wg(G_),Ub=wg(H_),Bb=class extends Lr{constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.name,this.lights=!0}build(e){this.generatePosition(e);const{lightsNode:t}=this,{diffuseColorNode:n}=this.generateDiffuseColor(e),i=this.generateLight(e,{diffuseColorNode:n,lightsNode:t});this.generateOutput(e,{diffuseColorNode:n,outgoingLightNode:i})}customProgramCacheKey(){return qm(this)}generatePosition(e){const t=e.object;let n=Ly;null!==this.positionNode&&(n=fx(n,Ix(Ly,this.positionNode))),!0===t.instanceMatrix?.isInstancedBufferAttribute&&!0===e.isAvailable("instance")&&(n=fx(n,ab(t))),!0===t.isSkinnedMesh&&(n=fx(n,lb(t))),e.context.vertex=n,e.addFlow("vertex",ry())}generateDiffuseColor(e){let t=Jg(this.colorNode||jv),n=this.opacityNode?Bg(this.opacityNode):qv;t=e.addFlow("fragment",bx(t,"Color"));const i=e.addFlow("fragment",bx(t,"DiffuseColor"));if(n=e.addFlow("fragment",bx(n,"OPACITY")),e.addFlow("fragment",Ix(i.a,Nx(i.a,n))),this.alphaTestNode||this.alphaTest>0){const t=this.alphaTestNode?Bg(this.alphaTestNode):Wv;e.addFlow("fragment",bx(t,"AlphaTest")),e.addFlow("fragment",new hf("if ( DiffuseColor.a <= AlphaTest ) { discard; }"))}return{colorNode:t,diffuseColorNode:i}}generateLight(e,{diffuseColorNode:t,lightingModelNode:n,lightsNode:i=e.lightsNode}){let s=t.xyz;return i&&!1!==i.hasLight&&(s=e.addFlow("fragment",bx(_b(i,n),"Light"))),s}generateOutput(e,{diffuseColorNode:t,outgoingLightNode:n}){let i=Jg(n,t.a);return i=gb(i,e.renderer.outputEncoding),e.fogNode&&(i=Jg(qg(e.fogNode.mix(i)),i.w)),e.addFlow("fragment",bx(i,"Output")),i}setDefaultValues(e){for(const t in e){const n=e[t];void 0===this[t]&&(this[t]=n?.clone?.()||n)}Object.assign(this.defines,e.defines)}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const n=Us.prototype.toJSON.call(this,e),i=Ym(this);n.inputNodes={};for(const t of i)n.inputNodes[t]=this[t].toJSON(e).uuid;function s(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(t){const t=s(e.textures),i=s(e.images),r=s(e.nodes);t.length>0&&(n.textures=t),i.length>0&&(n.images=i),r.length>0&&(n.nodes=r)}return n}static fromMaterial(){}},Vb=new hc,kb=class extends Bb{constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.positionNode=null,this.setDefaultValues(Vb),this.setValues(e)}copy(e){return this.colorNode=e.colorNode,this.opacityNode=e.opacityNode,this.alphaTestNode=e.alphaTestNode,this.lightNode=e.lightNode,this.positionNode=e.positionNode,super.copy(e)}},Gb=new Bs,Hb=class extends Bb{constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.positionNode=null,this.setDefaultValues(Gb),this.setValues(e)}copy(e){return this.colorNode=e.colorNode,this.opacityNode=e.opacityNode,this.alphaTestNode=e.alphaTestNode,this.lightNode=e.lightNode,this.positionNode=e.positionNode,super.copy(e)}},Wb=new nu;class jb extends Bb{constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.normalNode=null,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.envNode=null,this.lightsNode=null,this.positionNode=null,this.setDefaultValues(Wb),this.setValues(e)}build(e){this.generatePosition(e);const t=this.generateDiffuseColor(e),{colorNode:n}=t;let{diffuseColorNode:i}=t;const s=this.envNode||e.scene.environmentNode;i=this.generateStandardMaterial(e,{colorNode:n,diffuseColorNode:i}),this.lightsNode&&(e.lightsNode=this.lightsNode);const r=[];s&&r.push(new N_(s)),e.material.aoMap&&r.push(new L_(Dy(e.material.aoMap))),r.length>0&&(e.lightsNode=new __([...e.lightsNode.lightNodes,...r]));const a=this.generateLight(e,{diffuseColorNode:i,lightingModelNode:sb});this.generateOutput(e,{diffuseColorNode:i,outgoingLightNode:a})}generateStandardMaterial(e,{colorNode:t,diffuseColorNode:n}){const{material:i}=e;let s=this.metalnessNode?Bg(this.metalnessNode):Zv;s=e.addFlow("fragment",bx(s,"Metalness")),e.addFlow("fragment",Ix(n,Jg(Nx(n.rgb,mv(s)),n.a)));let r=this.roughnessNode?Bg(this.roughnessNode):Yv;r=tb.call({roughness:r}),e.addFlow("fragment",bx(r,"Roughness"));const a=Pv(qg(.04),t.rgb,s);e.addFlow("fragment",bx(a,"SpecularColor"));const o=this.normalNode?qg(this.normalNode):i.normalMap?new m_(Dy(i.normalMap),hx(i.normalScale)):ly;return e.addFlow("fragment",bx(o,"TransformedNormalView")),n}generateLight(e,{diffuseColorNode:t,lightingModelNode:n,lightsNode:i=e.lightsNode}){const s=e.renderer;let r=super.generateLight(e,{diffuseColorNode:t,lightingModelNode:n,lightsNode:i});return r=Ax(qg(this.emissiveNode||Xv),r),s.toneMappingNode&&(r=xx(s.toneMappingNode,{color:r})),r}copy(e){return this.colorNode=e.colorNode,this.opacityNode=e.opacityNode,this.alphaTestNode=e.alphaTestNode,this.normalNode=e.normalNode,this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,this.envNode=e.envNode,this.lightsNode=e.lightsNode,this.positionNode=e.positionNode,super.copy(e)}}const Xb=new bc,qb=class extends Bb{constructor(e){super(),this.isPointsNodeMaterial=!0,this.transparent=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.sizeNode=null,this.positionNode=null,this.setDefaultValues(Xb),this.setValues(e)}copy(e){return this.colorNode=e.colorNode,this.opacityNode=e.opacityNode,this.alphaTestNode=e.alphaTestNode,this.lightNode=e.lightNode,this.sizeNode=e.sizeNode,this.positionNode=e.positionNode,super.copy(e)}},Yb=new Cl,Zb=class extends Bb{constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!0,this.colorNode=null,this.opacityNode=null,this.alphaTestNode=null,this.lightNode=null,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(Yb),this.setValues(e)}generatePosition(e){const{positionNode:t,rotationNode:n,scaleNode:i}=this,s=Ly;let r=Nx(Sy,t?Jg(t.xyz,1):Jg(0,0,0,1)),a=Hg(dv(qg(Ey[0].x,Ey[0].y,Ey[0].z)),dv(qg(Ey[1].x,Ey[1].y,Ey[1].z)));null!==i&&(a=Nx(a,i));let o=s.xy;!0===e.object.center?.isVector2&&(o=Cx(o,Cx(hx(e.object.center),Hg(.5)))),o=Nx(o,a);const l=n||$v,c=Hg(Cx(Nx(rv(l),o.x),Nx(sv(l),o.y)),Ax(Nx(sv(l),o.x),Nx(rv(l),o.y)));r=Jg(Ax(r.xy,c.xy),r.z,r.w);const h=Nx(Bv,r);e.context.vertex=s,e.addFlow("vertex",h)}copy(e){return this.colorNode=e.colorNode,this.opacityNode=e.opacityNode,this.alphaTestNode=e.alphaTestNode,this.lightNode=e.lightNode,this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}},$b=cd.createMaterialFromType;cd.createMaterialFromType=function(e){const t={NodeMaterial:Bb,LineBasicNodeMaterial:kb,MeshBasicNodeMaterial:Hb,MeshStandardNodeMaterial:jb,PointsNodeMaterial:qb,SpriteNodeMaterial:Zb};return void 0!==t[e]?new t[e]:$b.call(this,e)};const Jb=class extends cd{constructor(e){super(e),this.nodes={}}parse(e){const t=super.parse(e),n=this.nodes,i=e.inputNodes;for(const e in i){const s=i[e];t[e]=n[s]}return t}setNodes(e){return this.nodes=e,this}},Kb=class extends pd{constructor(e){super(e),this._nodesJSON=null}parse(e,t){this._nodesJSON=e.nodes;const n=super.parse(e,t);return this._nodesJSON=null,n}parseNodes(e,t){if(void 0!==e){const n=new B_;return n.setTextures(t),n.parseNodes(e)}return{}}parseMaterials(e,t){const n={};if(void 0!==e){const i=this.parseNodes(this._nodesJSON,t),s=new Jb;s.setTextures(t),s.setNodes(i);for(let t=0,i=e.length;t<i;t++){const i=e[t];n[i.uuid]=s.parse(i)}}return n}},Qb=class{parseFunction(){console.warn("Abstract function.")}};class eM{constructor(e,t,n="",i=""){this.type=e,this.inputs=t,this.name=n,this.presicion=i}getCode(){console.warn("Abstract function.")}}eM.isNodeFunction=!0;const tM=eM,nM=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+)?/i,iM=/[a-z_0-9]+/gi,sM={f32:"float"},rM=class extends tM{constructor(e){const{type:t,inputs:n,name:i,inputsCode:s,blockCode:r}=(e=>{const t=(e=e.trim()).match(nM);if(null!==t&&4===t.length){const n=t[2],i=[];let s=null;for(;null!==(s=iM.exec(n));)i.push(s);const r=[];let a=0;for(;a<i.length;){const e=i[a++][0];let t=i[a++][0];t=sM[t]||t,a<i.length&&!0===/^[fui]\d{2}$/.test(i[a][0])&&a++,r.push(new Cf(t,e))}const o=e.substring(t[0].length),l=void 0!==t[1]?t[1]:"";return{type:t[3]||"void",inputs:r,name:l,inputsCode:n,blockCode:o}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,n,i),this.inputsCode=s,this.blockCode=r}getCode(e=this.name){const t="void"!==this.type?"-> "+this.type:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}},aM=class extends Qb{parseFunction(e){return new rM(e)}},oM=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,lM=/[a-z_0-9]+/gi,cM="#pragma main",hM=class extends tM{constructor(e){const{type:t,inputs:n,name:i,presicion:s,inputsCode:r,blockCode:a,headerCode:o}=(e=>{const t=(e=e.trim()).indexOf(cM),n=-1!==t?e.slice(t+cM.length):e,i=n.match(oM);if(null!==i&&5===i.length){const s=i[4],r=[];let a=null;for(;null!==(a=lM.exec(s));)r.push(a);const o=[];let l=0;for(;l<r.length;){const e="const"===r[l][0];!0===e&&l++;let t=r[l][0];"in"===t||"out"===t||"inout"===t?l++:t="";const n=r[l++][0];let i=Number.parseInt(r[l][0]);!1===Number.isNaN(i)?l++:i=null;const s=r[l++][0];o.push(new Cf(n,s,i,t,e))}const c=n.substring(i[0].length),h=void 0!==i[3]?i[3]:"";return{type:i[2],inputs:o,name:h,presicion:void 0!==i[1]?i[1]:"",inputsCode:s,blockCode:c,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,n,i,s),this.inputsCode=r,this.blockCode=a,this.headerCode=o}getCode(e=this.name){let t;const n=this.blockCode;if(""!==n){const{type:i,inputsCode:s,headerCode:r,presicion:a}=this;let o=`${i} ${e} ( ${s.trim()} )`;""!==a&&(o=`${a} ${o}`),t=r+o+n}else t="";return t}},uM=class extends Qb{parseFunction(e){return new hM(e)}},dM=new iu;class pM extends jb{constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.sheen=0,this.clearcoat=0,this.iridescence=0,this.transmission=0,this.setDefaultValues(dM),this.setValues(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,super.copy(e)}}Bb.fromMaterial=function(e){const t={NodeMaterial:Bb,LineBasicNodeMaterial:kb,MeshBasicNodeMaterial:Hb,MeshStandardNodeMaterial:jb,MeshPhysicalNodeMaterial:pM,PointsNodeMaterial:qb,SpriteNodeMaterial:Zb},n=e.type.replace("Material","NodeMaterial");if(void 0===t[n])return e;const i=new t[n](e);for(const t in e)void 0===i[t]&&(i[t]=e[t]);return i};const mM=[gx('float mx_select(bool b, float t, float f)\n{\n    return b ? t : f;\n}\n\nfloat mx_negate_if(float val, bool b)\n{\n    return b ? -val : val;\n}\n\nint mx_floor(float x)\n{\n    return int(floor(x));\n}\n\n// return mx_floor as well as the fractional remainder\nfloat mx_floorfrac(float x, out int i)\n{\n    i = mx_floor(x);\n    return x - float(i);\n}\n\nfloat mx_bilerp(float v0, float v1, float v2, float v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nvec3 mx_bilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, float s, float t)\n{\n    float s1 = 1.0 - s;\n    return (1.0 - t) * (v0*s1 + v1*s) + t * (v2*s1 + v3*s);\n}\nfloat mx_trilerp(float v0, float v1, float v2, float v3, float v4, float v5, float v6, float v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\nvec3 mx_trilerp(vec3 v0, vec3 v1, vec3 v2, vec3 v3, vec3 v4, vec3 v5, vec3 v6, vec3 v7, float s, float t, float r)\n{\n    float s1 = 1.0 - s;\n    float t1 = 1.0 - t;\n    float r1 = 1.0 - r;\n    return (r1*(t1*(v0*s1 + v1*s) + t*(v2*s1 + v3*s)) +\n            r*(t1*(v4*s1 + v5*s) + t*(v6*s1 + v7*s)));\n}\n\n// 2 and 3 dimensional gradient functions - perform a dot product against a\n// randomly chosen vector. Note that the gradient vector is not normalized, but\n// this only affects the overal "scale" of the result, so we simply account for\n// the scale by multiplying in the corresponding "perlin" function.\nfloat mx_gradient_float(uint hash, float x, float y)\n{\n    // 8 possible directions (+-1,+-2) and (+-2,+-1)\n    uint h = hash & 7u;\n    float u = mx_select(h<4u, x, y);\n    float v = 2.0 * mx_select(h<4u, y, x);\n    // compute the dot product with (x,y).\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nfloat mx_gradient_float(uint hash, float x, float y, float z)\n{\n    // use vectors pointing to the edges of the cube\n    uint h = hash & 15u;\n    float u = mx_select(h<8u, x, y);\n    float v = mx_select(h<4u, y, mx_select((h==12u)||(h==14u), x, z));\n    return mx_negate_if(u, bool(h&1u)) + mx_negate_if(v, bool(h&2u));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y)\n{\n    return vec3(mx_gradient_float(hash.x, x, y), mx_gradient_float(hash.y, x, y), mx_gradient_float(hash.z, x, y));\n}\nvec3 mx_gradient_vec3(uvec3 hash, float x, float y, float z)\n{\n    return vec3(mx_gradient_float(hash.x, x, y, z), mx_gradient_float(hash.y, x, y, z), mx_gradient_float(hash.z, x, y, z));\n}\n// Scaling factors to normalize the result of gradients above.\n// These factors were experimentally calculated to be:\n//    2D:   0.6616\n//    3D:   0.9820\nfloat mx_gradient_scale2d(float v) { return 0.6616 * v; }\nfloat mx_gradient_scale3d(float v) { return 0.9820 * v; }\nvec3 mx_gradient_scale2d(vec3 v) { return 0.6616 * v; }\nvec3 mx_gradient_scale3d(vec3 v) { return 0.9820 * v; }\n\n/// Bitwise circular rotation left by k bits (for 32 bit unsigned integers)\nuint mx_rotl32(uint x, int k)\n{\n    return (x<<k) | (x>>(32-k));\n}\n\nvoid mx_bjmix(inout uint a, inout uint b, inout uint c)\n{\n    a -= c; a ^= mx_rotl32(c, 4); c += b;\n    b -= a; b ^= mx_rotl32(a, 6); a += c;\n    c -= b; c ^= mx_rotl32(b, 8); b += a;\n    a -= c; a ^= mx_rotl32(c,16); c += b;\n    b -= a; b ^= mx_rotl32(a,19); a += c;\n    c -= b; c ^= mx_rotl32(b, 4); b += a;\n}\n\n// Mix up and combine the bits of a, b, and c (doesn\'t change them, but\n// returns a hash of those three original values).\nuint mx_bjfinal(uint a, uint b, uint c)\n{\n    c ^= b; c -= mx_rotl32(b,14);\n    a ^= c; a -= mx_rotl32(c,11);\n    b ^= a; b -= mx_rotl32(a,25);\n    c ^= b; c -= mx_rotl32(b,16);\n    a ^= c; a -= mx_rotl32(c,4);\n    b ^= a; b -= mx_rotl32(a,14);\n    c ^= b; c -= mx_rotl32(b,24);\n    return c;\n}\n\n// Convert a 32 bit integer into a floating point number in [0,1]\nfloat mx_bits_to_01(uint bits)\n{\n    return float(bits) / float(uint(0xffffffff));\n}\n\nfloat mx_fade(float t)\n{\n   return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n\nuint mx_hash_int(int x)\n{\n    uint len = 1u;\n    uint seed = uint(0xdeadbeef) + (len << 2u) + 13u;\n    return mx_bjfinal(seed+uint(x), seed, seed);\n}\n\nuint mx_hash_int(int x, int y)\n{\n    uint len = 2u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z)\n{\n    uint len = 3u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx)\n{\n    uint len = 4u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    return mx_bjfinal(a, b, c);\n}\n\nuint mx_hash_int(int x, int y, int z, int xx, int yy)\n{\n    uint len = 5u;\n    uint a, b, c;\n    a = b = c = uint(0xdeadbeef) + (len << 2u) + 13u;\n    a += uint(x);\n    b += uint(y);\n    c += uint(z);\n    mx_bjmix(a, b, c);\n    a += uint(xx);\n    b += uint(yy);\n    return mx_bjfinal(a, b, c);\n}\n\nuvec3 mx_hash_vec3(int x, int y)\n{\n    uint h = mx_hash_int(x, y);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nuvec3 mx_hash_vec3(int x, int y, int z)\n{\n    uint h = mx_hash_int(x, y, z);\n    // we only need the low-order bits to be random, so split out\n    // the 32 bit result into 3 parts for each channel\n    uvec3 result;\n    result.x = (h      ) & 0xFFu;\n    result.y = (h >> 8 ) & 0xFFu;\n    result.z = (h >> 16) & 0xFFu;\n    return result;\n}\n\nfloat mx_perlin_noise_float(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float result = mx_bilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  ), fx    , fy     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nfloat mx_perlin_noise_float(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    float result = mx_trilerp(\n        mx_gradient_float(mx_hash_int(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_float(mx_hash_int(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_float(mx_hash_int(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_float(mx_hash_int(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec2 p)\n{\n    int X, Y;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    vec3 result = mx_bilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  ), fx    , fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  ), fx-1.0, fy     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1), fx    , fy-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1), fx-1.0, fy-1.0),\n        u, v);\n    return mx_gradient_scale2d(result);\n}\n\nvec3 mx_perlin_noise_vec3(vec3 p)\n{\n    int X, Y, Z;\n    float fx = mx_floorfrac(p.x, X);\n    float fy = mx_floorfrac(p.y, Y);\n    float fz = mx_floorfrac(p.z, Z);\n    float u = mx_fade(fx);\n    float v = mx_fade(fy);\n    float w = mx_fade(fz);\n    vec3 result = mx_trilerp(\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z  ), fx    , fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z  ), fx-1.0, fy    , fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z  ), fx    , fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z  ), fx-1.0, fy-1.0, fz     ),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y  , Z+1), fx    , fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y  , Z+1), fx-1.0, fy    , fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X  , Y+1, Z+1), fx    , fy-1.0, fz-1.0),\n        mx_gradient_vec3(mx_hash_vec3(X+1, Y+1, Z+1), fx-1.0, fy-1.0, fz-1.0),\n        u, v, w);\n    return mx_gradient_scale3d(result);\n}\n\nfloat mx_cell_noise_float(float p)\n{\n    int ix = mx_floor(p);\n    return mx_bits_to_01(mx_hash_int(ix));\n}\n\nfloat mx_cell_noise_float(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return mx_bits_to_01(mx_hash_int(ix, iy));\n}\n\nfloat mx_cell_noise_float(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz));\n}\n\nfloat mx_cell_noise_float(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return mx_bits_to_01(mx_hash_int(ix, iy, iz, iw));\n}\n\nvec3 mx_cell_noise_vec3(float p)\n{\n    int ix = mx_floor(p);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, 0)),\n            mx_bits_to_01(mx_hash_int(ix, 1)),\n            mx_bits_to_01(mx_hash_int(ix, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec2 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec3 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, 2))\n    );\n}\n\nvec3 mx_cell_noise_vec3(vec4 p)\n{\n    int ix = mx_floor(p.x);\n    int iy = mx_floor(p.y);\n    int iz = mx_floor(p.z);\n    int iw = mx_floor(p.w);\n    return vec3(\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 0)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 1)),\n            mx_bits_to_01(mx_hash_int(ix, iy, iz, iw, 2))\n    );\n}\n\nfloat mx_fractal_noise_float(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    float result = 0.0;\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_float(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec3 mx_fractal_noise_vec3(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3 result = vec3(0.0);\n    float amplitude = 1.0;\n    for (int i = 0;  i < octaves; ++i)\n    {\n        result += amplitude * mx_perlin_noise_vec3(p);\n        amplitude *= diminish;\n        p *= lacunarity;\n    }\n    return result;\n}\n\nvec2 mx_fractal_noise_vec2(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    return vec2(mx_fractal_noise_float(p, octaves, lacunarity, diminish),\n                mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish));\n}\n\nvec4 mx_fractal_noise_vec4(vec3 p, int octaves, float lacunarity, float diminish)\n{\n    vec3  c = mx_fractal_noise_vec3(p, octaves, lacunarity, diminish);\n    float f = mx_fractal_noise_float(p+vec3(19, 193, 17), octaves, lacunarity, diminish);\n    return vec4(c, f);\n}\n\nfloat mx_worley_distance(vec2 p, int x, int y, int xoff, int yoff, float jitter, int metric)\n{\n    vec3  tmp = mx_cell_noise_vec3(vec2(x+xoff, y+yoff));\n    vec2  off = vec2(tmp.x, tmp.y);\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec2 cellpos = vec2(float(x), float(y)) + off;\n    vec2 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y);       // Manhattan distance\n    if (metric == 3)\n        return max(abs(diff.x), abs(diff.y));   // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_distance(vec3 p, int x, int y, int z, int xoff, int yoff, int zoff, float jitter, int metric)\n{\n    vec3  off = mx_cell_noise_vec3(vec3(x+xoff, y+yoff, z+zoff));\n\n    off -= 0.5f;\n    off *= jitter;\n    off += 0.5f;\n\n    vec3 cellpos = vec3(float(x), float(y), float(z)) + off;\n    vec3 diff = cellpos - p;\n    if (metric == 2)\n        return abs(diff.x) + abs(diff.y) + abs(diff.z); // Manhattan distance\n    if (metric == 3)\n        return max(max(abs(diff.x), abs(diff.y)), abs(diff.z)); // Chebyshev distance\n    // Either Euclidian or Distance^2\n    return dot(diff, diff);\n}\n\nfloat mx_worley_noise_float(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    float sqdist = 1e6f;        // Some big number for jitter > 1 (not all GPUs may be IEEE)\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            sqdist = min(sqdist, dist);\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.y = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec2 p, float jitter, int metric)\n{\n    int X, Y;\n    vec2 localpos = vec2(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            float dist = mx_worley_distance(localpos, x, y, X, Y, jitter, metric);\n            if (dist < sqdist.x)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = sqdist.x;\n                sqdist.x = dist;\n            }\n            else if (dist < sqdist.y)\n            {\n                sqdist.z = sqdist.y;\n                sqdist.y = dist;\n            }\n            else if (dist < sqdist.z)\n            {\n                sqdist.z = dist;\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nfloat mx_worley_noise_float(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    float sqdist = 1e6f;\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                sqdist = min(sqdist, dist);\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec2 mx_worley_noise_vec2(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec2 sqdist = vec2(1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.y = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}\n\nvec3 mx_worley_noise_vec3(vec3 p, float jitter, int metric)\n{\n    int X, Y, Z;\n    vec3 localpos = vec3(mx_floorfrac(p.x, X), mx_floorfrac(p.y, Y), mx_floorfrac(p.z, Z));\n    vec3 sqdist = vec3(1e6f, 1e6f, 1e6f);\n    for (int x = -1; x <= 1; ++x)\n    {\n        for (int y = -1; y <= 1; ++y)\n        {\n            for (int z = -1; z <= 1; ++z)\n            {\n                float dist = mx_worley_distance(localpos, x, y, z, X, Y, Z, jitter, metric);\n                if (dist < sqdist.x)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = sqdist.x;\n                    sqdist.x = dist;\n                }\n                else if (dist < sqdist.y)\n                {\n                    sqdist.z = sqdist.y;\n                    sqdist.y = dist;\n                }\n                else if (dist < sqdist.z)\n                {\n                    sqdist.z = dist;\n                }\n            }\n        }\n    }\n    if (metric == 0)\n        sqdist = sqrt(sqdist);\n    return sqdist;\n}')],fM=ux("float mx_perlin_noise_float( any p )",mM),gM=ux("vec2 mx_perlin_noise_vec2( any p )",mM),xM=ux("vec3 mx_perlin_noise_vec3( any p )",mM),vM=ux("float mx_cell_noise_float( vec3 p )",mM),yM=ux("float mx_worley_noise_float( any p, float jitter, int metric )",mM),_M=ux("float mx_worley_noise_vec2( any p, float jitter, int metric )",mM),bM=ux("float mx_worley_noise_vec3( any p, float jitter, int metric )",mM),MM=ux("float mx_fractal_noise_float( vec3 p, int octaves, float lacunarity, float diminish )",mM),wM=ux("float mx_fractal_noise_vec2( vec3 p, int octaves, float lacunarity, float diminish )",mM),SM=ux("float mx_fractal_noise_vec3( vec3 p, int octaves, float lacunarity, float diminish )",mM),TM=ux("float mx_fractal_noise_vec4( vec3 p, int octaves, float lacunarity, float diminish )",mM),EM=ux("vec3 mx_hsvtorgb(vec3 hsv)\n{\n    // Reference for this technique: Foley & van Dam\n    float h = hsv.x; float s = hsv.y; float v = hsv.z;\n    if (s < 0.0001f) {\n      return vec3 (v, v, v);\n    } else {\n        h = 6.0f * (h - floor(h));  // expand to [0..6)\n        int hi = int(trunc(h));\n        float f = h - float(hi);\n        float p = v * (1.0f-s);\n        float q = v * (1.0f-s*f);\n        float t = v * (1.0f-s*(1.0f-f));\n        if (hi == 0)\n            return vec3 (v, t, p);\n        else if (hi == 1)\n            return vec3 (q, v, p);\n        else if (hi == 2)\n            return vec3 (p, v, t);\n        else if (hi == 3)\n            return vec3 (p, q, v);\n        else if (hi == 4)\n            return vec3 (t, p, v);\n        return vec3 (v, p, q);\n    }\n}"),AM=ux("vec3 mx_rgbtohsv(vec3 c)\n{\n    // See Foley & van Dam\n    float r = c.x; float g = c.y; float b = c.z;\n    float mincomp = min (r, min(g, b));\n    float maxcomp = max (r, max(g, b));\n    float delta = maxcomp - mincomp;  // chroma\n    float h, s, v;\n    v = maxcomp;\n    if (maxcomp > 0.0f)\n        s = delta / maxcomp;\n    else s = 0.0f;\n    if (s <= 0.0f)\n        h = 0.0f;\n    else {\n        if      (r >= maxcomp) h = (g-b) / delta;\n        else if (g >= maxcomp) h = 2.0f + (b-r) / delta;\n        else                   h = 4.0f + (r-g) / delta;\n        h *= (1.0f/6.0f);\n        if (h < 0.0f)\n            h += 1.0f;\n    }\n    return vec3(h, s, v);\n}"),CM=(e,t)=>{e=Bg(e),t=Bg(t);const n=Nx(dv(Hg(fv(t),gv(t))),.7071067811865476);return Ov(Cx(e,n),Ax(e,n),t)},NM=(e,t,n,i)=>Pv(e,t,Iv(_g(n)[i])),LM=(e,t,n=zy())=>NM(e,t,n,"x"),RM=(e,t,n=zy())=>NM(e,t,n,"y"),PM=(e,t,n,i,s)=>Pv(e,t,CM(n,_g(i)[s])),IM=(e,t,n,i=zy())=>PM(e,t,n,i,"x"),DM=(e,t,n,i=zy())=>PM(e,t,n,i,"y"),OM=(e=1,t=0,n=zy())=>Ax(Nx(n,e),t),zM=(e=zy(),t=1,n=0)=>Ax(Nx(t,fM(mx(e,"vec2|vec3"))),n),FM=(e=zy(),t=1,n=0)=>Ax(Nx(t,gM(mx(e,"vec2|vec3"))),n),UM=(e=zy(),t=1,n=0)=>Ax(Nx(t,xM(mx(e,"vec2|vec3"))),n),BM=(e=zy(),t=1,n=0)=>{e=mx(e,"vec2|vec3");const i=Jg(xM(e),fM(Ax(e,Hg(19,73))));return Ax(Nx(t,i),n)},VM=(e=zy(),t=1)=>yM(mx(e,"vec2|vec3"),t,1),kM=(e=zy(),t=1)=>_M(mx(e,"vec2|vec3"),t,1),GM=(e=zy(),t=1)=>bM(mx(e,"vec2|vec3"),t,1),HM=(e=zy())=>vM(mx(e,"vec2|vec3")),WM=(e=zy(),t=3,n=2,i=.5,s=1)=>Nx(MM(e,t,n,i),s),jM=(e=zy(),t=3,n=2,i=.5,s=1)=>Nx(wM(e,t,n,i),s),XM=(e=zy(),t=3,n=2,i=.5,s=1)=>Nx(SM(e,t,n,i),s),qM=(e=zy(),t=3,n=2,i=.5,s=1)=>Nx(TM(e,t,n,i),s),YM={ArrayUniformNode:tf,AttributeNode:sf,BypassNode:rf,CodeNode:af,ContextNode:lf,ConstNode:of,ExpressionNode:hf,FunctionCallNode:uf,FunctionNode:df,InstanceIndexNode:pf,Node:Km,NodeAttribute:mf,NodeBuilder:Tf,NodeCode:vf,NodeFrame:Ef,NodeFunctionInput:Cf,NodeKeywords:yf,NodeUniform:ff,NodeVar:xf,NodeVarying:gf,PropertyNode:Nf,TempNode:cf,UniformNode:ef,VarNode:Pf,VaryingNode:nf,RangeNode:Ky,ComputeNode:lg,BitangentNode:qf,BufferNode:Yf,CameraNode:kf,CubeTextureNode:Yy,InstanceNode:Zy,MaterialNode:eg,MaterialReferenceNode:Kf,ModelNode:Bf,ModelViewProjectionNode:ig,NormalNode:Hf,Object3DNode:Ff,PointUVNode:sg,PositionNode:ng,ReferenceNode:Jf,ReflectVectorNode:qy,SkinningNode:Jy,TangentNode:jf,TextureNode:$f,UVNode:Zf,UserDataNode:ag,BlendModeNode:s_,ColorAdjustmentNode:c_,ColorSpaceNode:d_,FrontFacingNode:og,NormalMapNode:m_,ToneMappingNode:g_,MathNode:Of,OperatorNode:Rf,CondNode:cg,PunctualLightNode:w_,LightsNode:__,LightingNode:x_,LightingContextNode:S_,HemisphereLightNode:E_,EnvironmentNode:N_,AONode:L_,AnalyticLightNode:v_,ArrayElementNode:hg,ConvertNode:ug,JoinNode:dg,MatcapUVNode:R_,MaxMipLevelNode:A_,OscNode:O_,RemapNode:z_,RotateUVNode:F_,SplitNode:If,SpriteSheetUVNode:U_,TimerNode:I_,CheckerNode:k_,FogNode:G_,FogRangeNode:H_,NodeLoader:B_,NodeObjectLoader:Kb,NodeMaterialLoader:Jb,WGSLNodeParser:aM,GLSLNodeParser:uM},ZM=e=>new YM[e];class $M{constructor(e){this.Engine=e,this.Assemblies={},this.Entities=y()}async addEntity(e){this.Entities.add(e),await e.onBuild(),this.Engine.Tools.RendererInterface.Selected.Renderer&&this.Engine.Tools.RendererInterface.refreshSceneObjectList(),this.Engine.Tools.ECSInterface.addEntityToList(e,this.Entities.array.length-1)}async assemble(e,...t){const n=new km(this);return await this.Assemblies[e](n,...t),await this.addEntity(n),n}createAssembly(e,t){this.Assemblies[e]=t}async removeEntity(e){if(this.Entities.check(e).byUUID()){const t=this.Entities.get(e).byUUID();await t.remove(),this.Entities.remove(e).byUUID(),this.Engine.Tools.RendererInterface.Selected.Renderer&&this.Engine.Tools.RendererInterface.refreshSceneObjectList(),this.Engine.Tools.ECSInterface.removeEntityFromList(t)}}update(e,t,n){for(let i of this.Entities.array)i.update(e,t,n)}}class JM{constructor(){this.renderOrder=[],this.Elements={Main:this.createUI(),States:{}},this.States=y(),this.buildState("Rendering"),this.buildState("Interface"),this.buildState("Dev",{displayed:!1})}async buildState(e,t={}){const n=new bm(this,e,t);return this.States.add(n),this.Elements.States[n.getUUID()]=n.getElement(),n}createUI(){document.body.style.margin="0px",document.body.style.overflow="hidden";const e=document.createElement("ui");return e.style.position="absolute",e.style.left="0px",e.style.top="0px",e.style.width="100vw",e.style.height="100vh",e.style.display="inline-block",document.body.appendChild(e),e}createElements(e,t){switch(typeof t){case"undefined":t=this.Elements.Main;break;case"string":if(t.includes("state:")){if(t.includes("state:uuid@"))return this.States.get(t.replace("state:uuid@")).byUUID().getElement();if(t.includes("state:name@"))return this.States.get(t.replace("state:name@")).byName().getElement()}}const n=t;(new DOMParser).parseFromString(e,"text/html").body.childNodes.forEach((e=>n.appendChild(e)))}getState(e){return this.States.get(e)}}class KM{constructor(e,t){this.x=e||0,this.y=t||0}getEquivalent(e){switch(this[e]){case"window-x":return window.innerWidth;case"window-y":return window.innerHeight;default:return this[e]}}set(e,t){this.x=e,this.y=t}}class QM{constructor(e,t,n,i={}){this.active=v(i,"active",!0),this.useWebGPU=v(i,"active",!1),this.name=v(i,"name",`renderer#${QM.prototype.$num}`),this.pointerEvents=v(i,"pointerEvents","all"),this.Manager=e,this.dbp=[],this.DBM=y(),this.Camera=n,this.Scene=t,this.Settings={postProcessing:v(i,"postProcessing",!1),Size:new KM(v(i,"width","window-x"),v(i,"height","window-y"))},this.Materials={Depth:new al},this.Materials.Depth.depthPacking=$t,this.Materials.Depth.blending=D,QM.prototype.$num++}async addDepthBasedPass(e,...t){this.dbp.push(new e(this,...t))}append(e){e.appendChild(this.Renderer.domElement)}async onBuild(){this.Renderer=this.useWebGPU?new WebGPURenderer:new _l,this.Renderer.setPixelRatio(window.devicePixelRatio),this.Renderer.active=this.active,this.Renderer.name=this.name,this.Renderer.domElement.style.pointerEvents=this.pointerEvents;const e=this.Renderer.getPixelRatio(),t=this.Settings.Size.getEquivalent("x")*e,n=this.Settings.Size.getEquivalent("y")*e;if(this.Targets={Color:new gi(t,n),Depth:new gi(t,n,{minFilter:Ce,magFilter:Ce})},this.resize(),this.Manager.Engine.Managers.Interface.getState("Rendering").byName().appendChild(this.Renderer.domElement),this.useWebGPU)return this.Renderer.init()}async removeDepthBasedMesh(e){RENDERER.DBM.check(e).byUUID()&&RENDERER.DBM.remove(e).byUUID()}render(e){this.Settings.postProcessing?this.Composer.render(e):this.Renderer.render(this.Scene,this.Camera)}resize(){const e=this.Renderer.getPixelRatio(),t=this.Settings.Size.getEquivalent("x"),n=this.Settings.Size.getEquivalent("y"),i=t*e,s=n*e;this.Renderer.setSize(t,n),this.Targets.Color.setSize(i,s),this.Targets.Depth.setSize(i,s),this.updateCamera()}setCamera(e){this.Camera=e,this.updateCamera()}setScene(e){this.Scene=e}updateCamera(){const e=this.Settings.Size.getEquivalent("x"),t=this.Settings.Size.getEquivalent("y");this.Camera.aspect=e/t,this.Camera.updateProjectionMatrix(),this.Camera.helper.update()}}QM.prototype.$num=0,QM.prototype.isRenderer=!0;class ew{constructor(e){this.Engine=e,this.Renderers=new Cm,this.Settings={PostProcessing:{enabled:!0},Shadows:{enabled:!0,Map:{type:A}}}}async addDepthBasedMesh(e,t){const n=this.Renderers.get(e);await n.addDepthBasedMesh(t)}async addDepthBasedPass(e,t,...n){const i=this.Renderers.get(e);await i.addDepthBasedPass(t,...n)}async removeDepthBasedMesh(e,t){const n=this.Renderers.get(e);await n.removeDepthBasedMesh(t.uuid)}async buildRenderer(e,t,n,i={}){const s=new QM(this,t,n,i);await s.onBuild(),this.Renderers.add(e,s),this.Engine.Tools.RendererInterface.selectRenderer(e),this.Engine.Tools.RendererInterface.refreshRendererList()}get(e){return this.Renderers.get(e)}resize(){for(const e in this.Renderers.Collection)this.Renderers.Collection[e].resize()}update(e){for(let t of this.Renderers.active)this.Renderers.Collection[t].render(e)}}class tw{constructor(){this.Cameras=y()}async buildCamera(e,t,...n){const i=new t(...n);return i.name=e,this.Cameras.add(i),i}check(e){return this.Cameras.check(e).byName()}get(e){return this.Cameras.get(e).byName()}remove(...e){this.Cameras.remove(...e).byName()}}class nw{constructor(){this.Scenes=y()}async buildScene(e,t={}){const n=new Sl;n.name=e;for(const e in t)n[e]=t[e];return this.Scenes.add(n),n}check(e){return this.Scenes.check(e).byName()}get(e){return this.Scenes.get(e).byName()}remove(...e){this.Scenes.remove(...e).byName()}}class iw{constructor(e,t,n,i,s){this.name=t||"Attribute",this.dataSuffix=i||"",this.Tool=e,this.Tool.Elements[`${this.name}Label`]=document.createElement("div"),this.Tool.Elements[`${this.name}Label`].innerHTML=n||"Attribute",this.Tool.Elements[`${this.name}Label`].style.color="white",this.Tool.Elements[`${this.name}Label`].style.margin="0px 4px 0px 8px",this.Tool.Elements[`${this.name}Label`].style.fontSize="14px",this.Tool.Elements[`${this.name}Count`]=document.createElement("div"),this.Tool.Elements[`${this.name}Count`].innerHTML=`~ ${this.dataSuffix}`,this.Tool.Elements[`${this.name}Count`].style.color=s||"cyan",this.Tool.Elements[`${this.name}Count`].style.margin="0px 8px 0px 8px",this.Tool.Elements[`${this.name}Count`].style.fontSize="14px",this.Tool.Elements[this.name]=document.createElement("div"),this.Tool.Elements[this.name].style.width="100%",this.Tool.Elements[this.name].style.height="16px",this.Tool.Elements[this.name].style.display="flex",this.Tool.Elements[this.name].style.alignItems="center",this.Tool.Elements[this.name].style.justifyContent="flex-start",this.Tool.Elements[this.name].appendChild(this.Tool.Elements[`${this.name}Label`]),this.Tool.Elements[this.name].appendChild(this.Tool.Elements[`${this.name}Count`]),this.Tool.Elements.Main.appendChild(this.Tool.Elements[this.name])}update(e){this.Tool.Elements[`${this.name}Count`].innerHTML=`${e} ${this.dataSuffix}`}}class sw{constructor(e){this.Engine=e,this.displayed=!0,this.headings=0,this.Attributes={},this.Elements={},this.createMainElement()}createAttribute(e,t,n,i){this.Attributes[e]=new iw(this,e,t,n,i)}createHeading(e,t,n,i){this.Elements[`header#${this.headings}`]=document.createElement("div"),this.Elements[`header#${this.headings}`].innerHTML=e||"Heading",this.Elements[`header#${this.headings}`].style.width="100%",this.Elements[`header#${this.headings}`].style.backgroundColor=t||"rgba(0, 0, 0, 0.25)",this.Elements[`header#${this.headings}`].style.height=n||"32px",this.Elements[`header#${this.headings}`].style.color="white",this.Elements[`header#${this.headings}`].style.textAlign="center",this.Elements[`header#${this.headings}`].style.lineHeight=n||"32px",this.Elements[`header#${this.headings}`].style.fontSize=i||"18px",this.Elements[`header#${this.headings}`].style.fontWeight="bold",this.Elements.Main.appendChild(this.Elements[`header#${this.headings}`]),this.headings++}createMainElement(){this.Elements.Main=document.createElement("div"),this.Elements.Main.style.position="absolute",this.Elements.Main.style.left="8px",this.Elements.Main.style.top="8px",this.Elements.Main.style.width="340px",this.Elements.Main.style.height="340px",this.Elements.Main.style.display="inline-block",this.Elements.Main.style.backgroundColor="rgba( 0, 0, 0, 0.75 )",this.Elements.Main.style.borderRadius="4px",this.Elements.Main.style.pointerEvents="all",this.Elements.Main.style.fontFamily="consolas",this.Elements.Main.style.zIndex="9999999",this.Elements.Main.style.overflow="hidden"}getElement(){return this.Elements.Main}hide(){this.displayed&&(this.Elements.Main.style.display="none",this.displayed=!1)}show(){this.displayed||(this.Elements.Main.style.display="inline-block",this.displayed=!0)}}class rw extends sw{constructor(e){super(e),this.createElements()}createElements(){this.Elements.Main=document.createElement("div"),this.Elements.Main.style.position="absolute",this.Elements.Main.style.left="8px",this.Elements.Main.style.bottom="8px",this.Elements.Main.style.width="340px",this.Elements.Main.style.height="330px",this.Elements.Main.style.display="inline-block",this.Elements.Main.style.backgroundColor="rgba( 0, 0, 0, 0.75 )",this.Elements.Main.style.borderRadius="4px",this.Elements.Main.style.pointerEvents="all",this.Elements.Main.style.fontFamily="consolas",this.Elements.Main.style.zIndex="9999999",this.Elements.Main.style.overflow="hidden",this.Elements.EntityList=document.createElement("div"),this.Elements.EntityList.style.margin="6px 0px 6px 8px",this.Elements.EntityList.style.width="calc( 100% - 16px )",this.Elements.EntityList.style.height="256px",this.Elements.EntityList.style.display="inline-block",this.Elements.EntityList.style.overflowX="hidden",this.Elements.EntityList.style.overflowY="auto",this.Elements.EntityList.style.borderRadius="4px",this.Elements.EntityList.style.backgroundColor="rgba( 0, 0, 0, 0.25 )",this.createHeading("Entities","rgba(0, 0, 0, 0.25)","32px","18px"),this.Elements.Main.appendChild(this.Elements.EntityList),this.Engine.Managers.Interface.getState("Dev").byName().appendChild(this.Elements.Main)}addEntityToList(e,t){const n=document.createElement("div");n.style.width="100%",n.style.height="24px",n.style.display="flex",n.style.flexDirection="row",n.style.alignItems="center",n.style.justifyContent="flex-start",n.style.whiteSpace="nowrap",n.style.cursor="pointer",n.id=`ecs-${e.uuid}`,t%2==0&&(n.style.backgroundColor="rgba( 0, 0, 0, 0.25 )");const i=document.createElement("div");i.setAttribute("uuid",e.uuid),i.innerHTML="✖",i.style.width="24px",i.style.height="24px",i.style.color="grey",i.style.fontSize="16px",i.style.textAlign="center",i.style.margin="0px 0px 0px 8px",i.addEventListener("pointerup",(e=>{const t=e.target.getAttribute("uuid");console.log(t),this.Engine.Managers.ECS.removeEntity(t)}));const s=document.createElement("div");s.innerHTML=e.name,s.style.color="white",s.style.margin="0px 8px 0px 8px",s.style.fontSize="14px";const r=document.createElement("div");r.innerHTML=e.uuid,r.style.color="cyan",r.style.margin="0px 8px 0px 8px",r.style.fontSize="12px",n.appendChild(i),n.appendChild(s),n.appendChild(r),this.Elements.EntityList.appendChild(n)}removeEntityFromList(e){this.Elements.EntityList.querySelector(`div#ecs-${e.uuid}`).remove()}}class aw extends sw{constructor(e){super(e),this.Data={fps:0,memMax:0,memMin:0,ms:0},this.Selected={Camera:null,Renderer:null,Scene:null},this.Time={begin:performance.now(),frames:0,prev:performance.now()},this.createElements()}createElements(){this.Elements.Main=document.createElement("div"),this.Elements.Main.style.position="absolute",this.Elements.Main.style.left="8px",this.Elements.Main.style.top="8px",this.Elements.Main.style.width="340px",this.Elements.Main.style.height="608px",this.Elements.Main.style.display="inline-block",this.Elements.Main.style.backgroundColor="rgba( 0, 0, 0, 0.75 )",this.Elements.Main.style.borderRadius="4px",this.Elements.Main.style.pointerEvents="all",this.Elements.Main.style.fontFamily="consolas",this.Elements.Main.style.zIndex="9999999",this.Elements.Main.style.overflow="hidden",this.Elements.RendererSelectLabel=document.createElement("div"),this.Elements.RendererSelectLabel.innerHTML="Renderer selected",this.Elements.RendererSelectLabel.style.color="white",this.Elements.RendererSelectLabel.style.margin="0px 4px 0px 8px",this.Elements.RendererSelectLabel.style.fontSize="14px",this.Elements.RendererSelectMenu=document.createElement("select"),this.Elements.RendererSelectMenu.style.margin="0px 4px 0px 4px",this.Elements.RendererSelectMenu.style.fontFamily="consolas",this.Elements.RendererSelectMenu.style.backgroundColor="rgba( 0, 0, 0, 0.5 )",this.Elements.RendererSelectMenu.style.border="none",this.Elements.RendererSelectMenu.style.height="20px",this.Elements.RendererSelectMenu.style.color="white",this.Elements.RendererSelectMenu.style.borderRadius="4px",this.Elements.RendererSelectMenu.style.cursor="pointer",this.Elements.RendererSelectMenu.addEventListener("change",(e=>this.selectRenderer(e.target.value))),this.Elements.RendererSelectRefresh=document.createElement("div"),this.Elements.RendererSelectRefresh.innerHTML="↻",this.Elements.RendererSelectRefresh.style.margin="0px 4px 0px 4px",this.Elements.RendererSelectRefresh.style.fontFamily="consolas",this.Elements.RendererSelectRefresh.style.backgroundColor="rgba( 0, 0, 0, 0.5 )",this.Elements.RendererSelectRefresh.style.border="none",this.Elements.RendererSelectRefresh.style.width="20px",this.Elements.RendererSelectRefresh.style.height="20px",this.Elements.RendererSelectRefresh.style.color="white",this.Elements.RendererSelectRefresh.style.borderRadius="4px",this.Elements.RendererSelectRefresh.style.textAlign="center",this.Elements.RendererSelectRefresh.style.cursor="pointer",this.Elements.RendererSelectRefresh.addEventListener("pointerup",(()=>this.refreshRendererList())),this.Elements.RendererSelect=document.createElement("div"),this.Elements.RendererSelect.style.width="100%",this.Elements.RendererSelect.style.height="24px",this.Elements.RendererSelect.style.display="flex",this.Elements.RendererSelect.style.alignItems="center",this.Elements.RendererSelect.style.justifyContent="flex-start",this.Elements.RendererSelect.appendChild(this.Elements.RendererSelectLabel),this.Elements.RendererSelect.appendChild(this.Elements.RendererSelectMenu),this.Elements.RendererSelect.appendChild(this.Elements.RendererSelectRefresh),this.Elements.CameraSelectLabel=document.createElement("div"),this.Elements.CameraSelectLabel.innerHTML="Camera selected",this.Elements.CameraSelectLabel.style.color="white",this.Elements.CameraSelectLabel.style.margin="0px 4px 0px 8px",this.Elements.CameraSelectLabel.style.fontSize="14px",this.Elements.CameraSelectMenu=document.createElement("select"),this.Elements.CameraSelectMenu.style.margin="0px 4px 0px 4px",this.Elements.CameraSelectMenu.style.fontFamily="consolas",this.Elements.CameraSelectMenu.style.backgroundColor="rgba( 0, 0, 0, 0.5 )",this.Elements.CameraSelectMenu.style.border="none",this.Elements.CameraSelectMenu.style.height="20px",this.Elements.CameraSelectMenu.style.color="white",this.Elements.CameraSelectMenu.style.borderRadius="4px",this.Elements.CameraSelectMenu.style.cursor="pointer",this.Elements.CameraSelectMenu.addEventListener("change",(e=>this.selectCamera(e.target.value))),this.Elements.CameraSelectRefresh=document.createElement("div"),this.Elements.CameraSelectRefresh.innerHTML="↻",this.Elements.CameraSelectRefresh.style.margin="0px 4px 0px 4px",this.Elements.CameraSelectRefresh.style.fontFamily="consolas",this.Elements.CameraSelectRefresh.style.backgroundColor="rgba( 0, 0, 0, 0.5 )",this.Elements.CameraSelectRefresh.style.border="none",this.Elements.CameraSelectRefresh.style.width="20px",this.Elements.CameraSelectRefresh.style.height="20px",this.Elements.CameraSelectRefresh.style.color="white",this.Elements.CameraSelectRefresh.style.borderRadius="4px",this.Elements.CameraSelectRefresh.style.textAlign="center",this.Elements.CameraSelectRefresh.style.cursor="pointer",this.Elements.CameraSelectRefresh.addEventListener("pointerup",(()=>this.refreshCameraList())),this.Elements.CameraSelect=document.createElement("div"),this.Elements.CameraSelect.style.width="100%",this.Elements.CameraSelect.style.height="24px",this.Elements.CameraSelect.style.display="flex",this.Elements.CameraSelect.style.alignItems="center",this.Elements.CameraSelect.style.justifyContent="flex-start",this.Elements.CameraSelect.appendChild(this.Elements.CameraSelectLabel),this.Elements.CameraSelect.appendChild(this.Elements.CameraSelectMenu),this.Elements.CameraSelect.appendChild(this.Elements.CameraSelectRefresh),this.Elements.SceneSelectLabel=document.createElement("div"),this.Elements.SceneSelectLabel.innerHTML="Scene selected",this.Elements.SceneSelectLabel.style.color="white",this.Elements.SceneSelectLabel.style.margin="0px 4px 0px 8px",this.Elements.SceneSelectLabel.style.fontSize="14px",this.Elements.SceneSelectMenu=document.createElement("select"),this.Elements.SceneSelectMenu.style.margin="0px 4px 0px 4px",this.Elements.SceneSelectMenu.style.fontFamily="consolas",this.Elements.SceneSelectMenu.style.backgroundColor="rgba( 0, 0, 0, 0.5 )",this.Elements.SceneSelectMenu.style.border="none",this.Elements.SceneSelectMenu.style.height="20px",this.Elements.SceneSelectMenu.style.color="white",this.Elements.SceneSelectMenu.style.borderRadius="4px",this.Elements.SceneSelectMenu.style.cursor="pointer",this.Elements.SceneSelectMenu.addEventListener("change",(e=>this.selectScene(e.target.value))),this.Elements.SceneSelectRefresh=document.createElement("div"),this.Elements.SceneSelectRefresh.innerHTML="↻",this.Elements.SceneSelectRefresh.style.margin="0px 4px 0px 4px",this.Elements.SceneSelectRefresh.style.fontFamily="consolas",this.Elements.SceneSelectRefresh.style.backgroundColor="rgba( 0, 0, 0, 0.5 )",this.Elements.SceneSelectRefresh.style.border="none",this.Elements.SceneSelectRefresh.style.width="20px",this.Elements.SceneSelectRefresh.style.height="20px",this.Elements.SceneSelectRefresh.style.color="white",this.Elements.SceneSelectRefresh.style.borderRadius="4px",this.Elements.SceneSelectRefresh.style.textAlign="center",this.Elements.SceneSelectRefresh.style.cursor="pointer",this.Elements.SceneSelectRefresh.addEventListener("pointerup",(()=>{this.refreshSceneList(),this.refreshSceneObjectList()})),this.Elements.SceneSelect=document.createElement("div"),this.Elements.SceneSelect.style.width="100%",this.Elements.SceneSelect.style.height="24px",this.Elements.SceneSelect.style.display="flex",this.Elements.SceneSelect.style.alignItems="center",this.Elements.SceneSelect.style.justifyContent="flex-start",this.Elements.SceneSelect.appendChild(this.Elements.SceneSelectLabel),this.Elements.SceneSelect.appendChild(this.Elements.SceneSelectMenu),this.Elements.SceneSelect.appendChild(this.Elements.SceneSelectRefresh),this.Elements.SceneObjectsList=document.createElement("div"),this.Elements.SceneObjectsList.style.margin="6px 0px 6px 8px",this.Elements.SceneObjectsList.style.width="calc( 100% - 16px )",this.Elements.SceneObjectsList.style.height="256px",this.Elements.SceneObjectsList.style.display="inline-block",this.Elements.SceneObjectsList.style.overflowX="hidden",this.Elements.SceneObjectsList.style.overflowY="auto",this.Elements.SceneObjectsList.style.borderRadius="4px",this.Elements.SceneObjectsList.style.backgroundColor="rgba( 0, 0, 0, 0.25 )",this.createHeading("Renderers","rgba(0, 0, 0, 0.25)","32px","18px"),this.Elements.Main.appendChild(this.Elements.RendererSelect),this.Elements.Main.appendChild(this.Elements.CameraSelect),this.Elements.Main.appendChild(this.Elements.SceneSelect),this.Elements.Main.appendChild(this.Elements.SceneObjectsList),this.createHeading("In-frame Data","rgba(0, 0, 0, 0.25)","24px","16px"),this.createHeading('Updated every <div style="color:limegreen;display:inline;">1s<div>',"rgba(0, 0, 0, 0.125)","16px","12px"),this.createAttribute("DrawCalls","Draw Calls","","cyan"),this.createAttribute("Poly","Polygons","","cyan"),this.createAttribute("Points","Points","","cyan"),this.createAttribute("Lines","Lines","","cyan"),this.createAttribute("Geometries","Geometries","","magenta"),this.createAttribute("Textures","Textures","","magenta"),this.createHeading("General Data","rgba(0, 0, 0, 0.25)","24px","16px"),this.createHeading('Updated every <div style="color:limegreen;display:inline;">1s<div>',"rgba(0, 0, 0, 0.125)","16px","12px"),this.createAttribute("FPS","FPS","","cyan"),this.createAttribute("Mem","Memory Usage","MB","magenta"),this.createAttribute("MS","Latency","MS","limegreen"),this.Engine.Managers.Interface.getState("Dev").byName().appendChild(this.Elements.Main)}refreshCameraList(){this.Elements.CameraSelectMenu.innerHTML="";for(let e=0;e<this.Engine.Managers.Camera.Cameras.array.length;e++){const t=document.createElement("option");t.innerHTML=this.Engine.Managers.Camera.Cameras.nameToIndex[e],this.Elements.CameraSelectMenu.appendChild(t)}}refreshRendererList(){this.Elements.RendererSelectMenu.innerHTML="";for(const e in this.Engine.Managers.Renderer.Renderers.Collection){const t=document.createElement("option");t.innerHTML=e,this.Elements.RendererSelectMenu.appendChild(t)}this.refreshCameraList(),this.refreshSceneList(),this.refreshSceneObjectList()}refreshSceneList(){this.Elements.SceneSelectMenu.innerHTML="";for(let e=0;e<this.Engine.Managers.Scene.Scenes.array.length;e++){const t=document.createElement("option");t.innerHTML=this.Engine.Managers.Scene.Scenes.nameToIndex[e],this.Elements.SceneSelectMenu.appendChild(t)}}refreshSceneObjectList(){let e=0;this.Elements.SceneObjectsList.innerHTML="",this.Selected.Scene.traverse((t=>{if(t.isMesh||t.isGroup){const n=document.createElement("div");n.style.width="100%",n.style.height="24px",n.style.display="flex",n.style.flexDirection="row",n.style.alignItems="center",n.style.justifyContent="flex-start",n.style.whiteSpace="nowrap",n.style.cursor="pointer",e%2==0&&(n.style.backgroundColor="rgba( 0, 0, 0, 0.25 )");const i=document.createElement("div");i.setAttribute("uuid",t.uuid),i.innerHTML="👁",i.style.width="24px",i.style.height="24px",i.style.color=t.visible&&t.parent.visible?"limegreen":"grey",i.style.fontSize="16px",i.style.margin="0px 0px 0px 8px",i.addEventListener("pointerup",(e=>{const t=e.target.getAttribute("uuid");this.Selected.Scene.traverse((e=>{e.uuid==t&&(e.visible?e.visible=!1:e.visible=!0)})),this.refreshSceneObjectList()}));const s=document.createElement("div");s.innerHTML=t.name.length>0?t.name:t.isGroup?"Unnamed Group":"Unnamed Mesh",s.style.color="white",s.style.margin="0px 8px 0px 8px",s.style.fontSize="14px";const r=document.createElement("div");r.innerHTML=`${t.isGroup?"Group":"Mesh"} ${t.parent&&!t.parent.isScene?` (P: ${t.parent.name.length>0?t.parent.name:t.parent.isGroup?"Unnamed Group":"Unnamed Mesh"})`:""}`,r.style.color="magenta",r.style.margin="0px 8px 0px 4px",r.style.fontSize="12px";const a=document.createElement("div");a.innerHTML=t.uuid,a.style.color="cyan",a.style.margin="0px 8px 0px 8px",a.style.fontSize="12px",n.appendChild(i),n.appendChild(s),n.appendChild(r),n.appendChild(a),this.Elements.SceneObjectsList.appendChild(n),e++}}))}selectCamera(e){const t=this.Engine.Managers.Camera.get(e);this.Selected.Camera=t,this.Elements.CameraSelectMenu.value=e,this.Selected.Renderer.setCamera(t)}selectRenderer(e){const t=this.Engine.Managers.Renderer.get(e);this.Selected.Renderer=t,this.Elements.RendererSelectMenu.value=e,this.selectScene(t.Scene.name),this.selectCamera(t.Camera.name)}selectScene(e){const t=this.Engine.Managers.Scene.get(e);this.Selected.Scene=t,this.Elements.SceneSelectMenu.value=e,this.Selected.Renderer.setScene(t)}begin(){this.displayed&&(this.Time.begin=performance.now())}end(){if(this.displayed){this.Time.frames++;const e=performance.now();if(this.Data.ms=Math.round(e-this.Time.begin),e>=this.Time.prev+1e3){this.Data.fps=Math.round(1e3*this.Time.frames/(e-this.Time.prev)),this.Time.prev=e,this.Time.frames=0;const t=performance.memory;if(this.Data.memMin=Math.round(t.usedJSHeapSize/1048576),this.Data.memMax=Math.round(t.jsHeapSizeLimit/1048576),this.Selected.Renderer){const e=this.Selected.Renderer.useWebGPU?"_info":"info";this.Attributes.DrawCalls.update(this.Selected.Renderer.Renderer[e].render.calls),this.Attributes.Poly.update(this.Selected.Renderer.Renderer[e].render.triangles),this.Attributes.Points.update(this.Selected.Renderer.Renderer[e].render.points),this.Attributes.Lines.update(this.Selected.Renderer.Renderer[e].render.lines),this.Attributes.Geometries.update(this.Selected.Renderer.Renderer[e].memory.geometries),this.Attributes.Textures.update(this.Selected.Renderer.Renderer[e].memory.textures)}this.Attributes.FPS.update(`${this.Data.fps} (Anim: ${this.Engine.Settings.animUpdateInterval})`),this.Attributes.Mem.update(`${this.Data.memMin} / ${this.Data.memMax}`),this.Attributes.MS.update(this.Data.ms)}}}}class ow{constructor(e={}){this.updateAnim=!1,this.Clock=new Ad,this.Settings={animUpdateInterval:v(e,"animUpdateInterval",60),devToolsShowing:v(e,"devToolsShowing",!1)},this.Time={delta:0,elapsed:0,last:0},this.Three=s,this.ECS=c,this.Managers={Camera:new tw,ECS:new $M(this),Interface:new JM,Renderer:new ew(this),Scene:new nw},this.Tools={ECSInterface:new rw(this),RendererInterface:new aw(this)},this.Utils=l,this.ThreeNodes=u,this.render=()=>{requestAnimationFrame((e=>{this.Tools.RendererInterface.begin(),this.Time.delta=this.Clock.getDelta(),this.Time.elapsed=this.Clock.getElapsedTime(),(!this.Time.last||e-this.Time.last>=1e3/(this.Settings.animUpdateInterval+1))&&(this.Time.last=e,this.updateAnim=!0),this.onRender(),this.Managers.ECS.update(this.Time.delta,this.Time.elapsed,this.updateAnim),this.Managers.Renderer.update(this.Time.delta),this.updateAnim&&(this.updateAnim=!1),this.Tools.RendererInterface.end(),this.render()}))}}async onStart(e=this){}onRender(){}async buildEvents(){window.addEventListener("resize",(()=>{this.Managers.Renderer.resize()})),window.addEventListener("keyup",(e=>{"F9"===e.key&&this.toggleTools()}))}toggleTools(){this.Settings.devToolsShowing?(this.Managers.Interface.getState("Dev").byName().hide(),this.Settings.devToolsShowing=!1):(this.Managers.Interface.getState("Dev").byName().show(),this.Settings.devToolsShowing=!0)}async start(){await this.buildEvents(),await this.onStart(this),this.render()}}module.exports["dimensional-engine"]=t})();